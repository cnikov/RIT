{"ast":null,"code":"/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n    r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n    d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = this && this.__param || function (paramIndex, decorator) {\n  return function (target, key) {\n    decorator(target, key, paramIndex);\n  };\n};\nimport { addDisposableListener } from '../../../base/browser/dom.js';\nimport { StandardMouseEvent } from '../../../base/browser/mouseEvent.js';\nimport { ToolBar } from '../../../base/browser/ui/toolbar/toolbar.js';\nimport { Separator, toAction } from '../../../base/common/actions.js';\nimport { coalesceInPlace } from '../../../base/common/arrays.js';\nimport { intersection } from '../../../base/common/collections.js';\nimport { Iterable } from '../../../base/common/iterator.js';\nimport { DisposableStore } from '../../../base/common/lifecycle.js';\nimport { localize } from '../../../nls.js';\nimport { IMenuService, MenuItemAction, SubmenuItemAction } from '../common/actions.js';\nimport { IContextKeyService } from '../../contextkey/common/contextkey.js';\nimport { IContextMenuService } from '../../contextview/browser/contextView.js';\nimport { IKeybindingService } from '../../keybinding/common/keybinding.js';\nimport { ITelemetryService } from '../../telemetry/common/telemetry.js';\n/**\n * The `WorkbenchToolBar` does\n * - support hiding of menu items\n * - lookup keybindings for each actions automatically\n * - send `workbenchActionExecuted`-events for each action\n *\n * See {@link MenuWorkbenchToolBar} for a toolbar that is backed by a menu.\n */\nlet WorkbenchToolBar = class WorkbenchToolBar extends ToolBar {\n  constructor(container, _options, _menuService, _contextKeyService, _contextMenuService, keybindingService, telemetryService) {\n    super(container, _contextMenuService, Object.assign(Object.assign({\n      // defaults\n      getKeyBinding: action => {\n        var _a;\n        return (_a = keybindingService.lookupKeybinding(action.id)) !== null && _a !== void 0 ? _a : undefined;\n      }\n    }, _options), {\n      // mandatory (overide options)\n      allowContextMenu: true,\n      skipTelemetry: typeof (_options === null || _options === void 0 ? void 0 : _options.telemetrySource) === 'string'\n    }));\n    this._options = _options;\n    this._menuService = _menuService;\n    this._contextKeyService = _contextKeyService;\n    this._contextMenuService = _contextMenuService;\n    this._sessionDisposables = this._store.add(new DisposableStore());\n    // telemetry logic\n    const telemetrySource = _options === null || _options === void 0 ? void 0 : _options.telemetrySource;\n    if (telemetrySource) {\n      this._store.add(this.actionBar.onDidRun(e => telemetryService.publicLog2('workbenchActionExecuted', {\n        id: e.action.id,\n        from: telemetrySource\n      })));\n    }\n  }\n  setActions(_primary, _secondary = [], menuIds) {\n    var _a, _b, _c;\n    this._sessionDisposables.clear();\n    const primary = _primary.slice(); // for hiding and overflow we set some items to undefined\n    const secondary = _secondary.slice();\n    const toggleActions = [];\n    let toggleActionsCheckedCount = 0;\n    const extraSecondary = [];\n    let someAreHidden = false;\n    // unless disabled, move all hidden items to secondary group or ignore them\n    if (((_a = this._options) === null || _a === void 0 ? void 0 : _a.hiddenItemStrategy) !== -1 /* HiddenItemStrategy.NoHide */) {\n      for (let i = 0; i < primary.length; i++) {\n        const action = primary[i];\n        if (!(action instanceof MenuItemAction) && !(action instanceof SubmenuItemAction)) {\n          // console.warn(`Action ${action.id}/${action.label} is not a MenuItemAction`);\n          continue;\n        }\n        if (!action.hideActions) {\n          continue;\n        }\n        // collect all toggle actions\n        toggleActions.push(action.hideActions.toggle);\n        if (action.hideActions.toggle.checked) {\n          toggleActionsCheckedCount++;\n        }\n        // hidden items move into overflow or ignore\n        if (action.hideActions.isHidden) {\n          someAreHidden = true;\n          primary[i] = undefined;\n          if (((_b = this._options) === null || _b === void 0 ? void 0 : _b.hiddenItemStrategy) !== 0 /* HiddenItemStrategy.Ignore */) {\n            extraSecondary[i] = action;\n          }\n        }\n      }\n    }\n    // count for max\n    if (((_c = this._options) === null || _c === void 0 ? void 0 : _c.overflowBehavior) !== undefined) {\n      const exemptedIds = intersection(new Set(this._options.overflowBehavior.exempted), Iterable.map(primary, a => a === null || a === void 0 ? void 0 : a.id));\n      const maxItems = this._options.overflowBehavior.maxItems - exemptedIds.size;\n      let count = 0;\n      for (let i = 0; i < primary.length; i++) {\n        const action = primary[i];\n        if (!action) {\n          continue;\n        }\n        count++;\n        if (exemptedIds.has(action.id)) {\n          continue;\n        }\n        if (count >= maxItems) {\n          primary[i] = undefined;\n          extraSecondary[i] = action;\n        }\n      }\n    }\n    // coalesce turns Array<IAction|undefined> into IAction[]\n    coalesceInPlace(primary);\n    coalesceInPlace(extraSecondary);\n    super.setActions(primary, Separator.join(extraSecondary, secondary));\n    // add context menu for toggle actions\n    if (toggleActions.length > 0) {\n      this._sessionDisposables.add(addDisposableListener(this.getElement(), 'contextmenu', e => {\n        var _a, _b, _c, _d, _e;\n        const event = new StandardMouseEvent(e);\n        const action = this.getItemAction(event.target);\n        if (!action) {\n          return;\n        }\n        event.preventDefault();\n        event.stopPropagation();\n        let noHide = false;\n        // last item cannot be hidden when using ignore strategy\n        if (toggleActionsCheckedCount === 1 && ((_a = this._options) === null || _a === void 0 ? void 0 : _a.hiddenItemStrategy) === 0 /* HiddenItemStrategy.Ignore */) {\n          noHide = true;\n          for (let i = 0; i < toggleActions.length; i++) {\n            if (toggleActions[i].checked) {\n              toggleActions[i] = toAction({\n                id: action.id,\n                label: action.label,\n                checked: true,\n                enabled: false,\n                run() {}\n              });\n              break; // there is only one\n            }\n          }\n        }\n        // add \"hide foo\" actions\n        let hideAction;\n        if (!noHide && (action instanceof MenuItemAction || action instanceof SubmenuItemAction)) {\n          if (!action.hideActions) {\n            // no context menu for MenuItemAction instances that support no hiding\n            // those are fake actions and need to be cleaned up\n            return;\n          }\n          hideAction = action.hideActions.hide;\n        } else {\n          hideAction = toAction({\n            id: 'label',\n            label: localize('hide', \"Hide\"),\n            enabled: false,\n            run() {}\n          });\n        }\n        const actions = Separator.join([hideAction], toggleActions);\n        // add \"Reset Menu\" action\n        if (((_b = this._options) === null || _b === void 0 ? void 0 : _b.resetMenu) && !menuIds) {\n          menuIds = [this._options.resetMenu];\n        }\n        if (someAreHidden && menuIds) {\n          actions.push(new Separator());\n          actions.push(toAction({\n            id: 'resetThisMenu',\n            label: localize('resetThisMenu', \"Reset Menu\"),\n            run: () => this._menuService.resetHiddenStates(menuIds)\n          }));\n        }\n        this._contextMenuService.showContextMenu({\n          getAnchor: () => event,\n          getActions: () => actions,\n          // add context menu actions (iff appicable)\n          menuId: (_c = this._options) === null || _c === void 0 ? void 0 : _c.contextMenu,\n          menuActionOptions: Object.assign({\n            renderShortTitle: true\n          }, (_d = this._options) === null || _d === void 0 ? void 0 : _d.menuOptions),\n          skipTelemetry: typeof ((_e = this._options) === null || _e === void 0 ? void 0 : _e.telemetrySource) === 'string',\n          contextKeyService: this._contextKeyService\n        });\n      }));\n    }\n  }\n};\nWorkbenchToolBar = __decorate([__param(2, IMenuService), __param(3, IContextKeyService), __param(4, IContextMenuService), __param(5, IKeybindingService), __param(6, ITelemetryService)], WorkbenchToolBar);\nexport { WorkbenchToolBar };","map":{"version":3,"names":["__decorate","decorators","target","key","desc","c","arguments","length","r","Object","getOwnPropertyDescriptor","d","Reflect","decorate","i","defineProperty","__param","paramIndex","decorator","addDisposableListener","StandardMouseEvent","ToolBar","Separator","toAction","coalesceInPlace","intersection","Iterable","DisposableStore","localize","IMenuService","MenuItemAction","SubmenuItemAction","IContextKeyService","IContextMenuService","IKeybindingService","ITelemetryService","WorkbenchToolBar","constructor","container","_options","_menuService","_contextKeyService","_contextMenuService","keybindingService","telemetryService","assign","getKeyBinding","action","_a","lookupKeybinding","id","undefined","allowContextMenu","skipTelemetry","telemetrySource","_sessionDisposables","_store","add","actionBar","onDidRun","e","publicLog2","from","setActions","_primary","_secondary","menuIds","_b","_c","clear","primary","slice","secondary","toggleActions","toggleActionsCheckedCount","extraSecondary","someAreHidden","hiddenItemStrategy","hideActions","push","toggle","checked","isHidden","overflowBehavior","exemptedIds","Set","exempted","map","a","maxItems","size","count","has","join","getElement","_d","_e","event","getItemAction","preventDefault","stopPropagation","noHide","label","enabled","run","hideAction","hide","actions","resetMenu","resetHiddenStates","showContextMenu","getAnchor","getActions","menuId","contextMenu","menuActionOptions","renderShortTitle","menuOptions","contextKeyService"],"sources":["/home/chlohest/work/website/my_web/node_modules/monaco-editor/esm/vs/platform/actions/browser/toolbar.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nimport { addDisposableListener } from '../../../base/browser/dom.js';\nimport { StandardMouseEvent } from '../../../base/browser/mouseEvent.js';\nimport { ToolBar } from '../../../base/browser/ui/toolbar/toolbar.js';\nimport { Separator, toAction } from '../../../base/common/actions.js';\nimport { coalesceInPlace } from '../../../base/common/arrays.js';\nimport { intersection } from '../../../base/common/collections.js';\nimport { Iterable } from '../../../base/common/iterator.js';\nimport { DisposableStore } from '../../../base/common/lifecycle.js';\nimport { localize } from '../../../nls.js';\nimport { IMenuService, MenuItemAction, SubmenuItemAction } from '../common/actions.js';\nimport { IContextKeyService } from '../../contextkey/common/contextkey.js';\nimport { IContextMenuService } from '../../contextview/browser/contextView.js';\nimport { IKeybindingService } from '../../keybinding/common/keybinding.js';\nimport { ITelemetryService } from '../../telemetry/common/telemetry.js';\n/**\n * The `WorkbenchToolBar` does\n * - support hiding of menu items\n * - lookup keybindings for each actions automatically\n * - send `workbenchActionExecuted`-events for each action\n *\n * See {@link MenuWorkbenchToolBar} for a toolbar that is backed by a menu.\n */\nlet WorkbenchToolBar = class WorkbenchToolBar extends ToolBar {\n    constructor(container, _options, _menuService, _contextKeyService, _contextMenuService, keybindingService, telemetryService) {\n        super(container, _contextMenuService, Object.assign(Object.assign({ \n            // defaults\n            getKeyBinding: (action) => { var _a; return (_a = keybindingService.lookupKeybinding(action.id)) !== null && _a !== void 0 ? _a : undefined; } }, _options), { \n            // mandatory (overide options)\n            allowContextMenu: true, skipTelemetry: typeof (_options === null || _options === void 0 ? void 0 : _options.telemetrySource) === 'string' }));\n        this._options = _options;\n        this._menuService = _menuService;\n        this._contextKeyService = _contextKeyService;\n        this._contextMenuService = _contextMenuService;\n        this._sessionDisposables = this._store.add(new DisposableStore());\n        // telemetry logic\n        const telemetrySource = _options === null || _options === void 0 ? void 0 : _options.telemetrySource;\n        if (telemetrySource) {\n            this._store.add(this.actionBar.onDidRun(e => telemetryService.publicLog2('workbenchActionExecuted', { id: e.action.id, from: telemetrySource })));\n        }\n    }\n    setActions(_primary, _secondary = [], menuIds) {\n        var _a, _b, _c;\n        this._sessionDisposables.clear();\n        const primary = _primary.slice(); // for hiding and overflow we set some items to undefined\n        const secondary = _secondary.slice();\n        const toggleActions = [];\n        let toggleActionsCheckedCount = 0;\n        const extraSecondary = [];\n        let someAreHidden = false;\n        // unless disabled, move all hidden items to secondary group or ignore them\n        if (((_a = this._options) === null || _a === void 0 ? void 0 : _a.hiddenItemStrategy) !== -1 /* HiddenItemStrategy.NoHide */) {\n            for (let i = 0; i < primary.length; i++) {\n                const action = primary[i];\n                if (!(action instanceof MenuItemAction) && !(action instanceof SubmenuItemAction)) {\n                    // console.warn(`Action ${action.id}/${action.label} is not a MenuItemAction`);\n                    continue;\n                }\n                if (!action.hideActions) {\n                    continue;\n                }\n                // collect all toggle actions\n                toggleActions.push(action.hideActions.toggle);\n                if (action.hideActions.toggle.checked) {\n                    toggleActionsCheckedCount++;\n                }\n                // hidden items move into overflow or ignore\n                if (action.hideActions.isHidden) {\n                    someAreHidden = true;\n                    primary[i] = undefined;\n                    if (((_b = this._options) === null || _b === void 0 ? void 0 : _b.hiddenItemStrategy) !== 0 /* HiddenItemStrategy.Ignore */) {\n                        extraSecondary[i] = action;\n                    }\n                }\n            }\n        }\n        // count for max\n        if (((_c = this._options) === null || _c === void 0 ? void 0 : _c.overflowBehavior) !== undefined) {\n            const exemptedIds = intersection(new Set(this._options.overflowBehavior.exempted), Iterable.map(primary, a => a === null || a === void 0 ? void 0 : a.id));\n            const maxItems = this._options.overflowBehavior.maxItems - exemptedIds.size;\n            let count = 0;\n            for (let i = 0; i < primary.length; i++) {\n                const action = primary[i];\n                if (!action) {\n                    continue;\n                }\n                count++;\n                if (exemptedIds.has(action.id)) {\n                    continue;\n                }\n                if (count >= maxItems) {\n                    primary[i] = undefined;\n                    extraSecondary[i] = action;\n                }\n            }\n        }\n        // coalesce turns Array<IAction|undefined> into IAction[]\n        coalesceInPlace(primary);\n        coalesceInPlace(extraSecondary);\n        super.setActions(primary, Separator.join(extraSecondary, secondary));\n        // add context menu for toggle actions\n        if (toggleActions.length > 0) {\n            this._sessionDisposables.add(addDisposableListener(this.getElement(), 'contextmenu', e => {\n                var _a, _b, _c, _d, _e;\n                const event = new StandardMouseEvent(e);\n                const action = this.getItemAction(event.target);\n                if (!(action)) {\n                    return;\n                }\n                event.preventDefault();\n                event.stopPropagation();\n                let noHide = false;\n                // last item cannot be hidden when using ignore strategy\n                if (toggleActionsCheckedCount === 1 && ((_a = this._options) === null || _a === void 0 ? void 0 : _a.hiddenItemStrategy) === 0 /* HiddenItemStrategy.Ignore */) {\n                    noHide = true;\n                    for (let i = 0; i < toggleActions.length; i++) {\n                        if (toggleActions[i].checked) {\n                            toggleActions[i] = toAction({\n                                id: action.id,\n                                label: action.label,\n                                checked: true,\n                                enabled: false,\n                                run() { }\n                            });\n                            break; // there is only one\n                        }\n                    }\n                }\n                // add \"hide foo\" actions\n                let hideAction;\n                if (!noHide && (action instanceof MenuItemAction || action instanceof SubmenuItemAction)) {\n                    if (!action.hideActions) {\n                        // no context menu for MenuItemAction instances that support no hiding\n                        // those are fake actions and need to be cleaned up\n                        return;\n                    }\n                    hideAction = action.hideActions.hide;\n                }\n                else {\n                    hideAction = toAction({\n                        id: 'label',\n                        label: localize('hide', \"Hide\"),\n                        enabled: false,\n                        run() { }\n                    });\n                }\n                const actions = Separator.join([hideAction], toggleActions);\n                // add \"Reset Menu\" action\n                if (((_b = this._options) === null || _b === void 0 ? void 0 : _b.resetMenu) && !menuIds) {\n                    menuIds = [this._options.resetMenu];\n                }\n                if (someAreHidden && menuIds) {\n                    actions.push(new Separator());\n                    actions.push(toAction({\n                        id: 'resetThisMenu',\n                        label: localize('resetThisMenu', \"Reset Menu\"),\n                        run: () => this._menuService.resetHiddenStates(menuIds)\n                    }));\n                }\n                this._contextMenuService.showContextMenu({\n                    getAnchor: () => event,\n                    getActions: () => actions,\n                    // add context menu actions (iff appicable)\n                    menuId: (_c = this._options) === null || _c === void 0 ? void 0 : _c.contextMenu,\n                    menuActionOptions: Object.assign({ renderShortTitle: true }, (_d = this._options) === null || _d === void 0 ? void 0 : _d.menuOptions),\n                    skipTelemetry: typeof ((_e = this._options) === null || _e === void 0 ? void 0 : _e.telemetrySource) === 'string',\n                    contextKeyService: this._contextKeyService,\n                });\n            }));\n        }\n    }\n};\nWorkbenchToolBar = __decorate([\n    __param(2, IMenuService),\n    __param(3, IContextKeyService),\n    __param(4, IContextMenuService),\n    __param(5, IKeybindingService),\n    __param(6, ITelemetryService)\n], WorkbenchToolBar);\nexport { WorkbenchToolBar };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}