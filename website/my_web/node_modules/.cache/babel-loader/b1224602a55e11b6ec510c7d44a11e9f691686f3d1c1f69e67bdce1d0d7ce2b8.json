{"ast":null,"code":"/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n    r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n    d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = this && this.__param || function (paramIndex, decorator) {\n  return function (target, key) {\n    decorator(target, key, paramIndex);\n  };\n};\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\nimport * as dom from '../../../base/browser/dom.js';\nimport { CancellationToken } from '../../../base/common/cancellation.js';\nimport { LinkedList } from '../../../base/common/linkedList.js';\nimport { ResourceMap } from '../../../base/common/map.js';\nimport { parse } from '../../../base/common/marshalling.js';\nimport { Schemas } from '../../../base/common/network.js';\nimport { normalizePath } from '../../../base/common/resources.js';\nimport { URI } from '../../../base/common/uri.js';\nimport { ICodeEditorService } from './codeEditorService.js';\nimport { ICommandService } from '../../../platform/commands/common/commands.js';\nimport { EditorOpenSource } from '../../../platform/editor/common/editor.js';\nimport { extractSelection, matchesScheme, matchesSomeScheme } from '../../../platform/opener/common/opener.js';\nlet CommandOpener = class CommandOpener {\n  constructor(_commandService) {\n    this._commandService = _commandService;\n  }\n  open(target, options) {\n    return __awaiter(this, void 0, void 0, function* () {\n      if (!matchesScheme(target, Schemas.command)) {\n        return false;\n      }\n      if (!(options === null || options === void 0 ? void 0 : options.allowCommands)) {\n        // silently ignore commands when command-links are disabled, also\n        // suppress other openers by returning TRUE\n        return true;\n      }\n      if (typeof target === 'string') {\n        target = URI.parse(target);\n      }\n      if (Array.isArray(options.allowCommands)) {\n        // Only allow specific commands\n        if (!options.allowCommands.includes(target.path)) {\n          // Suppress other openers by returning TRUE\n          return true;\n        }\n      }\n      // execute as command\n      let args = [];\n      try {\n        args = parse(decodeURIComponent(target.query));\n      } catch (_a) {\n        // ignore and retry\n        try {\n          args = parse(target.query);\n        } catch (_b) {\n          // ignore error\n        }\n      }\n      if (!Array.isArray(args)) {\n        args = [args];\n      }\n      yield this._commandService.executeCommand(target.path, ...args);\n      return true;\n    });\n  }\n};\nCommandOpener = __decorate([__param(0, ICommandService)], CommandOpener);\nlet EditorOpener = class EditorOpener {\n  constructor(_editorService) {\n    this._editorService = _editorService;\n  }\n  open(target, options) {\n    return __awaiter(this, void 0, void 0, function* () {\n      if (typeof target === 'string') {\n        target = URI.parse(target);\n      }\n      const {\n        selection,\n        uri\n      } = extractSelection(target);\n      target = uri;\n      if (target.scheme === Schemas.file) {\n        target = normalizePath(target); // workaround for non-normalized paths (https://github.com/microsoft/vscode/issues/12954)\n      }\n\n      yield this._editorService.openCodeEditor({\n        resource: target,\n        options: Object.assign({\n          selection,\n          source: (options === null || options === void 0 ? void 0 : options.fromUserGesture) ? EditorOpenSource.USER : EditorOpenSource.API\n        }, options === null || options === void 0 ? void 0 : options.editorOptions)\n      }, this._editorService.getFocusedCodeEditor(), options === null || options === void 0 ? void 0 : options.openToSide);\n      return true;\n    });\n  }\n};\nEditorOpener = __decorate([__param(0, ICodeEditorService)], EditorOpener);\nlet OpenerService = class OpenerService {\n  constructor(editorService, commandService) {\n    this._openers = new LinkedList();\n    this._validators = new LinkedList();\n    this._resolvers = new LinkedList();\n    this._resolvedUriTargets = new ResourceMap(uri => uri.with({\n      path: null,\n      fragment: null,\n      query: null\n    }).toString());\n    this._externalOpeners = new LinkedList();\n    // Default external opener is going through window.open()\n    this._defaultExternalOpener = {\n      openExternal: href => __awaiter(this, void 0, void 0, function* () {\n        // ensure to open HTTP/HTTPS links into new windows\n        // to not trigger a navigation. Any other link is\n        // safe to be set as HREF to prevent a blank window\n        // from opening.\n        if (matchesSomeScheme(href, Schemas.http, Schemas.https)) {\n          dom.windowOpenNoOpener(href);\n        } else {\n          window.location.href = href;\n        }\n        return true;\n      })\n    };\n    // Default opener: any external, maito, http(s), command, and catch-all-editors\n    this._openers.push({\n      open: (target, options) => __awaiter(this, void 0, void 0, function* () {\n        if ((options === null || options === void 0 ? void 0 : options.openExternal) || matchesSomeScheme(target, Schemas.mailto, Schemas.http, Schemas.https, Schemas.vsls)) {\n          // open externally\n          yield this._doOpenExternal(target, options);\n          return true;\n        }\n        return false;\n      })\n    });\n    this._openers.push(new CommandOpener(commandService));\n    this._openers.push(new EditorOpener(editorService));\n  }\n  registerOpener(opener) {\n    const remove = this._openers.unshift(opener);\n    return {\n      dispose: remove\n    };\n  }\n  open(target, options) {\n    var _a;\n    return __awaiter(this, void 0, void 0, function* () {\n      // check with contributed validators\n      const targetURI = typeof target === 'string' ? URI.parse(target) : target;\n      // validate against the original URI that this URI resolves to, if one exists\n      const validationTarget = (_a = this._resolvedUriTargets.get(targetURI)) !== null && _a !== void 0 ? _a : target;\n      for (const validator of this._validators) {\n        if (!(yield validator.shouldOpen(validationTarget, options))) {\n          return false;\n        }\n      }\n      // check with contributed openers\n      for (const opener of this._openers) {\n        const handled = yield opener.open(target, options);\n        if (handled) {\n          return true;\n        }\n      }\n      return false;\n    });\n  }\n  resolveExternalUri(resource, options) {\n    return __awaiter(this, void 0, void 0, function* () {\n      for (const resolver of this._resolvers) {\n        try {\n          const result = yield resolver.resolveExternalUri(resource, options);\n          if (result) {\n            if (!this._resolvedUriTargets.has(result.resolved)) {\n              this._resolvedUriTargets.set(result.resolved, resource);\n            }\n            return result;\n          }\n        } catch (_a) {\n          // noop\n        }\n      }\n      throw new Error('Could not resolve external URI: ' + resource.toString());\n    });\n  }\n  _doOpenExternal(resource, options) {\n    return __awaiter(this, void 0, void 0, function* () {\n      //todo@jrieken IExternalUriResolver should support `uri: URI | string`\n      const uri = typeof resource === 'string' ? URI.parse(resource) : resource;\n      let externalUri;\n      try {\n        externalUri = (yield this.resolveExternalUri(uri, options)).resolved;\n      } catch (_a) {\n        externalUri = uri;\n      }\n      let href;\n      if (typeof resource === 'string' && uri.toString() === externalUri.toString()) {\n        // open the url-string AS IS\n        href = resource;\n      } else {\n        // open URI using the toString(noEncode)+encodeURI-trick\n        href = encodeURI(externalUri.toString(true));\n      }\n      if (options === null || options === void 0 ? void 0 : options.allowContributedOpeners) {\n        const preferredOpenerId = typeof (options === null || options === void 0 ? void 0 : options.allowContributedOpeners) === 'string' ? options === null || options === void 0 ? void 0 : options.allowContributedOpeners : undefined;\n        for (const opener of this._externalOpeners) {\n          const didOpen = yield opener.openExternal(href, {\n            sourceUri: uri,\n            preferredOpenerId\n          }, CancellationToken.None);\n          if (didOpen) {\n            return true;\n          }\n        }\n      }\n      return this._defaultExternalOpener.openExternal(href, {\n        sourceUri: uri\n      }, CancellationToken.None);\n    });\n  }\n  dispose() {\n    this._validators.clear();\n  }\n};\nOpenerService = __decorate([__param(0, ICodeEditorService), __param(1, ICommandService)], OpenerService);\nexport { OpenerService };","map":{"version":3,"names":["__decorate","decorators","target","key","desc","c","arguments","length","r","Object","getOwnPropertyDescriptor","d","Reflect","decorate","i","defineProperty","__param","paramIndex","decorator","__awaiter","thisArg","_arguments","P","generator","adopt","value","resolve","Promise","reject","fulfilled","step","next","e","rejected","result","done","then","apply","dom","CancellationToken","LinkedList","ResourceMap","parse","Schemas","normalizePath","URI","ICodeEditorService","ICommandService","EditorOpenSource","extractSelection","matchesScheme","matchesSomeScheme","CommandOpener","constructor","_commandService","open","options","command","allowCommands","Array","isArray","includes","path","args","decodeURIComponent","query","_a","_b","executeCommand","EditorOpener","_editorService","selection","uri","scheme","file","openCodeEditor","resource","assign","source","fromUserGesture","USER","API","editorOptions","getFocusedCodeEditor","openToSide","OpenerService","editorService","commandService","_openers","_validators","_resolvers","_resolvedUriTargets","with","fragment","toString","_externalOpeners","_defaultExternalOpener","openExternal","href","http","https","windowOpenNoOpener","window","location","push","mailto","vsls","_doOpenExternal","registerOpener","opener","remove","unshift","dispose","targetURI","validationTarget","get","validator","shouldOpen","handled","resolveExternalUri","resolver","has","resolved","set","Error","externalUri","encodeURI","allowContributedOpeners","preferredOpenerId","undefined","didOpen","sourceUri","None","clear"],"sources":["/home/chlohest/work/website/my_web/node_modules/monaco-editor/esm/vs/editor/browser/services/openerService.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport * as dom from '../../../base/browser/dom.js';\nimport { CancellationToken } from '../../../base/common/cancellation.js';\nimport { LinkedList } from '../../../base/common/linkedList.js';\nimport { ResourceMap } from '../../../base/common/map.js';\nimport { parse } from '../../../base/common/marshalling.js';\nimport { Schemas } from '../../../base/common/network.js';\nimport { normalizePath } from '../../../base/common/resources.js';\nimport { URI } from '../../../base/common/uri.js';\nimport { ICodeEditorService } from './codeEditorService.js';\nimport { ICommandService } from '../../../platform/commands/common/commands.js';\nimport { EditorOpenSource } from '../../../platform/editor/common/editor.js';\nimport { extractSelection, matchesScheme, matchesSomeScheme } from '../../../platform/opener/common/opener.js';\nlet CommandOpener = class CommandOpener {\n    constructor(_commandService) {\n        this._commandService = _commandService;\n    }\n    open(target, options) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!matchesScheme(target, Schemas.command)) {\n                return false;\n            }\n            if (!(options === null || options === void 0 ? void 0 : options.allowCommands)) {\n                // silently ignore commands when command-links are disabled, also\n                // suppress other openers by returning TRUE\n                return true;\n            }\n            if (typeof target === 'string') {\n                target = URI.parse(target);\n            }\n            if (Array.isArray(options.allowCommands)) {\n                // Only allow specific commands\n                if (!options.allowCommands.includes(target.path)) {\n                    // Suppress other openers by returning TRUE\n                    return true;\n                }\n            }\n            // execute as command\n            let args = [];\n            try {\n                args = parse(decodeURIComponent(target.query));\n            }\n            catch (_a) {\n                // ignore and retry\n                try {\n                    args = parse(target.query);\n                }\n                catch (_b) {\n                    // ignore error\n                }\n            }\n            if (!Array.isArray(args)) {\n                args = [args];\n            }\n            yield this._commandService.executeCommand(target.path, ...args);\n            return true;\n        });\n    }\n};\nCommandOpener = __decorate([\n    __param(0, ICommandService)\n], CommandOpener);\nlet EditorOpener = class EditorOpener {\n    constructor(_editorService) {\n        this._editorService = _editorService;\n    }\n    open(target, options) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (typeof target === 'string') {\n                target = URI.parse(target);\n            }\n            const { selection, uri } = extractSelection(target);\n            target = uri;\n            if (target.scheme === Schemas.file) {\n                target = normalizePath(target); // workaround for non-normalized paths (https://github.com/microsoft/vscode/issues/12954)\n            }\n            yield this._editorService.openCodeEditor({\n                resource: target,\n                options: Object.assign({ selection, source: (options === null || options === void 0 ? void 0 : options.fromUserGesture) ? EditorOpenSource.USER : EditorOpenSource.API }, options === null || options === void 0 ? void 0 : options.editorOptions)\n            }, this._editorService.getFocusedCodeEditor(), options === null || options === void 0 ? void 0 : options.openToSide);\n            return true;\n        });\n    }\n};\nEditorOpener = __decorate([\n    __param(0, ICodeEditorService)\n], EditorOpener);\nlet OpenerService = class OpenerService {\n    constructor(editorService, commandService) {\n        this._openers = new LinkedList();\n        this._validators = new LinkedList();\n        this._resolvers = new LinkedList();\n        this._resolvedUriTargets = new ResourceMap(uri => uri.with({ path: null, fragment: null, query: null }).toString());\n        this._externalOpeners = new LinkedList();\n        // Default external opener is going through window.open()\n        this._defaultExternalOpener = {\n            openExternal: (href) => __awaiter(this, void 0, void 0, function* () {\n                // ensure to open HTTP/HTTPS links into new windows\n                // to not trigger a navigation. Any other link is\n                // safe to be set as HREF to prevent a blank window\n                // from opening.\n                if (matchesSomeScheme(href, Schemas.http, Schemas.https)) {\n                    dom.windowOpenNoOpener(href);\n                }\n                else {\n                    window.location.href = href;\n                }\n                return true;\n            })\n        };\n        // Default opener: any external, maito, http(s), command, and catch-all-editors\n        this._openers.push({\n            open: (target, options) => __awaiter(this, void 0, void 0, function* () {\n                if ((options === null || options === void 0 ? void 0 : options.openExternal) || matchesSomeScheme(target, Schemas.mailto, Schemas.http, Schemas.https, Schemas.vsls)) {\n                    // open externally\n                    yield this._doOpenExternal(target, options);\n                    return true;\n                }\n                return false;\n            })\n        });\n        this._openers.push(new CommandOpener(commandService));\n        this._openers.push(new EditorOpener(editorService));\n    }\n    registerOpener(opener) {\n        const remove = this._openers.unshift(opener);\n        return { dispose: remove };\n    }\n    open(target, options) {\n        var _a;\n        return __awaiter(this, void 0, void 0, function* () {\n            // check with contributed validators\n            const targetURI = typeof target === 'string' ? URI.parse(target) : target;\n            // validate against the original URI that this URI resolves to, if one exists\n            const validationTarget = (_a = this._resolvedUriTargets.get(targetURI)) !== null && _a !== void 0 ? _a : target;\n            for (const validator of this._validators) {\n                if (!(yield validator.shouldOpen(validationTarget, options))) {\n                    return false;\n                }\n            }\n            // check with contributed openers\n            for (const opener of this._openers) {\n                const handled = yield opener.open(target, options);\n                if (handled) {\n                    return true;\n                }\n            }\n            return false;\n        });\n    }\n    resolveExternalUri(resource, options) {\n        return __awaiter(this, void 0, void 0, function* () {\n            for (const resolver of this._resolvers) {\n                try {\n                    const result = yield resolver.resolveExternalUri(resource, options);\n                    if (result) {\n                        if (!this._resolvedUriTargets.has(result.resolved)) {\n                            this._resolvedUriTargets.set(result.resolved, resource);\n                        }\n                        return result;\n                    }\n                }\n                catch (_a) {\n                    // noop\n                }\n            }\n            throw new Error('Could not resolve external URI: ' + resource.toString());\n        });\n    }\n    _doOpenExternal(resource, options) {\n        return __awaiter(this, void 0, void 0, function* () {\n            //todo@jrieken IExternalUriResolver should support `uri: URI | string`\n            const uri = typeof resource === 'string' ? URI.parse(resource) : resource;\n            let externalUri;\n            try {\n                externalUri = (yield this.resolveExternalUri(uri, options)).resolved;\n            }\n            catch (_a) {\n                externalUri = uri;\n            }\n            let href;\n            if (typeof resource === 'string' && uri.toString() === externalUri.toString()) {\n                // open the url-string AS IS\n                href = resource;\n            }\n            else {\n                // open URI using the toString(noEncode)+encodeURI-trick\n                href = encodeURI(externalUri.toString(true));\n            }\n            if (options === null || options === void 0 ? void 0 : options.allowContributedOpeners) {\n                const preferredOpenerId = typeof (options === null || options === void 0 ? void 0 : options.allowContributedOpeners) === 'string' ? options === null || options === void 0 ? void 0 : options.allowContributedOpeners : undefined;\n                for (const opener of this._externalOpeners) {\n                    const didOpen = yield opener.openExternal(href, {\n                        sourceUri: uri,\n                        preferredOpenerId,\n                    }, CancellationToken.None);\n                    if (didOpen) {\n                        return true;\n                    }\n                }\n            }\n            return this._defaultExternalOpener.openExternal(href, { sourceUri: uri }, CancellationToken.None);\n        });\n    }\n    dispose() {\n        this._validators.clear();\n    }\n};\nOpenerService = __decorate([\n    __param(0, ICodeEditorService),\n    __param(1, ICommandService)\n], OpenerService);\nexport { OpenerService };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}