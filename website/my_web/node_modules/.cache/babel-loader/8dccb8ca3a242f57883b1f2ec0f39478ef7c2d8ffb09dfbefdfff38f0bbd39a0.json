{"ast":null,"code":"/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport * as dom from '../../../base/browser/dom.js';\nimport { ActionBar } from '../../../base/browser/ui/actionbar/actionbar.js';\nimport { Button } from '../../../base/browser/ui/button/button.js';\nimport { CountBadge } from '../../../base/browser/ui/countBadge/countBadge.js';\nimport { ProgressBar } from '../../../base/browser/ui/progressbar/progressbar.js';\nimport { CancellationToken } from '../../../base/common/cancellation.js';\nimport { Emitter } from '../../../base/common/event.js';\nimport { Disposable, dispose } from '../../../base/common/lifecycle.js';\nimport Severity from '../../../base/common/severity.js';\nimport { localize } from '../../../nls.js';\nimport { QuickInputHideReason } from '../common/quickInput.js';\nimport { QuickInputBox } from './quickInputBox.js';\nimport { QuickInputList } from './quickInputList.js';\nimport { QuickPick, backButton, InputBox } from './quickInput.js';\nconst $ = dom.$;\nexport class QuickInputController extends Disposable {\n  constructor(options, themeService) {\n    super();\n    this.options = options;\n    this.themeService = themeService;\n    this.enabled = true;\n    this.onDidAcceptEmitter = this._register(new Emitter());\n    this.onDidCustomEmitter = this._register(new Emitter());\n    this.onDidTriggerButtonEmitter = this._register(new Emitter());\n    this.keyMods = {\n      ctrlCmd: false,\n      alt: false\n    };\n    this.controller = null;\n    this.onShowEmitter = this._register(new Emitter());\n    this.onShow = this.onShowEmitter.event;\n    this.onHideEmitter = this._register(new Emitter());\n    this.onHide = this.onHideEmitter.event;\n    this.idPrefix = options.idPrefix;\n    this.parentElement = options.container;\n    this.styles = options.styles;\n    this.registerKeyModsListeners();\n  }\n  registerKeyModsListeners() {\n    const listener = e => {\n      this.keyMods.ctrlCmd = e.ctrlKey || e.metaKey;\n      this.keyMods.alt = e.altKey;\n    };\n    this._register(dom.addDisposableListener(window, dom.EventType.KEY_DOWN, listener, true));\n    this._register(dom.addDisposableListener(window, dom.EventType.KEY_UP, listener, true));\n    this._register(dom.addDisposableListener(window, dom.EventType.MOUSE_DOWN, listener, true));\n  }\n  getUI() {\n    if (this.ui) {\n      return this.ui;\n    }\n    const container = dom.append(this.parentElement, $('.quick-input-widget.show-file-icons'));\n    container.tabIndex = -1;\n    container.style.display = 'none';\n    const styleSheet = dom.createStyleSheet(container);\n    const titleBar = dom.append(container, $('.quick-input-titlebar'));\n    const actionBarOption = this.options.hoverDelegate ? {\n      hoverDelegate: this.options.hoverDelegate\n    } : undefined;\n    const leftActionBar = this._register(new ActionBar(titleBar, actionBarOption));\n    leftActionBar.domNode.classList.add('quick-input-left-action-bar');\n    const title = dom.append(titleBar, $('.quick-input-title'));\n    const rightActionBar = this._register(new ActionBar(titleBar, actionBarOption));\n    rightActionBar.domNode.classList.add('quick-input-right-action-bar');\n    const headerContainer = dom.append(container, $('.quick-input-header'));\n    const checkAll = dom.append(headerContainer, $('input.quick-input-check-all'));\n    checkAll.type = 'checkbox';\n    checkAll.setAttribute('aria-label', localize('quickInput.checkAll', \"Toggle all checkboxes\"));\n    this._register(dom.addStandardDisposableListener(checkAll, dom.EventType.CHANGE, e => {\n      const checked = checkAll.checked;\n      list.setAllVisibleChecked(checked);\n    }));\n    this._register(dom.addDisposableListener(checkAll, dom.EventType.CLICK, e => {\n      if (e.x || e.y) {\n        // Avoid 'click' triggered by 'space'...\n        inputBox.setFocus();\n      }\n    }));\n    const description2 = dom.append(headerContainer, $('.quick-input-description'));\n    const inputContainer = dom.append(headerContainer, $('.quick-input-and-message'));\n    const filterContainer = dom.append(inputContainer, $('.quick-input-filter'));\n    const inputBox = this._register(new QuickInputBox(filterContainer, this.styles.inputBox, this.styles.toggle));\n    inputBox.setAttribute('aria-describedby', `${this.idPrefix}message`);\n    const visibleCountContainer = dom.append(filterContainer, $('.quick-input-visible-count'));\n    visibleCountContainer.setAttribute('aria-live', 'polite');\n    visibleCountContainer.setAttribute('aria-atomic', 'true');\n    const visibleCount = new CountBadge(visibleCountContainer, {\n      countFormat: localize({\n        key: 'quickInput.visibleCount',\n        comment: ['This tells the user how many items are shown in a list of items to select from. The items can be anything. Currently not visible, but read by screen readers.']\n      }, \"{0} Results\")\n    }, this.styles.countBadge);\n    const countContainer = dom.append(filterContainer, $('.quick-input-count'));\n    countContainer.setAttribute('aria-live', 'polite');\n    const count = new CountBadge(countContainer, {\n      countFormat: localize({\n        key: 'quickInput.countSelected',\n        comment: ['This tells the user how many items are selected in a list of items to select from. The items can be anything.']\n      }, \"{0} Selected\")\n    }, this.styles.countBadge);\n    const okContainer = dom.append(headerContainer, $('.quick-input-action'));\n    const ok = this._register(new Button(okContainer, this.styles.button));\n    ok.label = localize('ok', \"OK\");\n    this._register(ok.onDidClick(e => {\n      this.onDidAcceptEmitter.fire();\n    }));\n    const customButtonContainer = dom.append(headerContainer, $('.quick-input-action'));\n    const customButton = this._register(new Button(customButtonContainer, this.styles.button));\n    customButton.label = localize('custom', \"Custom\");\n    this._register(customButton.onDidClick(e => {\n      this.onDidCustomEmitter.fire();\n    }));\n    const message = dom.append(inputContainer, $(`#${this.idPrefix}message.quick-input-message`));\n    const progressBar = this._register(new ProgressBar(container, this.styles.progressBar));\n    progressBar.getContainer().classList.add('quick-input-progress');\n    const widget = dom.append(container, $('.quick-input-html-widget'));\n    widget.tabIndex = -1;\n    const description1 = dom.append(container, $('.quick-input-description'));\n    const listId = this.idPrefix + 'list';\n    const list = this._register(new QuickInputList(container, listId, this.options, this.themeService));\n    inputBox.setAttribute('aria-controls', listId);\n    this._register(list.onDidChangeFocus(() => {\n      var _a;\n      inputBox.setAttribute('aria-activedescendant', (_a = list.getActiveDescendant()) !== null && _a !== void 0 ? _a : '');\n    }));\n    this._register(list.onChangedAllVisibleChecked(checked => {\n      checkAll.checked = checked;\n    }));\n    this._register(list.onChangedVisibleCount(c => {\n      visibleCount.setCount(c);\n    }));\n    this._register(list.onChangedCheckedCount(c => {\n      count.setCount(c);\n    }));\n    this._register(list.onLeave(() => {\n      // Defer to avoid the input field reacting to the triggering key.\n      setTimeout(() => {\n        inputBox.setFocus();\n        if (this.controller instanceof QuickPick && this.controller.canSelectMany) {\n          list.clearFocus();\n        }\n      }, 0);\n    }));\n    const focusTracker = dom.trackFocus(container);\n    this._register(focusTracker);\n    this._register(dom.addDisposableListener(container, dom.EventType.FOCUS, e => {\n      // Ignore focus events within container\n      if (dom.isAncestor(e.relatedTarget, container)) {\n        return;\n      }\n      this.previousFocusElement = e.relatedTarget instanceof HTMLElement ? e.relatedTarget : undefined;\n    }, true));\n    this._register(focusTracker.onDidBlur(() => {\n      if (!this.getUI().ignoreFocusOut && !this.options.ignoreFocusOut()) {\n        this.hide(QuickInputHideReason.Blur);\n      }\n      this.previousFocusElement = undefined;\n    }));\n    this._register(dom.addDisposableListener(container, dom.EventType.FOCUS, e => {\n      inputBox.setFocus();\n    }));\n    // TODO: Turn into commands instead of handling KEY_DOWN\n    this._register(dom.addStandardDisposableListener(container, dom.EventType.KEY_DOWN, event => {\n      if (dom.isAncestor(event.target, widget)) {\n        return; // Ignore event if target is inside widget to allow the widget to handle the event.\n      }\n\n      switch (event.keyCode) {\n        case 3 /* KeyCode.Enter */:\n          dom.EventHelper.stop(event, true);\n          if (this.enabled) {\n            this.onDidAcceptEmitter.fire();\n          }\n          break;\n        case 9 /* KeyCode.Escape */:\n          dom.EventHelper.stop(event, true);\n          this.hide(QuickInputHideReason.Gesture);\n          break;\n        case 2 /* KeyCode.Tab */:\n          if (!event.altKey && !event.ctrlKey && !event.metaKey) {\n            // detect only visible actions\n            const selectors = ['.quick-input-list .monaco-action-bar .always-visible', '.quick-input-list-entry:hover .monaco-action-bar', '.monaco-list-row.focused .monaco-action-bar'];\n            if (container.classList.contains('show-checkboxes')) {\n              selectors.push('input');\n            } else {\n              selectors.push('input[type=text]');\n            }\n            if (this.getUI().list.isDisplayed()) {\n              selectors.push('.monaco-list');\n            }\n            // focus links if there are any\n            if (this.getUI().message) {\n              selectors.push('.quick-input-message a');\n            }\n            if (this.getUI().widget) {\n              if (dom.isAncestor(event.target, this.getUI().widget)) {\n                // let the widget control tab\n                break;\n              }\n              selectors.push('.quick-input-html-widget');\n            }\n            const stops = container.querySelectorAll(selectors.join(', '));\n            if (event.shiftKey && event.target === stops[0]) {\n              // Clear the focus from the list in order to allow\n              // screen readers to read operations in the input box.\n              dom.EventHelper.stop(event, true);\n              list.clearFocus();\n            } else if (!event.shiftKey && dom.isAncestor(event.target, stops[stops.length - 1])) {\n              dom.EventHelper.stop(event, true);\n              stops[0].focus();\n            }\n          }\n          break;\n        case 10 /* KeyCode.Space */:\n          if (event.ctrlKey) {\n            dom.EventHelper.stop(event, true);\n            this.getUI().list.toggleHover();\n          }\n          break;\n      }\n    }));\n    this.ui = {\n      container,\n      styleSheet,\n      leftActionBar,\n      titleBar,\n      title,\n      description1,\n      description2,\n      widget,\n      rightActionBar,\n      checkAll,\n      inputContainer,\n      filterContainer,\n      inputBox,\n      visibleCountContainer,\n      visibleCount,\n      countContainer,\n      count,\n      okContainer,\n      ok,\n      message,\n      customButtonContainer,\n      customButton,\n      list,\n      progressBar,\n      onDidAccept: this.onDidAcceptEmitter.event,\n      onDidCustom: this.onDidCustomEmitter.event,\n      onDidTriggerButton: this.onDidTriggerButtonEmitter.event,\n      ignoreFocusOut: false,\n      keyMods: this.keyMods,\n      show: controller => this.show(controller),\n      hide: () => this.hide(),\n      setVisibilities: visibilities => this.setVisibilities(visibilities),\n      setEnabled: enabled => this.setEnabled(enabled),\n      setContextKey: contextKey => this.options.setContextKey(contextKey),\n      linkOpenerDelegate: content => this.options.linkOpenerDelegate(content)\n    };\n    this.updateStyles();\n    return this.ui;\n  }\n  pick(picks, options = {}, token = CancellationToken.None) {\n    return new Promise((doResolve, reject) => {\n      let resolve = result => {\n        var _a;\n        resolve = doResolve;\n        (_a = options.onKeyMods) === null || _a === void 0 ? void 0 : _a.call(options, input.keyMods);\n        doResolve(result);\n      };\n      if (token.isCancellationRequested) {\n        resolve(undefined);\n        return;\n      }\n      const input = this.createQuickPick();\n      let activeItem;\n      const disposables = [input, input.onDidAccept(() => {\n        if (input.canSelectMany) {\n          resolve(input.selectedItems.slice());\n          input.hide();\n        } else {\n          const result = input.activeItems[0];\n          if (result) {\n            resolve(result);\n            input.hide();\n          }\n        }\n      }), input.onDidChangeActive(items => {\n        const focused = items[0];\n        if (focused && options.onDidFocus) {\n          options.onDidFocus(focused);\n        }\n      }), input.onDidChangeSelection(items => {\n        if (!input.canSelectMany) {\n          const result = items[0];\n          if (result) {\n            resolve(result);\n            input.hide();\n          }\n        }\n      }), input.onDidTriggerItemButton(event => options.onDidTriggerItemButton && options.onDidTriggerItemButton(Object.assign(Object.assign({}, event), {\n        removeItem: () => {\n          const index = input.items.indexOf(event.item);\n          if (index !== -1) {\n            const items = input.items.slice();\n            const removed = items.splice(index, 1);\n            const activeItems = input.activeItems.filter(activeItem => activeItem !== removed[0]);\n            const keepScrollPositionBefore = input.keepScrollPosition;\n            input.keepScrollPosition = true;\n            input.items = items;\n            if (activeItems) {\n              input.activeItems = activeItems;\n            }\n            input.keepScrollPosition = keepScrollPositionBefore;\n          }\n        }\n      }))), input.onDidTriggerSeparatorButton(event => {\n        var _a;\n        return (_a = options.onDidTriggerSeparatorButton) === null || _a === void 0 ? void 0 : _a.call(options, event);\n      }), input.onDidChangeValue(value => {\n        if (activeItem && !value && (input.activeItems.length !== 1 || input.activeItems[0] !== activeItem)) {\n          input.activeItems = [activeItem];\n        }\n      }), token.onCancellationRequested(() => {\n        input.hide();\n      }), input.onDidHide(() => {\n        dispose(disposables);\n        resolve(undefined);\n      })];\n      input.title = options.title;\n      input.canSelectMany = !!options.canPickMany;\n      input.placeholder = options.placeHolder;\n      input.ignoreFocusOut = !!options.ignoreFocusLost;\n      input.matchOnDescription = !!options.matchOnDescription;\n      input.matchOnDetail = !!options.matchOnDetail;\n      input.matchOnLabel = options.matchOnLabel === undefined || options.matchOnLabel; // default to true\n      input.autoFocusOnList = options.autoFocusOnList === undefined || options.autoFocusOnList; // default to true\n      input.quickNavigate = options.quickNavigate;\n      input.hideInput = !!options.hideInput;\n      input.contextKey = options.contextKey;\n      input.busy = true;\n      Promise.all([picks, options.activeItem]).then(([items, _activeItem]) => {\n        activeItem = _activeItem;\n        input.busy = false;\n        input.items = items;\n        if (input.canSelectMany) {\n          input.selectedItems = items.filter(item => item.type !== 'separator' && item.picked);\n        }\n        if (activeItem) {\n          input.activeItems = [activeItem];\n        }\n      });\n      input.show();\n      Promise.resolve(picks).then(undefined, err => {\n        reject(err);\n        input.hide();\n      });\n    });\n  }\n  createQuickPick() {\n    const ui = this.getUI();\n    return new QuickPick(ui);\n  }\n  createInputBox() {\n    const ui = this.getUI();\n    return new InputBox(ui);\n  }\n  show(controller) {\n    const ui = this.getUI();\n    this.onShowEmitter.fire();\n    const oldController = this.controller;\n    this.controller = controller;\n    oldController === null || oldController === void 0 ? void 0 : oldController.didHide();\n    this.setEnabled(true);\n    ui.leftActionBar.clear();\n    ui.title.textContent = '';\n    ui.description1.textContent = '';\n    ui.description2.textContent = '';\n    dom.reset(ui.widget);\n    ui.rightActionBar.clear();\n    ui.checkAll.checked = false;\n    // ui.inputBox.value = ''; Avoid triggering an event.\n    ui.inputBox.placeholder = '';\n    ui.inputBox.password = false;\n    ui.inputBox.showDecoration(Severity.Ignore);\n    ui.visibleCount.setCount(0);\n    ui.count.setCount(0);\n    dom.reset(ui.message);\n    ui.progressBar.stop();\n    ui.list.setElements([]);\n    ui.list.matchOnDescription = false;\n    ui.list.matchOnDetail = false;\n    ui.list.matchOnLabel = true;\n    ui.list.sortByLabel = true;\n    ui.ignoreFocusOut = false;\n    ui.inputBox.toggles = undefined;\n    const backKeybindingLabel = this.options.backKeybindingLabel();\n    backButton.tooltip = backKeybindingLabel ? localize('quickInput.backWithKeybinding', \"Back ({0})\", backKeybindingLabel) : localize('quickInput.back', \"Back\");\n    ui.container.style.display = '';\n    this.updateLayout();\n    ui.inputBox.setFocus();\n  }\n  setVisibilities(visibilities) {\n    const ui = this.getUI();\n    ui.title.style.display = visibilities.title ? '' : 'none';\n    ui.description1.style.display = visibilities.description && (visibilities.inputBox || visibilities.checkAll) ? '' : 'none';\n    ui.description2.style.display = visibilities.description && !(visibilities.inputBox || visibilities.checkAll) ? '' : 'none';\n    ui.checkAll.style.display = visibilities.checkAll ? '' : 'none';\n    ui.inputContainer.style.display = visibilities.inputBox ? '' : 'none';\n    ui.filterContainer.style.display = visibilities.inputBox ? '' : 'none';\n    ui.visibleCountContainer.style.display = visibilities.visibleCount ? '' : 'none';\n    ui.countContainer.style.display = visibilities.count ? '' : 'none';\n    ui.okContainer.style.display = visibilities.ok ? '' : 'none';\n    ui.customButtonContainer.style.display = visibilities.customButton ? '' : 'none';\n    ui.message.style.display = visibilities.message ? '' : 'none';\n    ui.progressBar.getContainer().style.display = visibilities.progressBar ? '' : 'none';\n    ui.list.display(!!visibilities.list);\n    ui.container.classList.toggle('show-checkboxes', !!visibilities.checkBox);\n    ui.container.classList.toggle('hidden-input', !visibilities.inputBox && !visibilities.description);\n    this.updateLayout(); // TODO\n  }\n\n  setEnabled(enabled) {\n    if (enabled !== this.enabled) {\n      this.enabled = enabled;\n      for (const item of this.getUI().leftActionBar.viewItems) {\n        item.action.enabled = enabled;\n      }\n      for (const item of this.getUI().rightActionBar.viewItems) {\n        item.action.enabled = enabled;\n      }\n      this.getUI().checkAll.disabled = !enabled;\n      this.getUI().inputBox.enabled = enabled;\n      this.getUI().ok.enabled = enabled;\n      this.getUI().list.enabled = enabled;\n    }\n  }\n  hide(reason) {\n    var _a, _b, _c;\n    const controller = this.controller;\n    if (!controller) {\n      return;\n    }\n    const focusChanged = !dom.isAncestor(document.activeElement, (_b = (_a = this.ui) === null || _a === void 0 ? void 0 : _a.container) !== null && _b !== void 0 ? _b : null);\n    this.controller = null;\n    this.onHideEmitter.fire();\n    this.getUI().container.style.display = 'none';\n    if (!focusChanged) {\n      let currentElement = this.previousFocusElement;\n      while (currentElement && !currentElement.offsetParent) {\n        currentElement = (_c = currentElement.parentElement) !== null && _c !== void 0 ? _c : undefined;\n      }\n      if (currentElement === null || currentElement === void 0 ? void 0 : currentElement.offsetParent) {\n        currentElement.focus();\n        this.previousFocusElement = undefined;\n      } else {\n        this.options.returnFocus();\n      }\n    }\n    controller.didHide(reason);\n  }\n  layout(dimension, titleBarOffset) {\n    this.dimension = dimension;\n    this.titleBarOffset = titleBarOffset;\n    this.updateLayout();\n  }\n  updateLayout() {\n    if (this.ui && this.isDisplayed()) {\n      this.ui.container.style.top = `${this.titleBarOffset}px`;\n      const style = this.ui.container.style;\n      const width = Math.min(this.dimension.width * 0.62 /* golden cut */, QuickInputController.MAX_WIDTH);\n      style.width = width + 'px';\n      style.marginLeft = '-' + width / 2 + 'px';\n      this.ui.inputBox.layout();\n      this.ui.list.layout(this.dimension && this.dimension.height * 0.4);\n    }\n  }\n  applyStyles(styles) {\n    this.styles = styles;\n    this.updateStyles();\n  }\n  updateStyles() {\n    if (this.ui) {\n      const {\n        quickInputTitleBackground,\n        quickInputBackground,\n        quickInputForeground,\n        widgetBorder,\n        widgetShadow\n      } = this.styles.widget;\n      this.ui.titleBar.style.backgroundColor = quickInputTitleBackground !== null && quickInputTitleBackground !== void 0 ? quickInputTitleBackground : '';\n      this.ui.container.style.backgroundColor = quickInputBackground !== null && quickInputBackground !== void 0 ? quickInputBackground : '';\n      this.ui.container.style.color = quickInputForeground !== null && quickInputForeground !== void 0 ? quickInputForeground : '';\n      this.ui.container.style.border = widgetBorder ? `1px solid ${widgetBorder}` : '';\n      this.ui.container.style.boxShadow = widgetShadow ? `0 0 8px 2px ${widgetShadow}` : '';\n      this.ui.list.style(this.styles.list);\n      const content = [];\n      if (this.styles.pickerGroup.pickerGroupBorder) {\n        content.push(`.quick-input-list .quick-input-list-entry { border-top-color:  ${this.styles.pickerGroup.pickerGroupBorder}; }`);\n      }\n      if (this.styles.pickerGroup.pickerGroupForeground) {\n        content.push(`.quick-input-list .quick-input-list-separator { color:  ${this.styles.pickerGroup.pickerGroupForeground}; }`);\n      }\n      if (this.styles.pickerGroup.pickerGroupForeground) {\n        content.push(`.quick-input-list .quick-input-list-separator-as-item { color: var(--vscode-descriptionForeground); }`);\n      }\n      if (this.styles.keybindingLabel.keybindingLabelBackground || this.styles.keybindingLabel.keybindingLabelBorder || this.styles.keybindingLabel.keybindingLabelBottomBorder || this.styles.keybindingLabel.keybindingLabelShadow || this.styles.keybindingLabel.keybindingLabelForeground) {\n        content.push('.quick-input-list .monaco-keybinding > .monaco-keybinding-key {');\n        if (this.styles.keybindingLabel.keybindingLabelBackground) {\n          content.push(`background-color: ${this.styles.keybindingLabel.keybindingLabelBackground};`);\n        }\n        if (this.styles.keybindingLabel.keybindingLabelBorder) {\n          // Order matters here. `border-color` must come before `border-bottom-color`.\n          content.push(`border-color: ${this.styles.keybindingLabel.keybindingLabelBorder};`);\n        }\n        if (this.styles.keybindingLabel.keybindingLabelBottomBorder) {\n          content.push(`border-bottom-color: ${this.styles.keybindingLabel.keybindingLabelBottomBorder};`);\n        }\n        if (this.styles.keybindingLabel.keybindingLabelShadow) {\n          content.push(`box-shadow: inset 0 -1px 0 ${this.styles.keybindingLabel.keybindingLabelShadow};`);\n        }\n        if (this.styles.keybindingLabel.keybindingLabelForeground) {\n          content.push(`color: ${this.styles.keybindingLabel.keybindingLabelForeground};`);\n        }\n        content.push('}');\n      }\n      const newStyles = content.join('\\n');\n      if (newStyles !== this.ui.styleSheet.textContent) {\n        this.ui.styleSheet.textContent = newStyles;\n      }\n    }\n  }\n  isDisplayed() {\n    return this.ui && this.ui.container.style.display !== 'none';\n  }\n}\nQuickInputController.MAX_WIDTH = 600; // Max total width of quick input widget","map":{"version":3,"names":["dom","ActionBar","Button","CountBadge","ProgressBar","CancellationToken","Emitter","Disposable","dispose","Severity","localize","QuickInputHideReason","QuickInputBox","QuickInputList","QuickPick","backButton","InputBox","$","QuickInputController","constructor","options","themeService","enabled","onDidAcceptEmitter","_register","onDidCustomEmitter","onDidTriggerButtonEmitter","keyMods","ctrlCmd","alt","controller","onShowEmitter","onShow","event","onHideEmitter","onHide","idPrefix","parentElement","container","styles","registerKeyModsListeners","listener","e","ctrlKey","metaKey","altKey","addDisposableListener","window","EventType","KEY_DOWN","KEY_UP","MOUSE_DOWN","getUI","ui","append","tabIndex","style","display","styleSheet","createStyleSheet","titleBar","actionBarOption","hoverDelegate","undefined","leftActionBar","domNode","classList","add","title","rightActionBar","headerContainer","checkAll","type","setAttribute","addStandardDisposableListener","CHANGE","checked","list","setAllVisibleChecked","CLICK","x","y","inputBox","setFocus","description2","inputContainer","filterContainer","toggle","visibleCountContainer","visibleCount","countFormat","key","comment","countBadge","countContainer","count","okContainer","ok","button","label","onDidClick","fire","customButtonContainer","customButton","message","progressBar","getContainer","widget","description1","listId","onDidChangeFocus","_a","getActiveDescendant","onChangedAllVisibleChecked","onChangedVisibleCount","c","setCount","onChangedCheckedCount","onLeave","setTimeout","canSelectMany","clearFocus","focusTracker","trackFocus","FOCUS","isAncestor","relatedTarget","previousFocusElement","HTMLElement","onDidBlur","ignoreFocusOut","hide","Blur","target","keyCode","EventHelper","stop","Gesture","selectors","contains","push","isDisplayed","stops","querySelectorAll","join","shiftKey","length","focus","toggleHover","onDidAccept","onDidCustom","onDidTriggerButton","show","setVisibilities","visibilities","setEnabled","setContextKey","contextKey","linkOpenerDelegate","content","updateStyles","pick","picks","token","None","Promise","doResolve","reject","resolve","result","onKeyMods","call","input","isCancellationRequested","createQuickPick","activeItem","disposables","selectedItems","slice","activeItems","onDidChangeActive","items","focused","onDidFocus","onDidChangeSelection","onDidTriggerItemButton","Object","assign","removeItem","index","indexOf","item","removed","splice","filter","keepScrollPositionBefore","keepScrollPosition","onDidTriggerSeparatorButton","onDidChangeValue","value","onCancellationRequested","onDidHide","canPickMany","placeholder","placeHolder","ignoreFocusLost","matchOnDescription","matchOnDetail","matchOnLabel","autoFocusOnList","quickNavigate","hideInput","busy","all","then","_activeItem","picked","err","createInputBox","oldController","didHide","clear","textContent","reset","password","showDecoration","Ignore","setElements","sortByLabel","toggles","backKeybindingLabel","tooltip","updateLayout","description","checkBox","viewItems","action","disabled","reason","_b","_c","focusChanged","document","activeElement","currentElement","offsetParent","returnFocus","layout","dimension","titleBarOffset","top","width","Math","min","MAX_WIDTH","marginLeft","height","applyStyles","quickInputTitleBackground","quickInputBackground","quickInputForeground","widgetBorder","widgetShadow","backgroundColor","color","border","boxShadow","pickerGroup","pickerGroupBorder","pickerGroupForeground","keybindingLabel","keybindingLabelBackground","keybindingLabelBorder","keybindingLabelBottomBorder","keybindingLabelShadow","keybindingLabelForeground","newStyles"],"sources":["/home/chlohest/work/website/my_web/node_modules/monaco-editor/esm/vs/platform/quickinput/browser/quickInputController.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport * as dom from '../../../base/browser/dom.js';\nimport { ActionBar } from '../../../base/browser/ui/actionbar/actionbar.js';\nimport { Button } from '../../../base/browser/ui/button/button.js';\nimport { CountBadge } from '../../../base/browser/ui/countBadge/countBadge.js';\nimport { ProgressBar } from '../../../base/browser/ui/progressbar/progressbar.js';\nimport { CancellationToken } from '../../../base/common/cancellation.js';\nimport { Emitter } from '../../../base/common/event.js';\nimport { Disposable, dispose } from '../../../base/common/lifecycle.js';\nimport Severity from '../../../base/common/severity.js';\nimport { localize } from '../../../nls.js';\nimport { QuickInputHideReason } from '../common/quickInput.js';\nimport { QuickInputBox } from './quickInputBox.js';\nimport { QuickInputList } from './quickInputList.js';\nimport { QuickPick, backButton, InputBox } from './quickInput.js';\nconst $ = dom.$;\nexport class QuickInputController extends Disposable {\n    constructor(options, themeService) {\n        super();\n        this.options = options;\n        this.themeService = themeService;\n        this.enabled = true;\n        this.onDidAcceptEmitter = this._register(new Emitter());\n        this.onDidCustomEmitter = this._register(new Emitter());\n        this.onDidTriggerButtonEmitter = this._register(new Emitter());\n        this.keyMods = { ctrlCmd: false, alt: false };\n        this.controller = null;\n        this.onShowEmitter = this._register(new Emitter());\n        this.onShow = this.onShowEmitter.event;\n        this.onHideEmitter = this._register(new Emitter());\n        this.onHide = this.onHideEmitter.event;\n        this.idPrefix = options.idPrefix;\n        this.parentElement = options.container;\n        this.styles = options.styles;\n        this.registerKeyModsListeners();\n    }\n    registerKeyModsListeners() {\n        const listener = (e) => {\n            this.keyMods.ctrlCmd = e.ctrlKey || e.metaKey;\n            this.keyMods.alt = e.altKey;\n        };\n        this._register(dom.addDisposableListener(window, dom.EventType.KEY_DOWN, listener, true));\n        this._register(dom.addDisposableListener(window, dom.EventType.KEY_UP, listener, true));\n        this._register(dom.addDisposableListener(window, dom.EventType.MOUSE_DOWN, listener, true));\n    }\n    getUI() {\n        if (this.ui) {\n            return this.ui;\n        }\n        const container = dom.append(this.parentElement, $('.quick-input-widget.show-file-icons'));\n        container.tabIndex = -1;\n        container.style.display = 'none';\n        const styleSheet = dom.createStyleSheet(container);\n        const titleBar = dom.append(container, $('.quick-input-titlebar'));\n        const actionBarOption = this.options.hoverDelegate ? { hoverDelegate: this.options.hoverDelegate } : undefined;\n        const leftActionBar = this._register(new ActionBar(titleBar, actionBarOption));\n        leftActionBar.domNode.classList.add('quick-input-left-action-bar');\n        const title = dom.append(titleBar, $('.quick-input-title'));\n        const rightActionBar = this._register(new ActionBar(titleBar, actionBarOption));\n        rightActionBar.domNode.classList.add('quick-input-right-action-bar');\n        const headerContainer = dom.append(container, $('.quick-input-header'));\n        const checkAll = dom.append(headerContainer, $('input.quick-input-check-all'));\n        checkAll.type = 'checkbox';\n        checkAll.setAttribute('aria-label', localize('quickInput.checkAll', \"Toggle all checkboxes\"));\n        this._register(dom.addStandardDisposableListener(checkAll, dom.EventType.CHANGE, e => {\n            const checked = checkAll.checked;\n            list.setAllVisibleChecked(checked);\n        }));\n        this._register(dom.addDisposableListener(checkAll, dom.EventType.CLICK, e => {\n            if (e.x || e.y) { // Avoid 'click' triggered by 'space'...\n                inputBox.setFocus();\n            }\n        }));\n        const description2 = dom.append(headerContainer, $('.quick-input-description'));\n        const inputContainer = dom.append(headerContainer, $('.quick-input-and-message'));\n        const filterContainer = dom.append(inputContainer, $('.quick-input-filter'));\n        const inputBox = this._register(new QuickInputBox(filterContainer, this.styles.inputBox, this.styles.toggle));\n        inputBox.setAttribute('aria-describedby', `${this.idPrefix}message`);\n        const visibleCountContainer = dom.append(filterContainer, $('.quick-input-visible-count'));\n        visibleCountContainer.setAttribute('aria-live', 'polite');\n        visibleCountContainer.setAttribute('aria-atomic', 'true');\n        const visibleCount = new CountBadge(visibleCountContainer, { countFormat: localize({ key: 'quickInput.visibleCount', comment: ['This tells the user how many items are shown in a list of items to select from. The items can be anything. Currently not visible, but read by screen readers.'] }, \"{0} Results\") }, this.styles.countBadge);\n        const countContainer = dom.append(filterContainer, $('.quick-input-count'));\n        countContainer.setAttribute('aria-live', 'polite');\n        const count = new CountBadge(countContainer, { countFormat: localize({ key: 'quickInput.countSelected', comment: ['This tells the user how many items are selected in a list of items to select from. The items can be anything.'] }, \"{0} Selected\") }, this.styles.countBadge);\n        const okContainer = dom.append(headerContainer, $('.quick-input-action'));\n        const ok = this._register(new Button(okContainer, this.styles.button));\n        ok.label = localize('ok', \"OK\");\n        this._register(ok.onDidClick(e => {\n            this.onDidAcceptEmitter.fire();\n        }));\n        const customButtonContainer = dom.append(headerContainer, $('.quick-input-action'));\n        const customButton = this._register(new Button(customButtonContainer, this.styles.button));\n        customButton.label = localize('custom', \"Custom\");\n        this._register(customButton.onDidClick(e => {\n            this.onDidCustomEmitter.fire();\n        }));\n        const message = dom.append(inputContainer, $(`#${this.idPrefix}message.quick-input-message`));\n        const progressBar = this._register(new ProgressBar(container, this.styles.progressBar));\n        progressBar.getContainer().classList.add('quick-input-progress');\n        const widget = dom.append(container, $('.quick-input-html-widget'));\n        widget.tabIndex = -1;\n        const description1 = dom.append(container, $('.quick-input-description'));\n        const listId = this.idPrefix + 'list';\n        const list = this._register(new QuickInputList(container, listId, this.options, this.themeService));\n        inputBox.setAttribute('aria-controls', listId);\n        this._register(list.onDidChangeFocus(() => {\n            var _a;\n            inputBox.setAttribute('aria-activedescendant', (_a = list.getActiveDescendant()) !== null && _a !== void 0 ? _a : '');\n        }));\n        this._register(list.onChangedAllVisibleChecked(checked => {\n            checkAll.checked = checked;\n        }));\n        this._register(list.onChangedVisibleCount(c => {\n            visibleCount.setCount(c);\n        }));\n        this._register(list.onChangedCheckedCount(c => {\n            count.setCount(c);\n        }));\n        this._register(list.onLeave(() => {\n            // Defer to avoid the input field reacting to the triggering key.\n            setTimeout(() => {\n                inputBox.setFocus();\n                if (this.controller instanceof QuickPick && this.controller.canSelectMany) {\n                    list.clearFocus();\n                }\n            }, 0);\n        }));\n        const focusTracker = dom.trackFocus(container);\n        this._register(focusTracker);\n        this._register(dom.addDisposableListener(container, dom.EventType.FOCUS, e => {\n            // Ignore focus events within container\n            if (dom.isAncestor(e.relatedTarget, container)) {\n                return;\n            }\n            this.previousFocusElement = e.relatedTarget instanceof HTMLElement ? e.relatedTarget : undefined;\n        }, true));\n        this._register(focusTracker.onDidBlur(() => {\n            if (!this.getUI().ignoreFocusOut && !this.options.ignoreFocusOut()) {\n                this.hide(QuickInputHideReason.Blur);\n            }\n            this.previousFocusElement = undefined;\n        }));\n        this._register(dom.addDisposableListener(container, dom.EventType.FOCUS, (e) => {\n            inputBox.setFocus();\n        }));\n        // TODO: Turn into commands instead of handling KEY_DOWN\n        this._register(dom.addStandardDisposableListener(container, dom.EventType.KEY_DOWN, (event) => {\n            if (dom.isAncestor(event.target, widget)) {\n                return; // Ignore event if target is inside widget to allow the widget to handle the event.\n            }\n            switch (event.keyCode) {\n                case 3 /* KeyCode.Enter */:\n                    dom.EventHelper.stop(event, true);\n                    if (this.enabled) {\n                        this.onDidAcceptEmitter.fire();\n                    }\n                    break;\n                case 9 /* KeyCode.Escape */:\n                    dom.EventHelper.stop(event, true);\n                    this.hide(QuickInputHideReason.Gesture);\n                    break;\n                case 2 /* KeyCode.Tab */:\n                    if (!event.altKey && !event.ctrlKey && !event.metaKey) {\n                        // detect only visible actions\n                        const selectors = [\n                            '.quick-input-list .monaco-action-bar .always-visible',\n                            '.quick-input-list-entry:hover .monaco-action-bar',\n                            '.monaco-list-row.focused .monaco-action-bar'\n                        ];\n                        if (container.classList.contains('show-checkboxes')) {\n                            selectors.push('input');\n                        }\n                        else {\n                            selectors.push('input[type=text]');\n                        }\n                        if (this.getUI().list.isDisplayed()) {\n                            selectors.push('.monaco-list');\n                        }\n                        // focus links if there are any\n                        if (this.getUI().message) {\n                            selectors.push('.quick-input-message a');\n                        }\n                        if (this.getUI().widget) {\n                            if (dom.isAncestor(event.target, this.getUI().widget)) {\n                                // let the widget control tab\n                                break;\n                            }\n                            selectors.push('.quick-input-html-widget');\n                        }\n                        const stops = container.querySelectorAll(selectors.join(', '));\n                        if (event.shiftKey && event.target === stops[0]) {\n                            // Clear the focus from the list in order to allow\n                            // screen readers to read operations in the input box.\n                            dom.EventHelper.stop(event, true);\n                            list.clearFocus();\n                        }\n                        else if (!event.shiftKey && dom.isAncestor(event.target, stops[stops.length - 1])) {\n                            dom.EventHelper.stop(event, true);\n                            stops[0].focus();\n                        }\n                    }\n                    break;\n                case 10 /* KeyCode.Space */:\n                    if (event.ctrlKey) {\n                        dom.EventHelper.stop(event, true);\n                        this.getUI().list.toggleHover();\n                    }\n                    break;\n            }\n        }));\n        this.ui = {\n            container,\n            styleSheet,\n            leftActionBar,\n            titleBar,\n            title,\n            description1,\n            description2,\n            widget,\n            rightActionBar,\n            checkAll,\n            inputContainer,\n            filterContainer,\n            inputBox,\n            visibleCountContainer,\n            visibleCount,\n            countContainer,\n            count,\n            okContainer,\n            ok,\n            message,\n            customButtonContainer,\n            customButton,\n            list,\n            progressBar,\n            onDidAccept: this.onDidAcceptEmitter.event,\n            onDidCustom: this.onDidCustomEmitter.event,\n            onDidTriggerButton: this.onDidTriggerButtonEmitter.event,\n            ignoreFocusOut: false,\n            keyMods: this.keyMods,\n            show: controller => this.show(controller),\n            hide: () => this.hide(),\n            setVisibilities: visibilities => this.setVisibilities(visibilities),\n            setEnabled: enabled => this.setEnabled(enabled),\n            setContextKey: contextKey => this.options.setContextKey(contextKey),\n            linkOpenerDelegate: content => this.options.linkOpenerDelegate(content)\n        };\n        this.updateStyles();\n        return this.ui;\n    }\n    pick(picks, options = {}, token = CancellationToken.None) {\n        return new Promise((doResolve, reject) => {\n            let resolve = (result) => {\n                var _a;\n                resolve = doResolve;\n                (_a = options.onKeyMods) === null || _a === void 0 ? void 0 : _a.call(options, input.keyMods);\n                doResolve(result);\n            };\n            if (token.isCancellationRequested) {\n                resolve(undefined);\n                return;\n            }\n            const input = this.createQuickPick();\n            let activeItem;\n            const disposables = [\n                input,\n                input.onDidAccept(() => {\n                    if (input.canSelectMany) {\n                        resolve(input.selectedItems.slice());\n                        input.hide();\n                    }\n                    else {\n                        const result = input.activeItems[0];\n                        if (result) {\n                            resolve(result);\n                            input.hide();\n                        }\n                    }\n                }),\n                input.onDidChangeActive(items => {\n                    const focused = items[0];\n                    if (focused && options.onDidFocus) {\n                        options.onDidFocus(focused);\n                    }\n                }),\n                input.onDidChangeSelection(items => {\n                    if (!input.canSelectMany) {\n                        const result = items[0];\n                        if (result) {\n                            resolve(result);\n                            input.hide();\n                        }\n                    }\n                }),\n                input.onDidTriggerItemButton(event => options.onDidTriggerItemButton && options.onDidTriggerItemButton(Object.assign(Object.assign({}, event), { removeItem: () => {\n                        const index = input.items.indexOf(event.item);\n                        if (index !== -1) {\n                            const items = input.items.slice();\n                            const removed = items.splice(index, 1);\n                            const activeItems = input.activeItems.filter(activeItem => activeItem !== removed[0]);\n                            const keepScrollPositionBefore = input.keepScrollPosition;\n                            input.keepScrollPosition = true;\n                            input.items = items;\n                            if (activeItems) {\n                                input.activeItems = activeItems;\n                            }\n                            input.keepScrollPosition = keepScrollPositionBefore;\n                        }\n                    } }))),\n                input.onDidTriggerSeparatorButton(event => { var _a; return (_a = options.onDidTriggerSeparatorButton) === null || _a === void 0 ? void 0 : _a.call(options, event); }),\n                input.onDidChangeValue(value => {\n                    if (activeItem && !value && (input.activeItems.length !== 1 || input.activeItems[0] !== activeItem)) {\n                        input.activeItems = [activeItem];\n                    }\n                }),\n                token.onCancellationRequested(() => {\n                    input.hide();\n                }),\n                input.onDidHide(() => {\n                    dispose(disposables);\n                    resolve(undefined);\n                }),\n            ];\n            input.title = options.title;\n            input.canSelectMany = !!options.canPickMany;\n            input.placeholder = options.placeHolder;\n            input.ignoreFocusOut = !!options.ignoreFocusLost;\n            input.matchOnDescription = !!options.matchOnDescription;\n            input.matchOnDetail = !!options.matchOnDetail;\n            input.matchOnLabel = (options.matchOnLabel === undefined) || options.matchOnLabel; // default to true\n            input.autoFocusOnList = (options.autoFocusOnList === undefined) || options.autoFocusOnList; // default to true\n            input.quickNavigate = options.quickNavigate;\n            input.hideInput = !!options.hideInput;\n            input.contextKey = options.contextKey;\n            input.busy = true;\n            Promise.all([picks, options.activeItem])\n                .then(([items, _activeItem]) => {\n                activeItem = _activeItem;\n                input.busy = false;\n                input.items = items;\n                if (input.canSelectMany) {\n                    input.selectedItems = items.filter(item => item.type !== 'separator' && item.picked);\n                }\n                if (activeItem) {\n                    input.activeItems = [activeItem];\n                }\n            });\n            input.show();\n            Promise.resolve(picks).then(undefined, err => {\n                reject(err);\n                input.hide();\n            });\n        });\n    }\n    createQuickPick() {\n        const ui = this.getUI();\n        return new QuickPick(ui);\n    }\n    createInputBox() {\n        const ui = this.getUI();\n        return new InputBox(ui);\n    }\n    show(controller) {\n        const ui = this.getUI();\n        this.onShowEmitter.fire();\n        const oldController = this.controller;\n        this.controller = controller;\n        oldController === null || oldController === void 0 ? void 0 : oldController.didHide();\n        this.setEnabled(true);\n        ui.leftActionBar.clear();\n        ui.title.textContent = '';\n        ui.description1.textContent = '';\n        ui.description2.textContent = '';\n        dom.reset(ui.widget);\n        ui.rightActionBar.clear();\n        ui.checkAll.checked = false;\n        // ui.inputBox.value = ''; Avoid triggering an event.\n        ui.inputBox.placeholder = '';\n        ui.inputBox.password = false;\n        ui.inputBox.showDecoration(Severity.Ignore);\n        ui.visibleCount.setCount(0);\n        ui.count.setCount(0);\n        dom.reset(ui.message);\n        ui.progressBar.stop();\n        ui.list.setElements([]);\n        ui.list.matchOnDescription = false;\n        ui.list.matchOnDetail = false;\n        ui.list.matchOnLabel = true;\n        ui.list.sortByLabel = true;\n        ui.ignoreFocusOut = false;\n        ui.inputBox.toggles = undefined;\n        const backKeybindingLabel = this.options.backKeybindingLabel();\n        backButton.tooltip = backKeybindingLabel ? localize('quickInput.backWithKeybinding', \"Back ({0})\", backKeybindingLabel) : localize('quickInput.back', \"Back\");\n        ui.container.style.display = '';\n        this.updateLayout();\n        ui.inputBox.setFocus();\n    }\n    setVisibilities(visibilities) {\n        const ui = this.getUI();\n        ui.title.style.display = visibilities.title ? '' : 'none';\n        ui.description1.style.display = visibilities.description && (visibilities.inputBox || visibilities.checkAll) ? '' : 'none';\n        ui.description2.style.display = visibilities.description && !(visibilities.inputBox || visibilities.checkAll) ? '' : 'none';\n        ui.checkAll.style.display = visibilities.checkAll ? '' : 'none';\n        ui.inputContainer.style.display = visibilities.inputBox ? '' : 'none';\n        ui.filterContainer.style.display = visibilities.inputBox ? '' : 'none';\n        ui.visibleCountContainer.style.display = visibilities.visibleCount ? '' : 'none';\n        ui.countContainer.style.display = visibilities.count ? '' : 'none';\n        ui.okContainer.style.display = visibilities.ok ? '' : 'none';\n        ui.customButtonContainer.style.display = visibilities.customButton ? '' : 'none';\n        ui.message.style.display = visibilities.message ? '' : 'none';\n        ui.progressBar.getContainer().style.display = visibilities.progressBar ? '' : 'none';\n        ui.list.display(!!visibilities.list);\n        ui.container.classList.toggle('show-checkboxes', !!visibilities.checkBox);\n        ui.container.classList.toggle('hidden-input', !visibilities.inputBox && !visibilities.description);\n        this.updateLayout(); // TODO\n    }\n    setEnabled(enabled) {\n        if (enabled !== this.enabled) {\n            this.enabled = enabled;\n            for (const item of this.getUI().leftActionBar.viewItems) {\n                item.action.enabled = enabled;\n            }\n            for (const item of this.getUI().rightActionBar.viewItems) {\n                item.action.enabled = enabled;\n            }\n            this.getUI().checkAll.disabled = !enabled;\n            this.getUI().inputBox.enabled = enabled;\n            this.getUI().ok.enabled = enabled;\n            this.getUI().list.enabled = enabled;\n        }\n    }\n    hide(reason) {\n        var _a, _b, _c;\n        const controller = this.controller;\n        if (!controller) {\n            return;\n        }\n        const focusChanged = !dom.isAncestor(document.activeElement, (_b = (_a = this.ui) === null || _a === void 0 ? void 0 : _a.container) !== null && _b !== void 0 ? _b : null);\n        this.controller = null;\n        this.onHideEmitter.fire();\n        this.getUI().container.style.display = 'none';\n        if (!focusChanged) {\n            let currentElement = this.previousFocusElement;\n            while (currentElement && !currentElement.offsetParent) {\n                currentElement = (_c = currentElement.parentElement) !== null && _c !== void 0 ? _c : undefined;\n            }\n            if (currentElement === null || currentElement === void 0 ? void 0 : currentElement.offsetParent) {\n                currentElement.focus();\n                this.previousFocusElement = undefined;\n            }\n            else {\n                this.options.returnFocus();\n            }\n        }\n        controller.didHide(reason);\n    }\n    layout(dimension, titleBarOffset) {\n        this.dimension = dimension;\n        this.titleBarOffset = titleBarOffset;\n        this.updateLayout();\n    }\n    updateLayout() {\n        if (this.ui && this.isDisplayed()) {\n            this.ui.container.style.top = `${this.titleBarOffset}px`;\n            const style = this.ui.container.style;\n            const width = Math.min(this.dimension.width * 0.62 /* golden cut */, QuickInputController.MAX_WIDTH);\n            style.width = width + 'px';\n            style.marginLeft = '-' + (width / 2) + 'px';\n            this.ui.inputBox.layout();\n            this.ui.list.layout(this.dimension && this.dimension.height * 0.4);\n        }\n    }\n    applyStyles(styles) {\n        this.styles = styles;\n        this.updateStyles();\n    }\n    updateStyles() {\n        if (this.ui) {\n            const { quickInputTitleBackground, quickInputBackground, quickInputForeground, widgetBorder, widgetShadow, } = this.styles.widget;\n            this.ui.titleBar.style.backgroundColor = quickInputTitleBackground !== null && quickInputTitleBackground !== void 0 ? quickInputTitleBackground : '';\n            this.ui.container.style.backgroundColor = quickInputBackground !== null && quickInputBackground !== void 0 ? quickInputBackground : '';\n            this.ui.container.style.color = quickInputForeground !== null && quickInputForeground !== void 0 ? quickInputForeground : '';\n            this.ui.container.style.border = widgetBorder ? `1px solid ${widgetBorder}` : '';\n            this.ui.container.style.boxShadow = widgetShadow ? `0 0 8px 2px ${widgetShadow}` : '';\n            this.ui.list.style(this.styles.list);\n            const content = [];\n            if (this.styles.pickerGroup.pickerGroupBorder) {\n                content.push(`.quick-input-list .quick-input-list-entry { border-top-color:  ${this.styles.pickerGroup.pickerGroupBorder}; }`);\n            }\n            if (this.styles.pickerGroup.pickerGroupForeground) {\n                content.push(`.quick-input-list .quick-input-list-separator { color:  ${this.styles.pickerGroup.pickerGroupForeground}; }`);\n            }\n            if (this.styles.pickerGroup.pickerGroupForeground) {\n                content.push(`.quick-input-list .quick-input-list-separator-as-item { color: var(--vscode-descriptionForeground); }`);\n            }\n            if (this.styles.keybindingLabel.keybindingLabelBackground ||\n                this.styles.keybindingLabel.keybindingLabelBorder ||\n                this.styles.keybindingLabel.keybindingLabelBottomBorder ||\n                this.styles.keybindingLabel.keybindingLabelShadow ||\n                this.styles.keybindingLabel.keybindingLabelForeground) {\n                content.push('.quick-input-list .monaco-keybinding > .monaco-keybinding-key {');\n                if (this.styles.keybindingLabel.keybindingLabelBackground) {\n                    content.push(`background-color: ${this.styles.keybindingLabel.keybindingLabelBackground};`);\n                }\n                if (this.styles.keybindingLabel.keybindingLabelBorder) {\n                    // Order matters here. `border-color` must come before `border-bottom-color`.\n                    content.push(`border-color: ${this.styles.keybindingLabel.keybindingLabelBorder};`);\n                }\n                if (this.styles.keybindingLabel.keybindingLabelBottomBorder) {\n                    content.push(`border-bottom-color: ${this.styles.keybindingLabel.keybindingLabelBottomBorder};`);\n                }\n                if (this.styles.keybindingLabel.keybindingLabelShadow) {\n                    content.push(`box-shadow: inset 0 -1px 0 ${this.styles.keybindingLabel.keybindingLabelShadow};`);\n                }\n                if (this.styles.keybindingLabel.keybindingLabelForeground) {\n                    content.push(`color: ${this.styles.keybindingLabel.keybindingLabelForeground};`);\n                }\n                content.push('}');\n            }\n            const newStyles = content.join('\\n');\n            if (newStyles !== this.ui.styleSheet.textContent) {\n                this.ui.styleSheet.textContent = newStyles;\n            }\n        }\n    }\n    isDisplayed() {\n        return this.ui && this.ui.container.style.display !== 'none';\n    }\n}\nQuickInputController.MAX_WIDTH = 600; // Max total width of quick input widget\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}