{"ast":null,"code":"/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n    r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n    d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = this && this.__param || function (paramIndex, decorator) {\n  return function (target, key) {\n    decorator(target, key, paramIndex);\n  };\n};\nimport * as dom from '../../base/browser/dom.js';\nimport { Selection } from '../common/core/selection.js';\nimport { Range } from '../common/core/range.js';\nimport { createFastDomNode } from '../../base/browser/fastDomNode.js';\nimport { onUnexpectedError } from '../../base/common/errors.js';\nimport { PointerHandler } from './controller/pointerHandler.js';\nimport { TextAreaHandler } from './controller/textAreaHandler.js';\nimport { ViewController } from './view/viewController.js';\nimport { ViewUserInputEvents } from './view/viewUserInputEvents.js';\nimport { ContentViewOverlays, MarginViewOverlays } from './view/viewOverlays.js';\nimport { PartFingerprints } from './view/viewPart.js';\nimport { ViewContentWidgets } from './viewParts/contentWidgets/contentWidgets.js';\nimport { CurrentLineHighlightOverlay, CurrentLineMarginHighlightOverlay } from './viewParts/currentLineHighlight/currentLineHighlight.js';\nimport { DecorationsOverlay } from './viewParts/decorations/decorations.js';\nimport { EditorScrollbar } from './viewParts/editorScrollbar/editorScrollbar.js';\nimport { IndentGuidesOverlay } from './viewParts/indentGuides/indentGuides.js';\nimport { LineNumbersOverlay } from './viewParts/lineNumbers/lineNumbers.js';\nimport { ViewLines } from './viewParts/lines/viewLines.js';\nimport { LinesDecorationsOverlay } from './viewParts/linesDecorations/linesDecorations.js';\nimport { Margin } from './viewParts/margin/margin.js';\nimport { MarginViewLineDecorationsOverlay } from './viewParts/marginDecorations/marginDecorations.js';\nimport { Minimap } from './viewParts/minimap/minimap.js';\nimport { ViewOverlayWidgets } from './viewParts/overlayWidgets/overlayWidgets.js';\nimport { DecorationsOverviewRuler } from './viewParts/overviewRuler/decorationsOverviewRuler.js';\nimport { OverviewRuler } from './viewParts/overviewRuler/overviewRuler.js';\nimport { Rulers } from './viewParts/rulers/rulers.js';\nimport { ScrollDecorationViewPart } from './viewParts/scrollDecoration/scrollDecoration.js';\nimport { SelectionsOverlay } from './viewParts/selections/selections.js';\nimport { ViewCursors } from './viewParts/viewCursors/viewCursors.js';\nimport { ViewZones } from './viewParts/viewZones/viewZones.js';\nimport { Position } from '../common/core/position.js';\nimport { RenderingContext } from './view/renderingContext.js';\nimport { ViewContext } from '../common/viewModel/viewContext.js';\nimport { ViewportData } from '../common/viewLayout/viewLinesViewportData.js';\nimport { ViewEventHandler } from '../common/viewEventHandler.js';\nimport { getThemeTypeSelector } from '../../platform/theme/common/themeService.js';\nimport { PointerHandlerLastRenderData } from './controller/mouseTarget.js';\nimport { BlockDecorations } from './viewParts/blockDecorations/blockDecorations.js';\nimport { inputLatency } from '../../base/browser/performance.js';\nimport { WhitespaceOverlay } from './viewParts/whitespace/whitespace.js';\nimport { GlyphMarginWidgets } from './viewParts/glyphMargin/glyphMargin.js';\nimport { GlyphMarginLane } from '../common/model.js';\nimport { IInstantiationService } from '../../platform/instantiation/common/instantiation.js';\nlet View = class View extends ViewEventHandler {\n  constructor(commandDelegate, configuration, colorTheme, model, userInputEvents, overflowWidgetsDomNode, _instantiationService) {\n    super();\n    this._instantiationService = _instantiationService;\n    // Actual mutable state\n    this._shouldRecomputeGlyphMarginLanes = false;\n    this._selections = [new Selection(1, 1, 1, 1)];\n    this._renderAnimationFrame = null;\n    const viewController = new ViewController(configuration, model, userInputEvents, commandDelegate);\n    // The view context is passed on to most classes (basically to reduce param. counts in ctors)\n    this._context = new ViewContext(configuration, colorTheme, model);\n    // Ensure the view is the first event handler in order to update the layout\n    this._context.addEventHandler(this);\n    this._viewParts = [];\n    // Keyboard handler\n    this._textAreaHandler = this._instantiationService.createInstance(TextAreaHandler, this._context, viewController, this._createTextAreaHandlerHelper());\n    this._viewParts.push(this._textAreaHandler);\n    // These two dom nodes must be constructed up front, since references are needed in the layout provider (scrolling & co.)\n    this._linesContent = createFastDomNode(document.createElement('div'));\n    this._linesContent.setClassName('lines-content' + ' monaco-editor-background');\n    this._linesContent.setPosition('absolute');\n    this.domNode = createFastDomNode(document.createElement('div'));\n    this.domNode.setClassName(this._getEditorClassName());\n    // Set role 'code' for better screen reader support https://github.com/microsoft/vscode/issues/93438\n    this.domNode.setAttribute('role', 'code');\n    this._overflowGuardContainer = createFastDomNode(document.createElement('div'));\n    PartFingerprints.write(this._overflowGuardContainer, 3 /* PartFingerprint.OverflowGuard */);\n    this._overflowGuardContainer.setClassName('overflow-guard');\n    this._scrollbar = new EditorScrollbar(this._context, this._linesContent, this.domNode, this._overflowGuardContainer);\n    this._viewParts.push(this._scrollbar);\n    // View Lines\n    this._viewLines = new ViewLines(this._context, this._linesContent);\n    // View Zones\n    this._viewZones = new ViewZones(this._context);\n    this._viewParts.push(this._viewZones);\n    // Decorations overview ruler\n    const decorationsOverviewRuler = new DecorationsOverviewRuler(this._context);\n    this._viewParts.push(decorationsOverviewRuler);\n    const scrollDecoration = new ScrollDecorationViewPart(this._context);\n    this._viewParts.push(scrollDecoration);\n    const contentViewOverlays = new ContentViewOverlays(this._context);\n    this._viewParts.push(contentViewOverlays);\n    contentViewOverlays.addDynamicOverlay(new CurrentLineHighlightOverlay(this._context));\n    contentViewOverlays.addDynamicOverlay(new SelectionsOverlay(this._context));\n    contentViewOverlays.addDynamicOverlay(new IndentGuidesOverlay(this._context));\n    contentViewOverlays.addDynamicOverlay(new DecorationsOverlay(this._context));\n    contentViewOverlays.addDynamicOverlay(new WhitespaceOverlay(this._context));\n    const marginViewOverlays = new MarginViewOverlays(this._context);\n    this._viewParts.push(marginViewOverlays);\n    marginViewOverlays.addDynamicOverlay(new CurrentLineMarginHighlightOverlay(this._context));\n    marginViewOverlays.addDynamicOverlay(new MarginViewLineDecorationsOverlay(this._context));\n    marginViewOverlays.addDynamicOverlay(new LinesDecorationsOverlay(this._context));\n    marginViewOverlays.addDynamicOverlay(new LineNumbersOverlay(this._context));\n    // Glyph margin widgets\n    this._glyphMarginWidgets = new GlyphMarginWidgets(this._context);\n    this._viewParts.push(this._glyphMarginWidgets);\n    const margin = new Margin(this._context);\n    margin.getDomNode().appendChild(this._viewZones.marginDomNode);\n    margin.getDomNode().appendChild(marginViewOverlays.getDomNode());\n    margin.getDomNode().appendChild(this._glyphMarginWidgets.domNode);\n    this._viewParts.push(margin);\n    // Content widgets\n    this._contentWidgets = new ViewContentWidgets(this._context, this.domNode);\n    this._viewParts.push(this._contentWidgets);\n    this._viewCursors = new ViewCursors(this._context);\n    this._viewParts.push(this._viewCursors);\n    // Overlay widgets\n    this._overlayWidgets = new ViewOverlayWidgets(this._context);\n    this._viewParts.push(this._overlayWidgets);\n    const rulers = new Rulers(this._context);\n    this._viewParts.push(rulers);\n    const blockOutline = new BlockDecorations(this._context);\n    this._viewParts.push(blockOutline);\n    const minimap = new Minimap(this._context);\n    this._viewParts.push(minimap);\n    // -------------- Wire dom nodes up\n    if (decorationsOverviewRuler) {\n      const overviewRulerData = this._scrollbar.getOverviewRulerLayoutInfo();\n      overviewRulerData.parent.insertBefore(decorationsOverviewRuler.getDomNode(), overviewRulerData.insertBefore);\n    }\n    this._linesContent.appendChild(contentViewOverlays.getDomNode());\n    this._linesContent.appendChild(rulers.domNode);\n    this._linesContent.appendChild(this._viewZones.domNode);\n    this._linesContent.appendChild(this._viewLines.getDomNode());\n    this._linesContent.appendChild(this._contentWidgets.domNode);\n    this._linesContent.appendChild(this._viewCursors.getDomNode());\n    this._overflowGuardContainer.appendChild(margin.getDomNode());\n    this._overflowGuardContainer.appendChild(this._scrollbar.getDomNode());\n    this._overflowGuardContainer.appendChild(scrollDecoration.getDomNode());\n    this._overflowGuardContainer.appendChild(this._textAreaHandler.textArea);\n    this._overflowGuardContainer.appendChild(this._textAreaHandler.textAreaCover);\n    this._overflowGuardContainer.appendChild(this._overlayWidgets.getDomNode());\n    this._overflowGuardContainer.appendChild(minimap.getDomNode());\n    this._overflowGuardContainer.appendChild(blockOutline.domNode);\n    this.domNode.appendChild(this._overflowGuardContainer);\n    if (overflowWidgetsDomNode) {\n      overflowWidgetsDomNode.appendChild(this._contentWidgets.overflowingContentWidgetsDomNode.domNode);\n    } else {\n      this.domNode.appendChild(this._contentWidgets.overflowingContentWidgetsDomNode);\n    }\n    this._applyLayout();\n    // Pointer handler\n    this._pointerHandler = this._register(new PointerHandler(this._context, viewController, this._createPointerHandlerHelper()));\n  }\n  _flushAccumulatedAndRenderNow() {\n    if (this._shouldRecomputeGlyphMarginLanes) {\n      this._shouldRecomputeGlyphMarginLanes = false;\n      this._context.configuration.setGlyphMarginDecorationLaneCount(this._computeGlyphMarginLaneCount());\n    }\n    inputLatency.onRenderStart();\n    this._renderNow();\n  }\n  _computeGlyphMarginLaneCount() {\n    const model = this._context.viewModel.model;\n    let glyphs = [];\n    // Add all margin decorations\n    glyphs = glyphs.concat(model.getAllMarginDecorations().map(decoration => {\n      var _a, _b;\n      const lane = (_b = (_a = decoration.options.glyphMargin) === null || _a === void 0 ? void 0 : _a.position) !== null && _b !== void 0 ? _b : GlyphMarginLane.Left;\n      return {\n        range: decoration.range,\n        lane\n      };\n    }));\n    // Add all glyph margin widgets\n    glyphs = glyphs.concat(this._glyphMarginWidgets.getWidgets().map(widget => {\n      const range = model.validateRange(widget.preference.range);\n      return {\n        range,\n        lane: widget.preference.lane\n      };\n    }));\n    // Sorted by their start position\n    glyphs.sort((a, b) => Range.compareRangesUsingStarts(a.range, b.range));\n    let leftDecRange = null;\n    let rightDecRange = null;\n    for (const decoration of glyphs) {\n      if (decoration.lane === GlyphMarginLane.Left && (!leftDecRange || Range.compareRangesUsingEnds(leftDecRange, decoration.range) < 0)) {\n        // assign only if the range of `decoration` ends after, which means it has a higher chance to overlap with the other lane\n        leftDecRange = decoration.range;\n      }\n      if (decoration.lane === GlyphMarginLane.Right && (!rightDecRange || Range.compareRangesUsingEnds(rightDecRange, decoration.range) < 0)) {\n        // assign only if the range of `decoration` ends after, which means it has a higher chance to overlap with the other lane\n        rightDecRange = decoration.range;\n      }\n      if (leftDecRange && rightDecRange) {\n        if (leftDecRange.endLineNumber < rightDecRange.startLineNumber) {\n          // there's no chance for `leftDecRange` to ever intersect something going further\n          leftDecRange = null;\n          continue;\n        }\n        if (rightDecRange.endLineNumber < leftDecRange.startLineNumber) {\n          // there's no chance for `rightDecRange` to ever intersect something going further\n          rightDecRange = null;\n          continue;\n        }\n        // leftDecRange and rightDecRange are intersecting or touching => we need two lanes\n        return 2;\n      }\n    }\n    return 1;\n  }\n  _createPointerHandlerHelper() {\n    return {\n      viewDomNode: this.domNode.domNode,\n      linesContentDomNode: this._linesContent.domNode,\n      viewLinesDomNode: this._viewLines.getDomNode().domNode,\n      focusTextArea: () => {\n        this.focus();\n      },\n      dispatchTextAreaEvent: event => {\n        this._textAreaHandler.textArea.domNode.dispatchEvent(event);\n      },\n      getLastRenderData: () => {\n        const lastViewCursorsRenderData = this._viewCursors.getLastRenderData() || [];\n        const lastTextareaPosition = this._textAreaHandler.getLastRenderData();\n        return new PointerHandlerLastRenderData(lastViewCursorsRenderData, lastTextareaPosition);\n      },\n      renderNow: () => {\n        this.render(true, false);\n      },\n      shouldSuppressMouseDownOnViewZone: viewZoneId => {\n        return this._viewZones.shouldSuppressMouseDownOnViewZone(viewZoneId);\n      },\n      shouldSuppressMouseDownOnWidget: widgetId => {\n        return this._contentWidgets.shouldSuppressMouseDownOnWidget(widgetId);\n      },\n      getPositionFromDOMInfo: (spanNode, offset) => {\n        this._flushAccumulatedAndRenderNow();\n        return this._viewLines.getPositionFromDOMInfo(spanNode, offset);\n      },\n      visibleRangeForPosition: (lineNumber, column) => {\n        this._flushAccumulatedAndRenderNow();\n        return this._viewLines.visibleRangeForPosition(new Position(lineNumber, column));\n      },\n      getLineWidth: lineNumber => {\n        this._flushAccumulatedAndRenderNow();\n        return this._viewLines.getLineWidth(lineNumber);\n      }\n    };\n  }\n  _createTextAreaHandlerHelper() {\n    return {\n      visibleRangeForPosition: position => {\n        this._flushAccumulatedAndRenderNow();\n        return this._viewLines.visibleRangeForPosition(position);\n      }\n    };\n  }\n  _applyLayout() {\n    const options = this._context.configuration.options;\n    const layoutInfo = options.get(143 /* EditorOption.layoutInfo */);\n    this.domNode.setWidth(layoutInfo.width);\n    this.domNode.setHeight(layoutInfo.height);\n    this._overflowGuardContainer.setWidth(layoutInfo.width);\n    this._overflowGuardContainer.setHeight(layoutInfo.height);\n    this._linesContent.setWidth(1000000);\n    this._linesContent.setHeight(1000000);\n  }\n  _getEditorClassName() {\n    const focused = this._textAreaHandler.isFocused() ? ' focused' : '';\n    return this._context.configuration.options.get(140 /* EditorOption.editorClassName */) + ' ' + getThemeTypeSelector(this._context.theme.type) + focused;\n  }\n  // --- begin event handlers\n  handleEvents(events) {\n    super.handleEvents(events);\n    this._scheduleRender();\n  }\n  onConfigurationChanged(e) {\n    this.domNode.setClassName(this._getEditorClassName());\n    this._applyLayout();\n    return false;\n  }\n  onCursorStateChanged(e) {\n    this._selections = e.selections;\n    return false;\n  }\n  onDecorationsChanged(e) {\n    if (e.affectsGlyphMargin) {\n      this._shouldRecomputeGlyphMarginLanes = true;\n    }\n    return false;\n  }\n  onFocusChanged(e) {\n    this.domNode.setClassName(this._getEditorClassName());\n    return false;\n  }\n  onThemeChanged(e) {\n    this._context.theme.update(e.theme);\n    this.domNode.setClassName(this._getEditorClassName());\n    return false;\n  }\n  // --- end event handlers\n  dispose() {\n    if (this._renderAnimationFrame !== null) {\n      this._renderAnimationFrame.dispose();\n      this._renderAnimationFrame = null;\n    }\n    this._contentWidgets.overflowingContentWidgetsDomNode.domNode.remove();\n    this._context.removeEventHandler(this);\n    this._viewLines.dispose();\n    // Destroy view parts\n    for (const viewPart of this._viewParts) {\n      viewPart.dispose();\n    }\n    super.dispose();\n  }\n  _scheduleRender() {\n    if (this._renderAnimationFrame === null) {\n      this._renderAnimationFrame = dom.runAtThisOrScheduleAtNextAnimationFrame(this._onRenderScheduled.bind(this), 100);\n    }\n  }\n  _onRenderScheduled() {\n    this._renderAnimationFrame = null;\n    this._flushAccumulatedAndRenderNow();\n  }\n  _renderNow() {\n    safeInvokeNoArg(() => this._actualRender());\n  }\n  _getViewPartsToRender() {\n    const result = [];\n    let resultLen = 0;\n    for (const viewPart of this._viewParts) {\n      if (viewPart.shouldRender()) {\n        result[resultLen++] = viewPart;\n      }\n    }\n    return result;\n  }\n  _actualRender() {\n    if (!dom.isInDOM(this.domNode.domNode)) {\n      return;\n    }\n    let viewPartsToRender = this._getViewPartsToRender();\n    if (!this._viewLines.shouldRender() && viewPartsToRender.length === 0) {\n      // Nothing to render\n      return;\n    }\n    const partialViewportData = this._context.viewLayout.getLinesViewportData();\n    this._context.viewModel.setViewport(partialViewportData.startLineNumber, partialViewportData.endLineNumber, partialViewportData.centeredLineNumber);\n    const viewportData = new ViewportData(this._selections, partialViewportData, this._context.viewLayout.getWhitespaceViewportData(), this._context.viewModel);\n    if (this._contentWidgets.shouldRender()) {\n      // Give the content widgets a chance to set their max width before a possible synchronous layout\n      this._contentWidgets.onBeforeRender(viewportData);\n    }\n    if (this._viewLines.shouldRender()) {\n      this._viewLines.renderText(viewportData);\n      this._viewLines.onDidRender();\n      // Rendering of viewLines might cause scroll events to occur, so collect view parts to render again\n      viewPartsToRender = this._getViewPartsToRender();\n    }\n    const renderingContext = new RenderingContext(this._context.viewLayout, viewportData, this._viewLines);\n    // Render the rest of the parts\n    for (const viewPart of viewPartsToRender) {\n      viewPart.prepareRender(renderingContext);\n    }\n    for (const viewPart of viewPartsToRender) {\n      viewPart.render(renderingContext);\n      viewPart.onDidRender();\n    }\n  }\n  // --- BEGIN CodeEditor helpers\n  delegateVerticalScrollbarPointerDown(browserEvent) {\n    this._scrollbar.delegateVerticalScrollbarPointerDown(browserEvent);\n  }\n  delegateScrollFromMouseWheelEvent(browserEvent) {\n    this._scrollbar.delegateScrollFromMouseWheelEvent(browserEvent);\n  }\n  restoreState(scrollPosition) {\n    this._context.viewModel.viewLayout.setScrollPosition({\n      scrollTop: scrollPosition.scrollTop,\n      scrollLeft: scrollPosition.scrollLeft\n    }, 1 /* ScrollType.Immediate */);\n    this._context.viewModel.visibleLinesStabilized();\n  }\n  getOffsetForColumn(modelLineNumber, modelColumn) {\n    const modelPosition = this._context.viewModel.model.validatePosition({\n      lineNumber: modelLineNumber,\n      column: modelColumn\n    });\n    const viewPosition = this._context.viewModel.coordinatesConverter.convertModelPositionToViewPosition(modelPosition);\n    this._flushAccumulatedAndRenderNow();\n    const visibleRange = this._viewLines.visibleRangeForPosition(new Position(viewPosition.lineNumber, viewPosition.column));\n    if (!visibleRange) {\n      return -1;\n    }\n    return visibleRange.left;\n  }\n  getTargetAtClientPoint(clientX, clientY) {\n    const mouseTarget = this._pointerHandler.getTargetAtClientPoint(clientX, clientY);\n    if (!mouseTarget) {\n      return null;\n    }\n    return ViewUserInputEvents.convertViewToModelMouseTarget(mouseTarget, this._context.viewModel.coordinatesConverter);\n  }\n  createOverviewRuler(cssClassName) {\n    return new OverviewRuler(this._context, cssClassName);\n  }\n  change(callback) {\n    this._viewZones.changeViewZones(callback);\n    this._scheduleRender();\n  }\n  render(now, everything) {\n    if (everything) {\n      // Force everything to render...\n      this._viewLines.forceShouldRender();\n      for (const viewPart of this._viewParts) {\n        viewPart.forceShouldRender();\n      }\n    }\n    if (now) {\n      this._flushAccumulatedAndRenderNow();\n    } else {\n      this._scheduleRender();\n    }\n  }\n  writeScreenReaderContent(reason) {\n    this._textAreaHandler.writeScreenReaderContent(reason);\n  }\n  focus() {\n    this._textAreaHandler.focusTextArea();\n  }\n  isFocused() {\n    return this._textAreaHandler.isFocused();\n  }\n  setAriaOptions(options) {\n    this._textAreaHandler.setAriaOptions(options);\n  }\n  addContentWidget(widgetData) {\n    this._contentWidgets.addWidget(widgetData.widget);\n    this.layoutContentWidget(widgetData);\n    this._scheduleRender();\n  }\n  layoutContentWidget(widgetData) {\n    var _a, _b, _c, _d, _e, _f, _g, _h;\n    this._contentWidgets.setWidgetPosition(widgetData.widget, (_b = (_a = widgetData.position) === null || _a === void 0 ? void 0 : _a.position) !== null && _b !== void 0 ? _b : null, (_d = (_c = widgetData.position) === null || _c === void 0 ? void 0 : _c.secondaryPosition) !== null && _d !== void 0 ? _d : null, (_f = (_e = widgetData.position) === null || _e === void 0 ? void 0 : _e.preference) !== null && _f !== void 0 ? _f : null, (_h = (_g = widgetData.position) === null || _g === void 0 ? void 0 : _g.positionAffinity) !== null && _h !== void 0 ? _h : null);\n    this._scheduleRender();\n  }\n  removeContentWidget(widgetData) {\n    this._contentWidgets.removeWidget(widgetData.widget);\n    this._scheduleRender();\n  }\n  addOverlayWidget(widgetData) {\n    this._overlayWidgets.addWidget(widgetData.widget);\n    this.layoutOverlayWidget(widgetData);\n    this._scheduleRender();\n  }\n  layoutOverlayWidget(widgetData) {\n    const newPreference = widgetData.position ? widgetData.position.preference : null;\n    const shouldRender = this._overlayWidgets.setWidgetPosition(widgetData.widget, newPreference);\n    if (shouldRender) {\n      this._scheduleRender();\n    }\n  }\n  removeOverlayWidget(widgetData) {\n    this._overlayWidgets.removeWidget(widgetData.widget);\n    this._scheduleRender();\n  }\n  addGlyphMarginWidget(widgetData) {\n    this._glyphMarginWidgets.addWidget(widgetData.widget);\n    this._shouldRecomputeGlyphMarginLanes = true;\n    this._scheduleRender();\n  }\n  layoutGlyphMarginWidget(widgetData) {\n    const newPreference = widgetData.position;\n    const shouldRender = this._glyphMarginWidgets.setWidgetPosition(widgetData.widget, newPreference);\n    if (shouldRender) {\n      this._shouldRecomputeGlyphMarginLanes = true;\n      this._scheduleRender();\n    }\n  }\n  removeGlyphMarginWidget(widgetData) {\n    this._glyphMarginWidgets.removeWidget(widgetData.widget);\n    this._shouldRecomputeGlyphMarginLanes = true;\n    this._scheduleRender();\n  }\n};\nView = __decorate([__param(6, IInstantiationService)], View);\nexport { View };\nfunction safeInvokeNoArg(func) {\n  try {\n    return func();\n  } catch (e) {\n    onUnexpectedError(e);\n  }\n}","map":{"version":3,"names":["__decorate","decorators","target","key","desc","c","arguments","length","r","Object","getOwnPropertyDescriptor","d","Reflect","decorate","i","defineProperty","__param","paramIndex","decorator","dom","Selection","Range","createFastDomNode","onUnexpectedError","PointerHandler","TextAreaHandler","ViewController","ViewUserInputEvents","ContentViewOverlays","MarginViewOverlays","PartFingerprints","ViewContentWidgets","CurrentLineHighlightOverlay","CurrentLineMarginHighlightOverlay","DecorationsOverlay","EditorScrollbar","IndentGuidesOverlay","LineNumbersOverlay","ViewLines","LinesDecorationsOverlay","Margin","MarginViewLineDecorationsOverlay","Minimap","ViewOverlayWidgets","DecorationsOverviewRuler","OverviewRuler","Rulers","ScrollDecorationViewPart","SelectionsOverlay","ViewCursors","ViewZones","Position","RenderingContext","ViewContext","ViewportData","ViewEventHandler","getThemeTypeSelector","PointerHandlerLastRenderData","BlockDecorations","inputLatency","WhitespaceOverlay","GlyphMarginWidgets","GlyphMarginLane","IInstantiationService","View","constructor","commandDelegate","configuration","colorTheme","model","userInputEvents","overflowWidgetsDomNode","_instantiationService","_shouldRecomputeGlyphMarginLanes","_selections","_renderAnimationFrame","viewController","_context","addEventHandler","_viewParts","_textAreaHandler","createInstance","_createTextAreaHandlerHelper","push","_linesContent","document","createElement","setClassName","setPosition","domNode","_getEditorClassName","setAttribute","_overflowGuardContainer","write","_scrollbar","_viewLines","_viewZones","decorationsOverviewRuler","scrollDecoration","contentViewOverlays","addDynamicOverlay","marginViewOverlays","_glyphMarginWidgets","margin","getDomNode","appendChild","marginDomNode","_contentWidgets","_viewCursors","_overlayWidgets","rulers","blockOutline","minimap","overviewRulerData","getOverviewRulerLayoutInfo","parent","insertBefore","textArea","textAreaCover","overflowingContentWidgetsDomNode","_applyLayout","_pointerHandler","_register","_createPointerHandlerHelper","_flushAccumulatedAndRenderNow","setGlyphMarginDecorationLaneCount","_computeGlyphMarginLaneCount","onRenderStart","_renderNow","viewModel","glyphs","concat","getAllMarginDecorations","map","decoration","_a","_b","lane","options","glyphMargin","position","Left","range","getWidgets","widget","validateRange","preference","sort","a","b","compareRangesUsingStarts","leftDecRange","rightDecRange","compareRangesUsingEnds","Right","endLineNumber","startLineNumber","viewDomNode","linesContentDomNode","viewLinesDomNode","focusTextArea","focus","dispatchTextAreaEvent","event","dispatchEvent","getLastRenderData","lastViewCursorsRenderData","lastTextareaPosition","renderNow","render","shouldSuppressMouseDownOnViewZone","viewZoneId","shouldSuppressMouseDownOnWidget","widgetId","getPositionFromDOMInfo","spanNode","offset","visibleRangeForPosition","lineNumber","column","getLineWidth","layoutInfo","get","setWidth","width","setHeight","height","focused","isFocused","theme","type","handleEvents","events","_scheduleRender","onConfigurationChanged","e","onCursorStateChanged","selections","onDecorationsChanged","affectsGlyphMargin","onFocusChanged","onThemeChanged","update","dispose","remove","removeEventHandler","viewPart","runAtThisOrScheduleAtNextAnimationFrame","_onRenderScheduled","bind","safeInvokeNoArg","_actualRender","_getViewPartsToRender","result","resultLen","shouldRender","isInDOM","viewPartsToRender","partialViewportData","viewLayout","getLinesViewportData","setViewport","centeredLineNumber","viewportData","getWhitespaceViewportData","onBeforeRender","renderText","onDidRender","renderingContext","prepareRender","delegateVerticalScrollbarPointerDown","browserEvent","delegateScrollFromMouseWheelEvent","restoreState","scrollPosition","setScrollPosition","scrollTop","scrollLeft","visibleLinesStabilized","getOffsetForColumn","modelLineNumber","modelColumn","modelPosition","validatePosition","viewPosition","coordinatesConverter","convertModelPositionToViewPosition","visibleRange","left","getTargetAtClientPoint","clientX","clientY","mouseTarget","convertViewToModelMouseTarget","createOverviewRuler","cssClassName","change","callback","changeViewZones","now","everything","forceShouldRender","writeScreenReaderContent","reason","setAriaOptions","addContentWidget","widgetData","addWidget","layoutContentWidget","_c","_d","_e","_f","_g","_h","setWidgetPosition","secondaryPosition","positionAffinity","removeContentWidget","removeWidget","addOverlayWidget","layoutOverlayWidget","newPreference","removeOverlayWidget","addGlyphMarginWidget","layoutGlyphMarginWidget","removeGlyphMarginWidget","func"],"sources":["/home/chlohest/work/website/my_web/node_modules/monaco-editor/esm/vs/editor/browser/view.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nimport * as dom from '../../base/browser/dom.js';\nimport { Selection } from '../common/core/selection.js';\nimport { Range } from '../common/core/range.js';\nimport { createFastDomNode } from '../../base/browser/fastDomNode.js';\nimport { onUnexpectedError } from '../../base/common/errors.js';\nimport { PointerHandler } from './controller/pointerHandler.js';\nimport { TextAreaHandler } from './controller/textAreaHandler.js';\nimport { ViewController } from './view/viewController.js';\nimport { ViewUserInputEvents } from './view/viewUserInputEvents.js';\nimport { ContentViewOverlays, MarginViewOverlays } from './view/viewOverlays.js';\nimport { PartFingerprints } from './view/viewPart.js';\nimport { ViewContentWidgets } from './viewParts/contentWidgets/contentWidgets.js';\nimport { CurrentLineHighlightOverlay, CurrentLineMarginHighlightOverlay } from './viewParts/currentLineHighlight/currentLineHighlight.js';\nimport { DecorationsOverlay } from './viewParts/decorations/decorations.js';\nimport { EditorScrollbar } from './viewParts/editorScrollbar/editorScrollbar.js';\nimport { IndentGuidesOverlay } from './viewParts/indentGuides/indentGuides.js';\nimport { LineNumbersOverlay } from './viewParts/lineNumbers/lineNumbers.js';\nimport { ViewLines } from './viewParts/lines/viewLines.js';\nimport { LinesDecorationsOverlay } from './viewParts/linesDecorations/linesDecorations.js';\nimport { Margin } from './viewParts/margin/margin.js';\nimport { MarginViewLineDecorationsOverlay } from './viewParts/marginDecorations/marginDecorations.js';\nimport { Minimap } from './viewParts/minimap/minimap.js';\nimport { ViewOverlayWidgets } from './viewParts/overlayWidgets/overlayWidgets.js';\nimport { DecorationsOverviewRuler } from './viewParts/overviewRuler/decorationsOverviewRuler.js';\nimport { OverviewRuler } from './viewParts/overviewRuler/overviewRuler.js';\nimport { Rulers } from './viewParts/rulers/rulers.js';\nimport { ScrollDecorationViewPart } from './viewParts/scrollDecoration/scrollDecoration.js';\nimport { SelectionsOverlay } from './viewParts/selections/selections.js';\nimport { ViewCursors } from './viewParts/viewCursors/viewCursors.js';\nimport { ViewZones } from './viewParts/viewZones/viewZones.js';\nimport { Position } from '../common/core/position.js';\nimport { RenderingContext } from './view/renderingContext.js';\nimport { ViewContext } from '../common/viewModel/viewContext.js';\nimport { ViewportData } from '../common/viewLayout/viewLinesViewportData.js';\nimport { ViewEventHandler } from '../common/viewEventHandler.js';\nimport { getThemeTypeSelector } from '../../platform/theme/common/themeService.js';\nimport { PointerHandlerLastRenderData } from './controller/mouseTarget.js';\nimport { BlockDecorations } from './viewParts/blockDecorations/blockDecorations.js';\nimport { inputLatency } from '../../base/browser/performance.js';\nimport { WhitespaceOverlay } from './viewParts/whitespace/whitespace.js';\nimport { GlyphMarginWidgets } from './viewParts/glyphMargin/glyphMargin.js';\nimport { GlyphMarginLane } from '../common/model.js';\nimport { IInstantiationService } from '../../platform/instantiation/common/instantiation.js';\nlet View = class View extends ViewEventHandler {\n    constructor(commandDelegate, configuration, colorTheme, model, userInputEvents, overflowWidgetsDomNode, _instantiationService) {\n        super();\n        this._instantiationService = _instantiationService;\n        // Actual mutable state\n        this._shouldRecomputeGlyphMarginLanes = false;\n        this._selections = [new Selection(1, 1, 1, 1)];\n        this._renderAnimationFrame = null;\n        const viewController = new ViewController(configuration, model, userInputEvents, commandDelegate);\n        // The view context is passed on to most classes (basically to reduce param. counts in ctors)\n        this._context = new ViewContext(configuration, colorTheme, model);\n        // Ensure the view is the first event handler in order to update the layout\n        this._context.addEventHandler(this);\n        this._viewParts = [];\n        // Keyboard handler\n        this._textAreaHandler = this._instantiationService.createInstance(TextAreaHandler, this._context, viewController, this._createTextAreaHandlerHelper());\n        this._viewParts.push(this._textAreaHandler);\n        // These two dom nodes must be constructed up front, since references are needed in the layout provider (scrolling & co.)\n        this._linesContent = createFastDomNode(document.createElement('div'));\n        this._linesContent.setClassName('lines-content' + ' monaco-editor-background');\n        this._linesContent.setPosition('absolute');\n        this.domNode = createFastDomNode(document.createElement('div'));\n        this.domNode.setClassName(this._getEditorClassName());\n        // Set role 'code' for better screen reader support https://github.com/microsoft/vscode/issues/93438\n        this.domNode.setAttribute('role', 'code');\n        this._overflowGuardContainer = createFastDomNode(document.createElement('div'));\n        PartFingerprints.write(this._overflowGuardContainer, 3 /* PartFingerprint.OverflowGuard */);\n        this._overflowGuardContainer.setClassName('overflow-guard');\n        this._scrollbar = new EditorScrollbar(this._context, this._linesContent, this.domNode, this._overflowGuardContainer);\n        this._viewParts.push(this._scrollbar);\n        // View Lines\n        this._viewLines = new ViewLines(this._context, this._linesContent);\n        // View Zones\n        this._viewZones = new ViewZones(this._context);\n        this._viewParts.push(this._viewZones);\n        // Decorations overview ruler\n        const decorationsOverviewRuler = new DecorationsOverviewRuler(this._context);\n        this._viewParts.push(decorationsOverviewRuler);\n        const scrollDecoration = new ScrollDecorationViewPart(this._context);\n        this._viewParts.push(scrollDecoration);\n        const contentViewOverlays = new ContentViewOverlays(this._context);\n        this._viewParts.push(contentViewOverlays);\n        contentViewOverlays.addDynamicOverlay(new CurrentLineHighlightOverlay(this._context));\n        contentViewOverlays.addDynamicOverlay(new SelectionsOverlay(this._context));\n        contentViewOverlays.addDynamicOverlay(new IndentGuidesOverlay(this._context));\n        contentViewOverlays.addDynamicOverlay(new DecorationsOverlay(this._context));\n        contentViewOverlays.addDynamicOverlay(new WhitespaceOverlay(this._context));\n        const marginViewOverlays = new MarginViewOverlays(this._context);\n        this._viewParts.push(marginViewOverlays);\n        marginViewOverlays.addDynamicOverlay(new CurrentLineMarginHighlightOverlay(this._context));\n        marginViewOverlays.addDynamicOverlay(new MarginViewLineDecorationsOverlay(this._context));\n        marginViewOverlays.addDynamicOverlay(new LinesDecorationsOverlay(this._context));\n        marginViewOverlays.addDynamicOverlay(new LineNumbersOverlay(this._context));\n        // Glyph margin widgets\n        this._glyphMarginWidgets = new GlyphMarginWidgets(this._context);\n        this._viewParts.push(this._glyphMarginWidgets);\n        const margin = new Margin(this._context);\n        margin.getDomNode().appendChild(this._viewZones.marginDomNode);\n        margin.getDomNode().appendChild(marginViewOverlays.getDomNode());\n        margin.getDomNode().appendChild(this._glyphMarginWidgets.domNode);\n        this._viewParts.push(margin);\n        // Content widgets\n        this._contentWidgets = new ViewContentWidgets(this._context, this.domNode);\n        this._viewParts.push(this._contentWidgets);\n        this._viewCursors = new ViewCursors(this._context);\n        this._viewParts.push(this._viewCursors);\n        // Overlay widgets\n        this._overlayWidgets = new ViewOverlayWidgets(this._context);\n        this._viewParts.push(this._overlayWidgets);\n        const rulers = new Rulers(this._context);\n        this._viewParts.push(rulers);\n        const blockOutline = new BlockDecorations(this._context);\n        this._viewParts.push(blockOutline);\n        const minimap = new Minimap(this._context);\n        this._viewParts.push(minimap);\n        // -------------- Wire dom nodes up\n        if (decorationsOverviewRuler) {\n            const overviewRulerData = this._scrollbar.getOverviewRulerLayoutInfo();\n            overviewRulerData.parent.insertBefore(decorationsOverviewRuler.getDomNode(), overviewRulerData.insertBefore);\n        }\n        this._linesContent.appendChild(contentViewOverlays.getDomNode());\n        this._linesContent.appendChild(rulers.domNode);\n        this._linesContent.appendChild(this._viewZones.domNode);\n        this._linesContent.appendChild(this._viewLines.getDomNode());\n        this._linesContent.appendChild(this._contentWidgets.domNode);\n        this._linesContent.appendChild(this._viewCursors.getDomNode());\n        this._overflowGuardContainer.appendChild(margin.getDomNode());\n        this._overflowGuardContainer.appendChild(this._scrollbar.getDomNode());\n        this._overflowGuardContainer.appendChild(scrollDecoration.getDomNode());\n        this._overflowGuardContainer.appendChild(this._textAreaHandler.textArea);\n        this._overflowGuardContainer.appendChild(this._textAreaHandler.textAreaCover);\n        this._overflowGuardContainer.appendChild(this._overlayWidgets.getDomNode());\n        this._overflowGuardContainer.appendChild(minimap.getDomNode());\n        this._overflowGuardContainer.appendChild(blockOutline.domNode);\n        this.domNode.appendChild(this._overflowGuardContainer);\n        if (overflowWidgetsDomNode) {\n            overflowWidgetsDomNode.appendChild(this._contentWidgets.overflowingContentWidgetsDomNode.domNode);\n        }\n        else {\n            this.domNode.appendChild(this._contentWidgets.overflowingContentWidgetsDomNode);\n        }\n        this._applyLayout();\n        // Pointer handler\n        this._pointerHandler = this._register(new PointerHandler(this._context, viewController, this._createPointerHandlerHelper()));\n    }\n    _flushAccumulatedAndRenderNow() {\n        if (this._shouldRecomputeGlyphMarginLanes) {\n            this._shouldRecomputeGlyphMarginLanes = false;\n            this._context.configuration.setGlyphMarginDecorationLaneCount(this._computeGlyphMarginLaneCount());\n        }\n        inputLatency.onRenderStart();\n        this._renderNow();\n    }\n    _computeGlyphMarginLaneCount() {\n        const model = this._context.viewModel.model;\n        let glyphs = [];\n        // Add all margin decorations\n        glyphs = glyphs.concat(model.getAllMarginDecorations().map((decoration) => {\n            var _a, _b;\n            const lane = (_b = (_a = decoration.options.glyphMargin) === null || _a === void 0 ? void 0 : _a.position) !== null && _b !== void 0 ? _b : GlyphMarginLane.Left;\n            return { range: decoration.range, lane };\n        }));\n        // Add all glyph margin widgets\n        glyphs = glyphs.concat(this._glyphMarginWidgets.getWidgets().map((widget) => {\n            const range = model.validateRange(widget.preference.range);\n            return { range, lane: widget.preference.lane };\n        }));\n        // Sorted by their start position\n        glyphs.sort((a, b) => Range.compareRangesUsingStarts(a.range, b.range));\n        let leftDecRange = null;\n        let rightDecRange = null;\n        for (const decoration of glyphs) {\n            if (decoration.lane === GlyphMarginLane.Left && (!leftDecRange || Range.compareRangesUsingEnds(leftDecRange, decoration.range) < 0)) {\n                // assign only if the range of `decoration` ends after, which means it has a higher chance to overlap with the other lane\n                leftDecRange = decoration.range;\n            }\n            if (decoration.lane === GlyphMarginLane.Right && (!rightDecRange || Range.compareRangesUsingEnds(rightDecRange, decoration.range) < 0)) {\n                // assign only if the range of `decoration` ends after, which means it has a higher chance to overlap with the other lane\n                rightDecRange = decoration.range;\n            }\n            if (leftDecRange && rightDecRange) {\n                if (leftDecRange.endLineNumber < rightDecRange.startLineNumber) {\n                    // there's no chance for `leftDecRange` to ever intersect something going further\n                    leftDecRange = null;\n                    continue;\n                }\n                if (rightDecRange.endLineNumber < leftDecRange.startLineNumber) {\n                    // there's no chance for `rightDecRange` to ever intersect something going further\n                    rightDecRange = null;\n                    continue;\n                }\n                // leftDecRange and rightDecRange are intersecting or touching => we need two lanes\n                return 2;\n            }\n        }\n        return 1;\n    }\n    _createPointerHandlerHelper() {\n        return {\n            viewDomNode: this.domNode.domNode,\n            linesContentDomNode: this._linesContent.domNode,\n            viewLinesDomNode: this._viewLines.getDomNode().domNode,\n            focusTextArea: () => {\n                this.focus();\n            },\n            dispatchTextAreaEvent: (event) => {\n                this._textAreaHandler.textArea.domNode.dispatchEvent(event);\n            },\n            getLastRenderData: () => {\n                const lastViewCursorsRenderData = this._viewCursors.getLastRenderData() || [];\n                const lastTextareaPosition = this._textAreaHandler.getLastRenderData();\n                return new PointerHandlerLastRenderData(lastViewCursorsRenderData, lastTextareaPosition);\n            },\n            renderNow: () => {\n                this.render(true, false);\n            },\n            shouldSuppressMouseDownOnViewZone: (viewZoneId) => {\n                return this._viewZones.shouldSuppressMouseDownOnViewZone(viewZoneId);\n            },\n            shouldSuppressMouseDownOnWidget: (widgetId) => {\n                return this._contentWidgets.shouldSuppressMouseDownOnWidget(widgetId);\n            },\n            getPositionFromDOMInfo: (spanNode, offset) => {\n                this._flushAccumulatedAndRenderNow();\n                return this._viewLines.getPositionFromDOMInfo(spanNode, offset);\n            },\n            visibleRangeForPosition: (lineNumber, column) => {\n                this._flushAccumulatedAndRenderNow();\n                return this._viewLines.visibleRangeForPosition(new Position(lineNumber, column));\n            },\n            getLineWidth: (lineNumber) => {\n                this._flushAccumulatedAndRenderNow();\n                return this._viewLines.getLineWidth(lineNumber);\n            }\n        };\n    }\n    _createTextAreaHandlerHelper() {\n        return {\n            visibleRangeForPosition: (position) => {\n                this._flushAccumulatedAndRenderNow();\n                return this._viewLines.visibleRangeForPosition(position);\n            }\n        };\n    }\n    _applyLayout() {\n        const options = this._context.configuration.options;\n        const layoutInfo = options.get(143 /* EditorOption.layoutInfo */);\n        this.domNode.setWidth(layoutInfo.width);\n        this.domNode.setHeight(layoutInfo.height);\n        this._overflowGuardContainer.setWidth(layoutInfo.width);\n        this._overflowGuardContainer.setHeight(layoutInfo.height);\n        this._linesContent.setWidth(1000000);\n        this._linesContent.setHeight(1000000);\n    }\n    _getEditorClassName() {\n        const focused = this._textAreaHandler.isFocused() ? ' focused' : '';\n        return this._context.configuration.options.get(140 /* EditorOption.editorClassName */) + ' ' + getThemeTypeSelector(this._context.theme.type) + focused;\n    }\n    // --- begin event handlers\n    handleEvents(events) {\n        super.handleEvents(events);\n        this._scheduleRender();\n    }\n    onConfigurationChanged(e) {\n        this.domNode.setClassName(this._getEditorClassName());\n        this._applyLayout();\n        return false;\n    }\n    onCursorStateChanged(e) {\n        this._selections = e.selections;\n        return false;\n    }\n    onDecorationsChanged(e) {\n        if (e.affectsGlyphMargin) {\n            this._shouldRecomputeGlyphMarginLanes = true;\n        }\n        return false;\n    }\n    onFocusChanged(e) {\n        this.domNode.setClassName(this._getEditorClassName());\n        return false;\n    }\n    onThemeChanged(e) {\n        this._context.theme.update(e.theme);\n        this.domNode.setClassName(this._getEditorClassName());\n        return false;\n    }\n    // --- end event handlers\n    dispose() {\n        if (this._renderAnimationFrame !== null) {\n            this._renderAnimationFrame.dispose();\n            this._renderAnimationFrame = null;\n        }\n        this._contentWidgets.overflowingContentWidgetsDomNode.domNode.remove();\n        this._context.removeEventHandler(this);\n        this._viewLines.dispose();\n        // Destroy view parts\n        for (const viewPart of this._viewParts) {\n            viewPart.dispose();\n        }\n        super.dispose();\n    }\n    _scheduleRender() {\n        if (this._renderAnimationFrame === null) {\n            this._renderAnimationFrame = dom.runAtThisOrScheduleAtNextAnimationFrame(this._onRenderScheduled.bind(this), 100);\n        }\n    }\n    _onRenderScheduled() {\n        this._renderAnimationFrame = null;\n        this._flushAccumulatedAndRenderNow();\n    }\n    _renderNow() {\n        safeInvokeNoArg(() => this._actualRender());\n    }\n    _getViewPartsToRender() {\n        const result = [];\n        let resultLen = 0;\n        for (const viewPart of this._viewParts) {\n            if (viewPart.shouldRender()) {\n                result[resultLen++] = viewPart;\n            }\n        }\n        return result;\n    }\n    _actualRender() {\n        if (!dom.isInDOM(this.domNode.domNode)) {\n            return;\n        }\n        let viewPartsToRender = this._getViewPartsToRender();\n        if (!this._viewLines.shouldRender() && viewPartsToRender.length === 0) {\n            // Nothing to render\n            return;\n        }\n        const partialViewportData = this._context.viewLayout.getLinesViewportData();\n        this._context.viewModel.setViewport(partialViewportData.startLineNumber, partialViewportData.endLineNumber, partialViewportData.centeredLineNumber);\n        const viewportData = new ViewportData(this._selections, partialViewportData, this._context.viewLayout.getWhitespaceViewportData(), this._context.viewModel);\n        if (this._contentWidgets.shouldRender()) {\n            // Give the content widgets a chance to set their max width before a possible synchronous layout\n            this._contentWidgets.onBeforeRender(viewportData);\n        }\n        if (this._viewLines.shouldRender()) {\n            this._viewLines.renderText(viewportData);\n            this._viewLines.onDidRender();\n            // Rendering of viewLines might cause scroll events to occur, so collect view parts to render again\n            viewPartsToRender = this._getViewPartsToRender();\n        }\n        const renderingContext = new RenderingContext(this._context.viewLayout, viewportData, this._viewLines);\n        // Render the rest of the parts\n        for (const viewPart of viewPartsToRender) {\n            viewPart.prepareRender(renderingContext);\n        }\n        for (const viewPart of viewPartsToRender) {\n            viewPart.render(renderingContext);\n            viewPart.onDidRender();\n        }\n    }\n    // --- BEGIN CodeEditor helpers\n    delegateVerticalScrollbarPointerDown(browserEvent) {\n        this._scrollbar.delegateVerticalScrollbarPointerDown(browserEvent);\n    }\n    delegateScrollFromMouseWheelEvent(browserEvent) {\n        this._scrollbar.delegateScrollFromMouseWheelEvent(browserEvent);\n    }\n    restoreState(scrollPosition) {\n        this._context.viewModel.viewLayout.setScrollPosition({\n            scrollTop: scrollPosition.scrollTop,\n            scrollLeft: scrollPosition.scrollLeft\n        }, 1 /* ScrollType.Immediate */);\n        this._context.viewModel.visibleLinesStabilized();\n    }\n    getOffsetForColumn(modelLineNumber, modelColumn) {\n        const modelPosition = this._context.viewModel.model.validatePosition({\n            lineNumber: modelLineNumber,\n            column: modelColumn\n        });\n        const viewPosition = this._context.viewModel.coordinatesConverter.convertModelPositionToViewPosition(modelPosition);\n        this._flushAccumulatedAndRenderNow();\n        const visibleRange = this._viewLines.visibleRangeForPosition(new Position(viewPosition.lineNumber, viewPosition.column));\n        if (!visibleRange) {\n            return -1;\n        }\n        return visibleRange.left;\n    }\n    getTargetAtClientPoint(clientX, clientY) {\n        const mouseTarget = this._pointerHandler.getTargetAtClientPoint(clientX, clientY);\n        if (!mouseTarget) {\n            return null;\n        }\n        return ViewUserInputEvents.convertViewToModelMouseTarget(mouseTarget, this._context.viewModel.coordinatesConverter);\n    }\n    createOverviewRuler(cssClassName) {\n        return new OverviewRuler(this._context, cssClassName);\n    }\n    change(callback) {\n        this._viewZones.changeViewZones(callback);\n        this._scheduleRender();\n    }\n    render(now, everything) {\n        if (everything) {\n            // Force everything to render...\n            this._viewLines.forceShouldRender();\n            for (const viewPart of this._viewParts) {\n                viewPart.forceShouldRender();\n            }\n        }\n        if (now) {\n            this._flushAccumulatedAndRenderNow();\n        }\n        else {\n            this._scheduleRender();\n        }\n    }\n    writeScreenReaderContent(reason) {\n        this._textAreaHandler.writeScreenReaderContent(reason);\n    }\n    focus() {\n        this._textAreaHandler.focusTextArea();\n    }\n    isFocused() {\n        return this._textAreaHandler.isFocused();\n    }\n    setAriaOptions(options) {\n        this._textAreaHandler.setAriaOptions(options);\n    }\n    addContentWidget(widgetData) {\n        this._contentWidgets.addWidget(widgetData.widget);\n        this.layoutContentWidget(widgetData);\n        this._scheduleRender();\n    }\n    layoutContentWidget(widgetData) {\n        var _a, _b, _c, _d, _e, _f, _g, _h;\n        this._contentWidgets.setWidgetPosition(widgetData.widget, (_b = (_a = widgetData.position) === null || _a === void 0 ? void 0 : _a.position) !== null && _b !== void 0 ? _b : null, (_d = (_c = widgetData.position) === null || _c === void 0 ? void 0 : _c.secondaryPosition) !== null && _d !== void 0 ? _d : null, (_f = (_e = widgetData.position) === null || _e === void 0 ? void 0 : _e.preference) !== null && _f !== void 0 ? _f : null, (_h = (_g = widgetData.position) === null || _g === void 0 ? void 0 : _g.positionAffinity) !== null && _h !== void 0 ? _h : null);\n        this._scheduleRender();\n    }\n    removeContentWidget(widgetData) {\n        this._contentWidgets.removeWidget(widgetData.widget);\n        this._scheduleRender();\n    }\n    addOverlayWidget(widgetData) {\n        this._overlayWidgets.addWidget(widgetData.widget);\n        this.layoutOverlayWidget(widgetData);\n        this._scheduleRender();\n    }\n    layoutOverlayWidget(widgetData) {\n        const newPreference = widgetData.position ? widgetData.position.preference : null;\n        const shouldRender = this._overlayWidgets.setWidgetPosition(widgetData.widget, newPreference);\n        if (shouldRender) {\n            this._scheduleRender();\n        }\n    }\n    removeOverlayWidget(widgetData) {\n        this._overlayWidgets.removeWidget(widgetData.widget);\n        this._scheduleRender();\n    }\n    addGlyphMarginWidget(widgetData) {\n        this._glyphMarginWidgets.addWidget(widgetData.widget);\n        this._shouldRecomputeGlyphMarginLanes = true;\n        this._scheduleRender();\n    }\n    layoutGlyphMarginWidget(widgetData) {\n        const newPreference = widgetData.position;\n        const shouldRender = this._glyphMarginWidgets.setWidgetPosition(widgetData.widget, newPreference);\n        if (shouldRender) {\n            this._shouldRecomputeGlyphMarginLanes = true;\n            this._scheduleRender();\n        }\n    }\n    removeGlyphMarginWidget(widgetData) {\n        this._glyphMarginWidgets.removeWidget(widgetData.widget);\n        this._shouldRecomputeGlyphMarginLanes = true;\n        this._scheduleRender();\n    }\n};\nView = __decorate([\n    __param(6, IInstantiationService)\n], View);\nexport { View };\nfunction safeInvokeNoArg(func) {\n    try {\n        return func();\n    }\n    catch (e) {\n        onUnexpectedError(e);\n    }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}