{"ast":null,"code":"/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\nimport * as dom from '../../../base/browser/dom.js';\nimport { StandardKeyboardEvent } from '../../../base/browser/keyboardEvent.js';\nimport { Toggle } from '../../../base/browser/ui/toggle/toggle.js';\nimport { Action } from '../../../base/common/actions.js';\nimport { equals } from '../../../base/common/arrays.js';\nimport { TimeoutTimer } from '../../../base/common/async.js';\nimport { Codicon } from '../../../base/common/codicons.js';\nimport { Emitter } from '../../../base/common/event.js';\nimport { Disposable, DisposableStore } from '../../../base/common/lifecycle.js';\nimport { isIOS } from '../../../base/common/platform.js';\nimport Severity from '../../../base/common/severity.js';\nimport { ThemeIcon } from '../../../base/common/themables.js';\nimport './media/quickInput.css';\nimport { localize } from '../../../nls.js';\nimport { ItemActivation, NO_KEY_MODS, QuickInputHideReason } from '../common/quickInput.js';\nimport { QuickInputListFocus } from './quickInputList.js';\nimport { getIconClass, renderQuickInputDescription } from './quickInputUtils.js';\nexport const backButton = {\n  iconClass: ThemeIcon.asClassName(Codicon.quickInputBack),\n  tooltip: localize('quickInput.back', \"Back\"),\n  handle: -1 // TODO\n};\n\nclass QuickInput extends Disposable {\n  constructor(ui) {\n    super();\n    this.ui = ui;\n    this._widgetUpdated = false;\n    this.visible = false;\n    this._enabled = true;\n    this._busy = false;\n    this._ignoreFocusOut = false;\n    this._buttons = [];\n    this.buttonsUpdated = false;\n    this._toggles = [];\n    this.togglesUpdated = false;\n    this.noValidationMessage = QuickInput.noPromptMessage;\n    this._severity = Severity.Ignore;\n    this.onDidTriggerButtonEmitter = this._register(new Emitter());\n    this.onDidHideEmitter = this._register(new Emitter());\n    this.onDisposeEmitter = this._register(new Emitter());\n    this.visibleDisposables = this._register(new DisposableStore());\n    this.onDidHide = this.onDidHideEmitter.event;\n  }\n  get title() {\n    return this._title;\n  }\n  set title(title) {\n    this._title = title;\n    this.update();\n  }\n  get description() {\n    return this._description;\n  }\n  set description(description) {\n    this._description = description;\n    this.update();\n  }\n  get step() {\n    return this._steps;\n  }\n  set step(step) {\n    this._steps = step;\n    this.update();\n  }\n  get totalSteps() {\n    return this._totalSteps;\n  }\n  set totalSteps(totalSteps) {\n    this._totalSteps = totalSteps;\n    this.update();\n  }\n  get enabled() {\n    return this._enabled;\n  }\n  set enabled(enabled) {\n    this._enabled = enabled;\n    this.update();\n  }\n  get contextKey() {\n    return this._contextKey;\n  }\n  set contextKey(contextKey) {\n    this._contextKey = contextKey;\n    this.update();\n  }\n  get busy() {\n    return this._busy;\n  }\n  set busy(busy) {\n    this._busy = busy;\n    this.update();\n  }\n  get ignoreFocusOut() {\n    return this._ignoreFocusOut;\n  }\n  set ignoreFocusOut(ignoreFocusOut) {\n    const shouldUpdate = this._ignoreFocusOut !== ignoreFocusOut && !isIOS;\n    this._ignoreFocusOut = ignoreFocusOut && !isIOS;\n    if (shouldUpdate) {\n      this.update();\n    }\n  }\n  get buttons() {\n    return this._buttons;\n  }\n  set buttons(buttons) {\n    this._buttons = buttons;\n    this.buttonsUpdated = true;\n    this.update();\n  }\n  get toggles() {\n    return this._toggles;\n  }\n  set toggles(toggles) {\n    this._toggles = toggles !== null && toggles !== void 0 ? toggles : [];\n    this.togglesUpdated = true;\n    this.update();\n  }\n  get validationMessage() {\n    return this._validationMessage;\n  }\n  set validationMessage(validationMessage) {\n    this._validationMessage = validationMessage;\n    this.update();\n  }\n  get severity() {\n    return this._severity;\n  }\n  set severity(severity) {\n    this._severity = severity;\n    this.update();\n  }\n  show() {\n    if (this.visible) {\n      return;\n    }\n    this.visibleDisposables.add(this.ui.onDidTriggerButton(button => {\n      if (this.buttons.indexOf(button) !== -1) {\n        this.onDidTriggerButtonEmitter.fire(button);\n      }\n    }));\n    this.ui.show(this);\n    // update properties in the controller that get reset in the ui.show() call\n    this.visible = true;\n    // This ensures the message/prompt gets rendered\n    this._lastValidationMessage = undefined;\n    // This ensures the input box has the right severity applied\n    this._lastSeverity = undefined;\n    if (this.buttons.length) {\n      // if there are buttons, the ui.show() clears them out of the UI so we should\n      // rerender them.\n      this.buttonsUpdated = true;\n    }\n    if (this.toggles.length) {\n      // if there are toggles, the ui.show() clears them out of the UI so we should\n      // rerender them.\n      this.togglesUpdated = true;\n    }\n    this.update();\n  }\n  hide() {\n    if (!this.visible) {\n      return;\n    }\n    this.ui.hide();\n  }\n  didHide(reason = QuickInputHideReason.Other) {\n    this.visible = false;\n    this.visibleDisposables.clear();\n    this.onDidHideEmitter.fire({\n      reason\n    });\n  }\n  update() {\n    var _a, _b;\n    if (!this.visible) {\n      return;\n    }\n    const title = this.getTitle();\n    if (title && this.ui.title.textContent !== title) {\n      this.ui.title.textContent = title;\n    } else if (!title && this.ui.title.innerHTML !== '&nbsp;') {\n      this.ui.title.innerText = '\\u00a0';\n    }\n    const description = this.getDescription();\n    if (this.ui.description1.textContent !== description) {\n      this.ui.description1.textContent = description;\n    }\n    if (this.ui.description2.textContent !== description) {\n      this.ui.description2.textContent = description;\n    }\n    if (this._widgetUpdated) {\n      this._widgetUpdated = false;\n      if (this._widget) {\n        dom.reset(this.ui.widget, this._widget);\n      } else {\n        dom.reset(this.ui.widget);\n      }\n    }\n    if (this.busy && !this.busyDelay) {\n      this.busyDelay = new TimeoutTimer();\n      this.busyDelay.setIfNotSet(() => {\n        if (this.visible) {\n          this.ui.progressBar.infinite();\n        }\n      }, 800);\n    }\n    if (!this.busy && this.busyDelay) {\n      this.ui.progressBar.stop();\n      this.busyDelay.cancel();\n      this.busyDelay = undefined;\n    }\n    if (this.buttonsUpdated) {\n      this.buttonsUpdated = false;\n      this.ui.leftActionBar.clear();\n      const leftButtons = this.buttons.filter(button => button === backButton);\n      this.ui.leftActionBar.push(leftButtons.map((button, index) => {\n        const action = new Action(`id-${index}`, '', button.iconClass || getIconClass(button.iconPath), true, () => __awaiter(this, void 0, void 0, function* () {\n          this.onDidTriggerButtonEmitter.fire(button);\n        }));\n        action.tooltip = button.tooltip || '';\n        return action;\n      }), {\n        icon: true,\n        label: false\n      });\n      this.ui.rightActionBar.clear();\n      const rightButtons = this.buttons.filter(button => button !== backButton);\n      this.ui.rightActionBar.push(rightButtons.map((button, index) => {\n        const action = new Action(`id-${index}`, '', button.iconClass || getIconClass(button.iconPath), true, () => __awaiter(this, void 0, void 0, function* () {\n          this.onDidTriggerButtonEmitter.fire(button);\n        }));\n        action.tooltip = button.tooltip || '';\n        return action;\n      }), {\n        icon: true,\n        label: false\n      });\n    }\n    if (this.togglesUpdated) {\n      this.togglesUpdated = false;\n      // HACK: Filter out toggles here that are not concrete Toggle objects. This is to workaround\n      // a layering issue as quick input's interface is in common but Toggle is in browser and\n      // it requires a HTMLElement on its interface\n      const concreteToggles = (_b = (_a = this.toggles) === null || _a === void 0 ? void 0 : _a.filter(opts => opts instanceof Toggle)) !== null && _b !== void 0 ? _b : [];\n      this.ui.inputBox.toggles = concreteToggles;\n    }\n    this.ui.ignoreFocusOut = this.ignoreFocusOut;\n    this.ui.setEnabled(this.enabled);\n    this.ui.setContextKey(this.contextKey);\n    const validationMessage = this.validationMessage || this.noValidationMessage;\n    if (this._lastValidationMessage !== validationMessage) {\n      this._lastValidationMessage = validationMessage;\n      dom.reset(this.ui.message);\n      renderQuickInputDescription(validationMessage, this.ui.message, {\n        callback: content => {\n          this.ui.linkOpenerDelegate(content);\n        },\n        disposables: this.visibleDisposables\n      });\n    }\n    if (this._lastSeverity !== this.severity) {\n      this._lastSeverity = this.severity;\n      this.showMessageDecoration(this.severity);\n    }\n  }\n  getTitle() {\n    if (this.title && this.step) {\n      return `${this.title} (${this.getSteps()})`;\n    }\n    if (this.title) {\n      return this.title;\n    }\n    if (this.step) {\n      return this.getSteps();\n    }\n    return '';\n  }\n  getDescription() {\n    return this.description || '';\n  }\n  getSteps() {\n    if (this.step && this.totalSteps) {\n      return localize('quickInput.steps', \"{0}/{1}\", this.step, this.totalSteps);\n    }\n    if (this.step) {\n      return String(this.step);\n    }\n    return '';\n  }\n  showMessageDecoration(severity) {\n    this.ui.inputBox.showDecoration(severity);\n    if (severity !== Severity.Ignore) {\n      const styles = this.ui.inputBox.stylesForType(severity);\n      this.ui.message.style.color = styles.foreground ? `${styles.foreground}` : '';\n      this.ui.message.style.backgroundColor = styles.background ? `${styles.background}` : '';\n      this.ui.message.style.border = styles.border ? `1px solid ${styles.border}` : '';\n      this.ui.message.style.marginBottom = '-2px';\n    } else {\n      this.ui.message.style.color = '';\n      this.ui.message.style.backgroundColor = '';\n      this.ui.message.style.border = '';\n      this.ui.message.style.marginBottom = '';\n    }\n  }\n  dispose() {\n    this.hide();\n    this.onDisposeEmitter.fire();\n    super.dispose();\n  }\n}\nQuickInput.noPromptMessage = localize('inputModeEntry', \"Press 'Enter' to confirm your input or 'Escape' to cancel\");\nexport class QuickPick extends QuickInput {\n  constructor() {\n    super(...arguments);\n    this._value = '';\n    this.onDidChangeValueEmitter = this._register(new Emitter());\n    this.onWillAcceptEmitter = this._register(new Emitter());\n    this.onDidAcceptEmitter = this._register(new Emitter());\n    this.onDidCustomEmitter = this._register(new Emitter());\n    this._items = [];\n    this.itemsUpdated = false;\n    this._canSelectMany = false;\n    this._canAcceptInBackground = false;\n    this._matchOnDescription = false;\n    this._matchOnDetail = false;\n    this._matchOnLabel = true;\n    this._matchOnLabelMode = 'fuzzy';\n    this._sortByLabel = true;\n    this._autoFocusOnList = true;\n    this._keepScrollPosition = false;\n    this._itemActivation = ItemActivation.FIRST;\n    this._activeItems = [];\n    this.activeItemsUpdated = false;\n    this.activeItemsToConfirm = [];\n    this.onDidChangeActiveEmitter = this._register(new Emitter());\n    this._selectedItems = [];\n    this.selectedItemsUpdated = false;\n    this.selectedItemsToConfirm = [];\n    this.onDidChangeSelectionEmitter = this._register(new Emitter());\n    this.onDidTriggerItemButtonEmitter = this._register(new Emitter());\n    this.onDidTriggerSeparatorButtonEmitter = this._register(new Emitter());\n    this.valueSelectionUpdated = true;\n    this._ok = 'default';\n    this._customButton = false;\n    this.filterValue = value => value;\n    this.onDidChangeValue = this.onDidChangeValueEmitter.event;\n    this.onWillAccept = this.onWillAcceptEmitter.event;\n    this.onDidAccept = this.onDidAcceptEmitter.event;\n    this.onDidChangeActive = this.onDidChangeActiveEmitter.event;\n    this.onDidChangeSelection = this.onDidChangeSelectionEmitter.event;\n    this.onDidTriggerItemButton = this.onDidTriggerItemButtonEmitter.event;\n    this.onDidTriggerSeparatorButton = this.onDidTriggerSeparatorButtonEmitter.event;\n  }\n  get quickNavigate() {\n    return this._quickNavigate;\n  }\n  set quickNavigate(quickNavigate) {\n    this._quickNavigate = quickNavigate;\n    this.update();\n  }\n  get value() {\n    return this._value;\n  }\n  set value(value) {\n    this.doSetValue(value);\n  }\n  doSetValue(value, skipUpdate) {\n    if (this._value !== value) {\n      this._value = value;\n      if (!skipUpdate) {\n        this.update();\n      }\n      if (this.visible) {\n        const didFilter = this.ui.list.filter(this.filterValue(this._value));\n        if (didFilter) {\n          this.trySelectFirst();\n        }\n      }\n      this.onDidChangeValueEmitter.fire(this._value);\n    }\n  }\n  set ariaLabel(ariaLabel) {\n    this._ariaLabel = ariaLabel;\n    this.update();\n  }\n  get ariaLabel() {\n    return this._ariaLabel;\n  }\n  get placeholder() {\n    return this._placeholder;\n  }\n  set placeholder(placeholder) {\n    this._placeholder = placeholder;\n    this.update();\n  }\n  get items() {\n    return this._items;\n  }\n  get scrollTop() {\n    return this.ui.list.scrollTop;\n  }\n  set scrollTop(scrollTop) {\n    this.ui.list.scrollTop = scrollTop;\n  }\n  set items(items) {\n    this._items = items;\n    this.itemsUpdated = true;\n    this.update();\n  }\n  get canSelectMany() {\n    return this._canSelectMany;\n  }\n  set canSelectMany(canSelectMany) {\n    this._canSelectMany = canSelectMany;\n    this.update();\n  }\n  get canAcceptInBackground() {\n    return this._canAcceptInBackground;\n  }\n  set canAcceptInBackground(canAcceptInBackground) {\n    this._canAcceptInBackground = canAcceptInBackground;\n  }\n  get matchOnDescription() {\n    return this._matchOnDescription;\n  }\n  set matchOnDescription(matchOnDescription) {\n    this._matchOnDescription = matchOnDescription;\n    this.update();\n  }\n  get matchOnDetail() {\n    return this._matchOnDetail;\n  }\n  set matchOnDetail(matchOnDetail) {\n    this._matchOnDetail = matchOnDetail;\n    this.update();\n  }\n  get matchOnLabel() {\n    return this._matchOnLabel;\n  }\n  set matchOnLabel(matchOnLabel) {\n    this._matchOnLabel = matchOnLabel;\n    this.update();\n  }\n  get matchOnLabelMode() {\n    return this._matchOnLabelMode;\n  }\n  set matchOnLabelMode(matchOnLabelMode) {\n    this._matchOnLabelMode = matchOnLabelMode;\n    this.update();\n  }\n  get sortByLabel() {\n    return this._sortByLabel;\n  }\n  set sortByLabel(sortByLabel) {\n    this._sortByLabel = sortByLabel;\n    this.update();\n  }\n  get autoFocusOnList() {\n    return this._autoFocusOnList;\n  }\n  set autoFocusOnList(autoFocusOnList) {\n    this._autoFocusOnList = autoFocusOnList;\n    this.update();\n  }\n  get keepScrollPosition() {\n    return this._keepScrollPosition;\n  }\n  set keepScrollPosition(keepScrollPosition) {\n    this._keepScrollPosition = keepScrollPosition;\n  }\n  get itemActivation() {\n    return this._itemActivation;\n  }\n  set itemActivation(itemActivation) {\n    this._itemActivation = itemActivation;\n  }\n  get activeItems() {\n    return this._activeItems;\n  }\n  set activeItems(activeItems) {\n    this._activeItems = activeItems;\n    this.activeItemsUpdated = true;\n    this.update();\n  }\n  get selectedItems() {\n    return this._selectedItems;\n  }\n  set selectedItems(selectedItems) {\n    this._selectedItems = selectedItems;\n    this.selectedItemsUpdated = true;\n    this.update();\n  }\n  get keyMods() {\n    if (this._quickNavigate) {\n      // Disable keyMods when quick navigate is enabled\n      // because in this model the interaction is purely\n      // keyboard driven and Ctrl/Alt are typically\n      // pressed and hold during this interaction.\n      return NO_KEY_MODS;\n    }\n    return this.ui.keyMods;\n  }\n  set valueSelection(valueSelection) {\n    this._valueSelection = valueSelection;\n    this.valueSelectionUpdated = true;\n    this.update();\n  }\n  get customButton() {\n    return this._customButton;\n  }\n  set customButton(showCustomButton) {\n    this._customButton = showCustomButton;\n    this.update();\n  }\n  get customLabel() {\n    return this._customButtonLabel;\n  }\n  set customLabel(label) {\n    this._customButtonLabel = label;\n    this.update();\n  }\n  get customHover() {\n    return this._customButtonHover;\n  }\n  set customHover(hover) {\n    this._customButtonHover = hover;\n    this.update();\n  }\n  get ok() {\n    return this._ok;\n  }\n  set ok(showOkButton) {\n    this._ok = showOkButton;\n    this.update();\n  }\n  get hideInput() {\n    return !!this._hideInput;\n  }\n  set hideInput(hideInput) {\n    this._hideInput = hideInput;\n    this.update();\n  }\n  trySelectFirst() {\n    if (this.autoFocusOnList) {\n      if (!this.canSelectMany) {\n        this.ui.list.focus(QuickInputListFocus.First);\n      }\n    }\n  }\n  show() {\n    if (!this.visible) {\n      this.visibleDisposables.add(this.ui.inputBox.onDidChange(value => {\n        this.doSetValue(value, true /* skip update since this originates from the UI */);\n      }));\n\n      this.visibleDisposables.add(this.ui.inputBox.onMouseDown(event => {\n        if (!this.autoFocusOnList) {\n          this.ui.list.clearFocus();\n        }\n      }));\n      this.visibleDisposables.add((this._hideInput ? this.ui.list : this.ui.inputBox).onKeyDown(event => {\n        switch (event.keyCode) {\n          case 18 /* KeyCode.DownArrow */:\n            this.ui.list.focus(QuickInputListFocus.Next);\n            if (this.canSelectMany) {\n              this.ui.list.domFocus();\n            }\n            dom.EventHelper.stop(event, true);\n            break;\n          case 16 /* KeyCode.UpArrow */:\n            if (this.ui.list.getFocusedElements().length) {\n              this.ui.list.focus(QuickInputListFocus.Previous);\n            } else {\n              this.ui.list.focus(QuickInputListFocus.Last);\n            }\n            if (this.canSelectMany) {\n              this.ui.list.domFocus();\n            }\n            dom.EventHelper.stop(event, true);\n            break;\n          case 12 /* KeyCode.PageDown */:\n            this.ui.list.focus(QuickInputListFocus.NextPage);\n            if (this.canSelectMany) {\n              this.ui.list.domFocus();\n            }\n            dom.EventHelper.stop(event, true);\n            break;\n          case 11 /* KeyCode.PageUp */:\n            this.ui.list.focus(QuickInputListFocus.PreviousPage);\n            if (this.canSelectMany) {\n              this.ui.list.domFocus();\n            }\n            dom.EventHelper.stop(event, true);\n            break;\n          case 17 /* KeyCode.RightArrow */:\n            if (!this._canAcceptInBackground) {\n              return; // needs to be enabled\n            }\n\n            if (!this.ui.inputBox.isSelectionAtEnd()) {\n              return; // ensure input box selection at end\n            }\n\n            if (this.activeItems[0]) {\n              this._selectedItems = [this.activeItems[0]];\n              this.onDidChangeSelectionEmitter.fire(this.selectedItems);\n              this.handleAccept(true);\n            }\n            break;\n          case 14 /* KeyCode.Home */:\n            if ((event.ctrlKey || event.metaKey) && !event.shiftKey && !event.altKey) {\n              this.ui.list.focus(QuickInputListFocus.First);\n              dom.EventHelper.stop(event, true);\n            }\n            break;\n          case 13 /* KeyCode.End */:\n            if ((event.ctrlKey || event.metaKey) && !event.shiftKey && !event.altKey) {\n              this.ui.list.focus(QuickInputListFocus.Last);\n              dom.EventHelper.stop(event, true);\n            }\n            break;\n        }\n      }));\n      this.visibleDisposables.add(this.ui.onDidAccept(() => {\n        if (this.canSelectMany) {\n          // if there are no checked elements, it means that an onDidChangeSelection never fired to overwrite\n          // `_selectedItems`. In that case, we should emit one with an empty array to ensure that\n          // `.selectedItems` is up to date.\n          if (!this.ui.list.getCheckedElements().length) {\n            this._selectedItems = [];\n            this.onDidChangeSelectionEmitter.fire(this.selectedItems);\n          }\n        } else if (this.activeItems[0]) {\n          // For single-select, we set `selectedItems` to the item that was accepted.\n          this._selectedItems = [this.activeItems[0]];\n          this.onDidChangeSelectionEmitter.fire(this.selectedItems);\n        }\n        this.handleAccept(false);\n      }));\n      this.visibleDisposables.add(this.ui.onDidCustom(() => {\n        this.onDidCustomEmitter.fire();\n      }));\n      this.visibleDisposables.add(this.ui.list.onDidChangeFocus(focusedItems => {\n        if (this.activeItemsUpdated) {\n          return; // Expect another event.\n        }\n\n        if (this.activeItemsToConfirm !== this._activeItems && equals(focusedItems, this._activeItems, (a, b) => a === b)) {\n          return;\n        }\n        this._activeItems = focusedItems;\n        this.onDidChangeActiveEmitter.fire(focusedItems);\n      }));\n      this.visibleDisposables.add(this.ui.list.onDidChangeSelection(({\n        items: selectedItems,\n        event\n      }) => {\n        if (this.canSelectMany) {\n          if (selectedItems.length) {\n            this.ui.list.setSelectedElements([]);\n          }\n          return;\n        }\n        if (this.selectedItemsToConfirm !== this._selectedItems && equals(selectedItems, this._selectedItems, (a, b) => a === b)) {\n          return;\n        }\n        this._selectedItems = selectedItems;\n        this.onDidChangeSelectionEmitter.fire(selectedItems);\n        if (selectedItems.length) {\n          this.handleAccept(event instanceof MouseEvent && event.button === 1 /* mouse middle click */);\n        }\n      }));\n\n      this.visibleDisposables.add(this.ui.list.onChangedCheckedElements(checkedItems => {\n        if (!this.canSelectMany) {\n          return;\n        }\n        if (this.selectedItemsToConfirm !== this._selectedItems && equals(checkedItems, this._selectedItems, (a, b) => a === b)) {\n          return;\n        }\n        this._selectedItems = checkedItems;\n        this.onDidChangeSelectionEmitter.fire(checkedItems);\n      }));\n      this.visibleDisposables.add(this.ui.list.onButtonTriggered(event => this.onDidTriggerItemButtonEmitter.fire(event)));\n      this.visibleDisposables.add(this.ui.list.onSeparatorButtonTriggered(event => this.onDidTriggerSeparatorButtonEmitter.fire(event)));\n      this.visibleDisposables.add(this.registerQuickNavigation());\n      this.valueSelectionUpdated = true;\n    }\n    super.show(); // TODO: Why have show() bubble up while update() trickles down?\n  }\n\n  handleAccept(inBackground) {\n    // Figure out veto via `onWillAccept` event\n    let veto = false;\n    this.onWillAcceptEmitter.fire({\n      veto: () => veto = true\n    });\n    // Continue with `onDidAccept` if no veto\n    if (!veto) {\n      this.onDidAcceptEmitter.fire({\n        inBackground\n      });\n    }\n  }\n  registerQuickNavigation() {\n    return dom.addDisposableListener(this.ui.container, dom.EventType.KEY_UP, e => {\n      if (this.canSelectMany || !this._quickNavigate) {\n        return;\n      }\n      const keyboardEvent = new StandardKeyboardEvent(e);\n      const keyCode = keyboardEvent.keyCode;\n      // Select element when keys are pressed that signal it\n      const quickNavKeys = this._quickNavigate.keybindings;\n      const wasTriggerKeyPressed = quickNavKeys.some(k => {\n        const chords = k.getChords();\n        if (chords.length > 1) {\n          return false;\n        }\n        if (chords[0].shiftKey && keyCode === 4 /* KeyCode.Shift */) {\n          if (keyboardEvent.ctrlKey || keyboardEvent.altKey || keyboardEvent.metaKey) {\n            return false; // this is an optimistic check for the shift key being used to navigate back in quick input\n          }\n\n          return true;\n        }\n        if (chords[0].altKey && keyCode === 6 /* KeyCode.Alt */) {\n          return true;\n        }\n        if (chords[0].ctrlKey && keyCode === 5 /* KeyCode.Ctrl */) {\n          return true;\n        }\n        if (chords[0].metaKey && keyCode === 57 /* KeyCode.Meta */) {\n          return true;\n        }\n        return false;\n      });\n      if (wasTriggerKeyPressed) {\n        if (this.activeItems[0]) {\n          this._selectedItems = [this.activeItems[0]];\n          this.onDidChangeSelectionEmitter.fire(this.selectedItems);\n          this.handleAccept(false);\n        }\n        // Unset quick navigate after press. It is only valid once\n        // and should not result in any behaviour change afterwards\n        // if the picker remains open because there was no active item\n        this._quickNavigate = undefined;\n      }\n    });\n  }\n  update() {\n    if (!this.visible) {\n      return;\n    }\n    // store the scrollTop before it is reset\n    const scrollTopBefore = this.keepScrollPosition ? this.scrollTop : 0;\n    const hasDescription = !!this.description;\n    const visibilities = {\n      title: !!this.title || !!this.step || !!this.buttons.length,\n      description: hasDescription,\n      checkAll: this.canSelectMany && !this._hideCheckAll,\n      checkBox: this.canSelectMany,\n      inputBox: !this._hideInput,\n      progressBar: !this._hideInput || hasDescription,\n      visibleCount: true,\n      count: this.canSelectMany && !this._hideCountBadge,\n      ok: this.ok === 'default' ? this.canSelectMany : this.ok,\n      list: true,\n      message: !!this.validationMessage,\n      customButton: this.customButton\n    };\n    this.ui.setVisibilities(visibilities);\n    super.update();\n    if (this.ui.inputBox.value !== this.value) {\n      this.ui.inputBox.value = this.value;\n    }\n    if (this.valueSelectionUpdated) {\n      this.valueSelectionUpdated = false;\n      this.ui.inputBox.select(this._valueSelection && {\n        start: this._valueSelection[0],\n        end: this._valueSelection[1]\n      });\n    }\n    if (this.ui.inputBox.placeholder !== (this.placeholder || '')) {\n      this.ui.inputBox.placeholder = this.placeholder || '';\n    }\n    let ariaLabel = this.ariaLabel;\n    // Only set aria label to the input box placeholder if we actually have an input box.\n    if (!ariaLabel && visibilities.inputBox) {\n      ariaLabel = this.placeholder || QuickPick.DEFAULT_ARIA_LABEL;\n      // If we have a title, include it in the aria label.\n      if (this.title) {\n        ariaLabel += ` - ${this.title}`;\n      }\n    }\n    if (this.ui.list.ariaLabel !== ariaLabel) {\n      this.ui.list.ariaLabel = ariaLabel !== null && ariaLabel !== void 0 ? ariaLabel : null;\n    }\n    this.ui.list.matchOnDescription = this.matchOnDescription;\n    this.ui.list.matchOnDetail = this.matchOnDetail;\n    this.ui.list.matchOnLabel = this.matchOnLabel;\n    this.ui.list.matchOnLabelMode = this.matchOnLabelMode;\n    this.ui.list.sortByLabel = this.sortByLabel;\n    if (this.itemsUpdated) {\n      this.itemsUpdated = false;\n      this.ui.list.setElements(this.items);\n      this.ui.list.filter(this.filterValue(this.ui.inputBox.value));\n      this.ui.checkAll.checked = this.ui.list.getAllVisibleChecked();\n      this.ui.visibleCount.setCount(this.ui.list.getVisibleCount());\n      this.ui.count.setCount(this.ui.list.getCheckedCount());\n      switch (this._itemActivation) {\n        case ItemActivation.NONE:\n          this._itemActivation = ItemActivation.FIRST; // only valid once, then unset\n          break;\n        case ItemActivation.SECOND:\n          this.ui.list.focus(QuickInputListFocus.Second);\n          this._itemActivation = ItemActivation.FIRST; // only valid once, then unset\n          break;\n        case ItemActivation.LAST:\n          this.ui.list.focus(QuickInputListFocus.Last);\n          this._itemActivation = ItemActivation.FIRST; // only valid once, then unset\n          break;\n        default:\n          this.trySelectFirst();\n          break;\n      }\n    }\n    if (this.ui.container.classList.contains('show-checkboxes') !== !!this.canSelectMany) {\n      if (this.canSelectMany) {\n        this.ui.list.clearFocus();\n      } else {\n        this.trySelectFirst();\n      }\n    }\n    if (this.activeItemsUpdated) {\n      this.activeItemsUpdated = false;\n      this.activeItemsToConfirm = this._activeItems;\n      this.ui.list.setFocusedElements(this.activeItems);\n      if (this.activeItemsToConfirm === this._activeItems) {\n        this.activeItemsToConfirm = null;\n      }\n    }\n    if (this.selectedItemsUpdated) {\n      this.selectedItemsUpdated = false;\n      this.selectedItemsToConfirm = this._selectedItems;\n      if (this.canSelectMany) {\n        this.ui.list.setCheckedElements(this.selectedItems);\n      } else {\n        this.ui.list.setSelectedElements(this.selectedItems);\n      }\n      if (this.selectedItemsToConfirm === this._selectedItems) {\n        this.selectedItemsToConfirm = null;\n      }\n    }\n    this.ui.customButton.label = this.customLabel || '';\n    this.ui.customButton.element.title = this.customHover || '';\n    if (!visibilities.inputBox) {\n      // we need to move focus into the tree to detect keybindings\n      // properly when the input box is not visible (quick nav)\n      this.ui.list.domFocus();\n      // Focus the first element in the list if multiselect is enabled\n      if (this.canSelectMany) {\n        this.ui.list.focus(QuickInputListFocus.First);\n      }\n    }\n    // Set the scroll position to what it was before updating the items\n    if (this.keepScrollPosition) {\n      this.scrollTop = scrollTopBefore;\n    }\n  }\n}\nQuickPick.DEFAULT_ARIA_LABEL = localize('quickInputBox.ariaLabel', \"Type to narrow down results.\");\nexport class InputBox extends QuickInput {\n  constructor() {\n    super(...arguments);\n    this._value = '';\n    this.valueSelectionUpdated = true;\n    this._password = false;\n    this.onDidValueChangeEmitter = this._register(new Emitter());\n    this.onDidAcceptEmitter = this._register(new Emitter());\n    this.onDidChangeValue = this.onDidValueChangeEmitter.event;\n    this.onDidAccept = this.onDidAcceptEmitter.event;\n  }\n  get value() {\n    return this._value;\n  }\n  set value(value) {\n    this._value = value || '';\n    this.update();\n  }\n  get placeholder() {\n    return this._placeholder;\n  }\n  set placeholder(placeholder) {\n    this._placeholder = placeholder;\n    this.update();\n  }\n  get password() {\n    return this._password;\n  }\n  set password(password) {\n    this._password = password;\n    this.update();\n  }\n  show() {\n    if (!this.visible) {\n      this.visibleDisposables.add(this.ui.inputBox.onDidChange(value => {\n        if (value === this.value) {\n          return;\n        }\n        this._value = value;\n        this.onDidValueChangeEmitter.fire(value);\n      }));\n      this.visibleDisposables.add(this.ui.onDidAccept(() => this.onDidAcceptEmitter.fire()));\n      this.valueSelectionUpdated = true;\n    }\n    super.show();\n  }\n  update() {\n    if (!this.visible) {\n      return;\n    }\n    this.ui.container.classList.remove('hidden-input');\n    const visibilities = {\n      title: !!this.title || !!this.step || !!this.buttons.length,\n      description: !!this.description || !!this.step,\n      inputBox: true,\n      message: true,\n      progressBar: true\n    };\n    this.ui.setVisibilities(visibilities);\n    super.update();\n    if (this.ui.inputBox.value !== this.value) {\n      this.ui.inputBox.value = this.value;\n    }\n    if (this.valueSelectionUpdated) {\n      this.valueSelectionUpdated = false;\n      this.ui.inputBox.select(this._valueSelection && {\n        start: this._valueSelection[0],\n        end: this._valueSelection[1]\n      });\n    }\n    if (this.ui.inputBox.placeholder !== (this.placeholder || '')) {\n      this.ui.inputBox.placeholder = this.placeholder || '';\n    }\n    if (this.ui.inputBox.password !== this.password) {\n      this.ui.inputBox.password = this.password;\n    }\n  }\n}","map":{"version":3,"names":["__awaiter","thisArg","_arguments","P","generator","adopt","value","resolve","Promise","reject","fulfilled","step","next","e","rejected","result","done","then","apply","dom","StandardKeyboardEvent","Toggle","Action","equals","TimeoutTimer","Codicon","Emitter","Disposable","DisposableStore","isIOS","Severity","ThemeIcon","localize","ItemActivation","NO_KEY_MODS","QuickInputHideReason","QuickInputListFocus","getIconClass","renderQuickInputDescription","backButton","iconClass","asClassName","quickInputBack","tooltip","handle","QuickInput","constructor","ui","_widgetUpdated","visible","_enabled","_busy","_ignoreFocusOut","_buttons","buttonsUpdated","_toggles","togglesUpdated","noValidationMessage","noPromptMessage","_severity","Ignore","onDidTriggerButtonEmitter","_register","onDidHideEmitter","onDisposeEmitter","visibleDisposables","onDidHide","event","title","_title","update","description","_description","_steps","totalSteps","_totalSteps","enabled","contextKey","_contextKey","busy","ignoreFocusOut","shouldUpdate","buttons","toggles","validationMessage","_validationMessage","severity","show","add","onDidTriggerButton","button","indexOf","fire","_lastValidationMessage","undefined","_lastSeverity","length","hide","didHide","reason","Other","clear","_a","_b","getTitle","textContent","innerHTML","innerText","getDescription","description1","description2","_widget","reset","widget","busyDelay","setIfNotSet","progressBar","infinite","stop","cancel","leftActionBar","leftButtons","filter","push","map","index","action","iconPath","icon","label","rightActionBar","rightButtons","concreteToggles","opts","inputBox","setEnabled","setContextKey","message","callback","content","linkOpenerDelegate","disposables","showMessageDecoration","getSteps","String","showDecoration","styles","stylesForType","style","color","foreground","backgroundColor","background","border","marginBottom","dispose","QuickPick","arguments","_value","onDidChangeValueEmitter","onWillAcceptEmitter","onDidAcceptEmitter","onDidCustomEmitter","_items","itemsUpdated","_canSelectMany","_canAcceptInBackground","_matchOnDescription","_matchOnDetail","_matchOnLabel","_matchOnLabelMode","_sortByLabel","_autoFocusOnList","_keepScrollPosition","_itemActivation","FIRST","_activeItems","activeItemsUpdated","activeItemsToConfirm","onDidChangeActiveEmitter","_selectedItems","selectedItemsUpdated","selectedItemsToConfirm","onDidChangeSelectionEmitter","onDidTriggerItemButtonEmitter","onDidTriggerSeparatorButtonEmitter","valueSelectionUpdated","_ok","_customButton","filterValue","onDidChangeValue","onWillAccept","onDidAccept","onDidChangeActive","onDidChangeSelection","onDidTriggerItemButton","onDidTriggerSeparatorButton","quickNavigate","_quickNavigate","doSetValue","skipUpdate","didFilter","list","trySelectFirst","ariaLabel","_ariaLabel","placeholder","_placeholder","items","scrollTop","canSelectMany","canAcceptInBackground","matchOnDescription","matchOnDetail","matchOnLabel","matchOnLabelMode","sortByLabel","autoFocusOnList","keepScrollPosition","itemActivation","activeItems","selectedItems","keyMods","valueSelection","_valueSelection","customButton","showCustomButton","customLabel","_customButtonLabel","customHover","_customButtonHover","hover","ok","showOkButton","hideInput","_hideInput","focus","First","onDidChange","onMouseDown","clearFocus","onKeyDown","keyCode","Next","domFocus","EventHelper","getFocusedElements","Previous","Last","NextPage","PreviousPage","isSelectionAtEnd","handleAccept","ctrlKey","metaKey","shiftKey","altKey","getCheckedElements","onDidCustom","onDidChangeFocus","focusedItems","a","b","setSelectedElements","MouseEvent","onChangedCheckedElements","checkedItems","onButtonTriggered","onSeparatorButtonTriggered","registerQuickNavigation","inBackground","veto","addDisposableListener","container","EventType","KEY_UP","keyboardEvent","quickNavKeys","keybindings","wasTriggerKeyPressed","some","k","chords","getChords","scrollTopBefore","hasDescription","visibilities","checkAll","_hideCheckAll","checkBox","visibleCount","count","_hideCountBadge","setVisibilities","select","start","end","DEFAULT_ARIA_LABEL","setElements","checked","getAllVisibleChecked","setCount","getVisibleCount","getCheckedCount","NONE","SECOND","Second","LAST","classList","contains","setFocusedElements","setCheckedElements","element","InputBox","_password","onDidValueChangeEmitter","password","remove"],"sources":["/home/chlohest/work/website/my_web/node_modules/monaco-editor/esm/vs/platform/quickinput/browser/quickInput.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport * as dom from '../../../base/browser/dom.js';\nimport { StandardKeyboardEvent } from '../../../base/browser/keyboardEvent.js';\nimport { Toggle } from '../../../base/browser/ui/toggle/toggle.js';\nimport { Action } from '../../../base/common/actions.js';\nimport { equals } from '../../../base/common/arrays.js';\nimport { TimeoutTimer } from '../../../base/common/async.js';\nimport { Codicon } from '../../../base/common/codicons.js';\nimport { Emitter } from '../../../base/common/event.js';\nimport { Disposable, DisposableStore } from '../../../base/common/lifecycle.js';\nimport { isIOS } from '../../../base/common/platform.js';\nimport Severity from '../../../base/common/severity.js';\nimport { ThemeIcon } from '../../../base/common/themables.js';\nimport './media/quickInput.css';\nimport { localize } from '../../../nls.js';\nimport { ItemActivation, NO_KEY_MODS, QuickInputHideReason } from '../common/quickInput.js';\nimport { QuickInputListFocus } from './quickInputList.js';\nimport { getIconClass, renderQuickInputDescription } from './quickInputUtils.js';\nexport const backButton = {\n    iconClass: ThemeIcon.asClassName(Codicon.quickInputBack),\n    tooltip: localize('quickInput.back', \"Back\"),\n    handle: -1 // TODO\n};\nclass QuickInput extends Disposable {\n    constructor(ui) {\n        super();\n        this.ui = ui;\n        this._widgetUpdated = false;\n        this.visible = false;\n        this._enabled = true;\n        this._busy = false;\n        this._ignoreFocusOut = false;\n        this._buttons = [];\n        this.buttonsUpdated = false;\n        this._toggles = [];\n        this.togglesUpdated = false;\n        this.noValidationMessage = QuickInput.noPromptMessage;\n        this._severity = Severity.Ignore;\n        this.onDidTriggerButtonEmitter = this._register(new Emitter());\n        this.onDidHideEmitter = this._register(new Emitter());\n        this.onDisposeEmitter = this._register(new Emitter());\n        this.visibleDisposables = this._register(new DisposableStore());\n        this.onDidHide = this.onDidHideEmitter.event;\n    }\n    get title() {\n        return this._title;\n    }\n    set title(title) {\n        this._title = title;\n        this.update();\n    }\n    get description() {\n        return this._description;\n    }\n    set description(description) {\n        this._description = description;\n        this.update();\n    }\n    get step() {\n        return this._steps;\n    }\n    set step(step) {\n        this._steps = step;\n        this.update();\n    }\n    get totalSteps() {\n        return this._totalSteps;\n    }\n    set totalSteps(totalSteps) {\n        this._totalSteps = totalSteps;\n        this.update();\n    }\n    get enabled() {\n        return this._enabled;\n    }\n    set enabled(enabled) {\n        this._enabled = enabled;\n        this.update();\n    }\n    get contextKey() {\n        return this._contextKey;\n    }\n    set contextKey(contextKey) {\n        this._contextKey = contextKey;\n        this.update();\n    }\n    get busy() {\n        return this._busy;\n    }\n    set busy(busy) {\n        this._busy = busy;\n        this.update();\n    }\n    get ignoreFocusOut() {\n        return this._ignoreFocusOut;\n    }\n    set ignoreFocusOut(ignoreFocusOut) {\n        const shouldUpdate = this._ignoreFocusOut !== ignoreFocusOut && !isIOS;\n        this._ignoreFocusOut = ignoreFocusOut && !isIOS;\n        if (shouldUpdate) {\n            this.update();\n        }\n    }\n    get buttons() {\n        return this._buttons;\n    }\n    set buttons(buttons) {\n        this._buttons = buttons;\n        this.buttonsUpdated = true;\n        this.update();\n    }\n    get toggles() {\n        return this._toggles;\n    }\n    set toggles(toggles) {\n        this._toggles = toggles !== null && toggles !== void 0 ? toggles : [];\n        this.togglesUpdated = true;\n        this.update();\n    }\n    get validationMessage() {\n        return this._validationMessage;\n    }\n    set validationMessage(validationMessage) {\n        this._validationMessage = validationMessage;\n        this.update();\n    }\n    get severity() {\n        return this._severity;\n    }\n    set severity(severity) {\n        this._severity = severity;\n        this.update();\n    }\n    show() {\n        if (this.visible) {\n            return;\n        }\n        this.visibleDisposables.add(this.ui.onDidTriggerButton(button => {\n            if (this.buttons.indexOf(button) !== -1) {\n                this.onDidTriggerButtonEmitter.fire(button);\n            }\n        }));\n        this.ui.show(this);\n        // update properties in the controller that get reset in the ui.show() call\n        this.visible = true;\n        // This ensures the message/prompt gets rendered\n        this._lastValidationMessage = undefined;\n        // This ensures the input box has the right severity applied\n        this._lastSeverity = undefined;\n        if (this.buttons.length) {\n            // if there are buttons, the ui.show() clears them out of the UI so we should\n            // rerender them.\n            this.buttonsUpdated = true;\n        }\n        if (this.toggles.length) {\n            // if there are toggles, the ui.show() clears them out of the UI so we should\n            // rerender them.\n            this.togglesUpdated = true;\n        }\n        this.update();\n    }\n    hide() {\n        if (!this.visible) {\n            return;\n        }\n        this.ui.hide();\n    }\n    didHide(reason = QuickInputHideReason.Other) {\n        this.visible = false;\n        this.visibleDisposables.clear();\n        this.onDidHideEmitter.fire({ reason });\n    }\n    update() {\n        var _a, _b;\n        if (!this.visible) {\n            return;\n        }\n        const title = this.getTitle();\n        if (title && this.ui.title.textContent !== title) {\n            this.ui.title.textContent = title;\n        }\n        else if (!title && this.ui.title.innerHTML !== '&nbsp;') {\n            this.ui.title.innerText = '\\u00a0';\n        }\n        const description = this.getDescription();\n        if (this.ui.description1.textContent !== description) {\n            this.ui.description1.textContent = description;\n        }\n        if (this.ui.description2.textContent !== description) {\n            this.ui.description2.textContent = description;\n        }\n        if (this._widgetUpdated) {\n            this._widgetUpdated = false;\n            if (this._widget) {\n                dom.reset(this.ui.widget, this._widget);\n            }\n            else {\n                dom.reset(this.ui.widget);\n            }\n        }\n        if (this.busy && !this.busyDelay) {\n            this.busyDelay = new TimeoutTimer();\n            this.busyDelay.setIfNotSet(() => {\n                if (this.visible) {\n                    this.ui.progressBar.infinite();\n                }\n            }, 800);\n        }\n        if (!this.busy && this.busyDelay) {\n            this.ui.progressBar.stop();\n            this.busyDelay.cancel();\n            this.busyDelay = undefined;\n        }\n        if (this.buttonsUpdated) {\n            this.buttonsUpdated = false;\n            this.ui.leftActionBar.clear();\n            const leftButtons = this.buttons.filter(button => button === backButton);\n            this.ui.leftActionBar.push(leftButtons.map((button, index) => {\n                const action = new Action(`id-${index}`, '', button.iconClass || getIconClass(button.iconPath), true, () => __awaiter(this, void 0, void 0, function* () {\n                    this.onDidTriggerButtonEmitter.fire(button);\n                }));\n                action.tooltip = button.tooltip || '';\n                return action;\n            }), { icon: true, label: false });\n            this.ui.rightActionBar.clear();\n            const rightButtons = this.buttons.filter(button => button !== backButton);\n            this.ui.rightActionBar.push(rightButtons.map((button, index) => {\n                const action = new Action(`id-${index}`, '', button.iconClass || getIconClass(button.iconPath), true, () => __awaiter(this, void 0, void 0, function* () {\n                    this.onDidTriggerButtonEmitter.fire(button);\n                }));\n                action.tooltip = button.tooltip || '';\n                return action;\n            }), { icon: true, label: false });\n        }\n        if (this.togglesUpdated) {\n            this.togglesUpdated = false;\n            // HACK: Filter out toggles here that are not concrete Toggle objects. This is to workaround\n            // a layering issue as quick input's interface is in common but Toggle is in browser and\n            // it requires a HTMLElement on its interface\n            const concreteToggles = (_b = (_a = this.toggles) === null || _a === void 0 ? void 0 : _a.filter(opts => opts instanceof Toggle)) !== null && _b !== void 0 ? _b : [];\n            this.ui.inputBox.toggles = concreteToggles;\n        }\n        this.ui.ignoreFocusOut = this.ignoreFocusOut;\n        this.ui.setEnabled(this.enabled);\n        this.ui.setContextKey(this.contextKey);\n        const validationMessage = this.validationMessage || this.noValidationMessage;\n        if (this._lastValidationMessage !== validationMessage) {\n            this._lastValidationMessage = validationMessage;\n            dom.reset(this.ui.message);\n            renderQuickInputDescription(validationMessage, this.ui.message, {\n                callback: (content) => {\n                    this.ui.linkOpenerDelegate(content);\n                },\n                disposables: this.visibleDisposables,\n            });\n        }\n        if (this._lastSeverity !== this.severity) {\n            this._lastSeverity = this.severity;\n            this.showMessageDecoration(this.severity);\n        }\n    }\n    getTitle() {\n        if (this.title && this.step) {\n            return `${this.title} (${this.getSteps()})`;\n        }\n        if (this.title) {\n            return this.title;\n        }\n        if (this.step) {\n            return this.getSteps();\n        }\n        return '';\n    }\n    getDescription() {\n        return this.description || '';\n    }\n    getSteps() {\n        if (this.step && this.totalSteps) {\n            return localize('quickInput.steps', \"{0}/{1}\", this.step, this.totalSteps);\n        }\n        if (this.step) {\n            return String(this.step);\n        }\n        return '';\n    }\n    showMessageDecoration(severity) {\n        this.ui.inputBox.showDecoration(severity);\n        if (severity !== Severity.Ignore) {\n            const styles = this.ui.inputBox.stylesForType(severity);\n            this.ui.message.style.color = styles.foreground ? `${styles.foreground}` : '';\n            this.ui.message.style.backgroundColor = styles.background ? `${styles.background}` : '';\n            this.ui.message.style.border = styles.border ? `1px solid ${styles.border}` : '';\n            this.ui.message.style.marginBottom = '-2px';\n        }\n        else {\n            this.ui.message.style.color = '';\n            this.ui.message.style.backgroundColor = '';\n            this.ui.message.style.border = '';\n            this.ui.message.style.marginBottom = '';\n        }\n    }\n    dispose() {\n        this.hide();\n        this.onDisposeEmitter.fire();\n        super.dispose();\n    }\n}\nQuickInput.noPromptMessage = localize('inputModeEntry', \"Press 'Enter' to confirm your input or 'Escape' to cancel\");\nexport class QuickPick extends QuickInput {\n    constructor() {\n        super(...arguments);\n        this._value = '';\n        this.onDidChangeValueEmitter = this._register(new Emitter());\n        this.onWillAcceptEmitter = this._register(new Emitter());\n        this.onDidAcceptEmitter = this._register(new Emitter());\n        this.onDidCustomEmitter = this._register(new Emitter());\n        this._items = [];\n        this.itemsUpdated = false;\n        this._canSelectMany = false;\n        this._canAcceptInBackground = false;\n        this._matchOnDescription = false;\n        this._matchOnDetail = false;\n        this._matchOnLabel = true;\n        this._matchOnLabelMode = 'fuzzy';\n        this._sortByLabel = true;\n        this._autoFocusOnList = true;\n        this._keepScrollPosition = false;\n        this._itemActivation = ItemActivation.FIRST;\n        this._activeItems = [];\n        this.activeItemsUpdated = false;\n        this.activeItemsToConfirm = [];\n        this.onDidChangeActiveEmitter = this._register(new Emitter());\n        this._selectedItems = [];\n        this.selectedItemsUpdated = false;\n        this.selectedItemsToConfirm = [];\n        this.onDidChangeSelectionEmitter = this._register(new Emitter());\n        this.onDidTriggerItemButtonEmitter = this._register(new Emitter());\n        this.onDidTriggerSeparatorButtonEmitter = this._register(new Emitter());\n        this.valueSelectionUpdated = true;\n        this._ok = 'default';\n        this._customButton = false;\n        this.filterValue = (value) => value;\n        this.onDidChangeValue = this.onDidChangeValueEmitter.event;\n        this.onWillAccept = this.onWillAcceptEmitter.event;\n        this.onDidAccept = this.onDidAcceptEmitter.event;\n        this.onDidChangeActive = this.onDidChangeActiveEmitter.event;\n        this.onDidChangeSelection = this.onDidChangeSelectionEmitter.event;\n        this.onDidTriggerItemButton = this.onDidTriggerItemButtonEmitter.event;\n        this.onDidTriggerSeparatorButton = this.onDidTriggerSeparatorButtonEmitter.event;\n    }\n    get quickNavigate() {\n        return this._quickNavigate;\n    }\n    set quickNavigate(quickNavigate) {\n        this._quickNavigate = quickNavigate;\n        this.update();\n    }\n    get value() {\n        return this._value;\n    }\n    set value(value) {\n        this.doSetValue(value);\n    }\n    doSetValue(value, skipUpdate) {\n        if (this._value !== value) {\n            this._value = value;\n            if (!skipUpdate) {\n                this.update();\n            }\n            if (this.visible) {\n                const didFilter = this.ui.list.filter(this.filterValue(this._value));\n                if (didFilter) {\n                    this.trySelectFirst();\n                }\n            }\n            this.onDidChangeValueEmitter.fire(this._value);\n        }\n    }\n    set ariaLabel(ariaLabel) {\n        this._ariaLabel = ariaLabel;\n        this.update();\n    }\n    get ariaLabel() {\n        return this._ariaLabel;\n    }\n    get placeholder() {\n        return this._placeholder;\n    }\n    set placeholder(placeholder) {\n        this._placeholder = placeholder;\n        this.update();\n    }\n    get items() {\n        return this._items;\n    }\n    get scrollTop() {\n        return this.ui.list.scrollTop;\n    }\n    set scrollTop(scrollTop) {\n        this.ui.list.scrollTop = scrollTop;\n    }\n    set items(items) {\n        this._items = items;\n        this.itemsUpdated = true;\n        this.update();\n    }\n    get canSelectMany() {\n        return this._canSelectMany;\n    }\n    set canSelectMany(canSelectMany) {\n        this._canSelectMany = canSelectMany;\n        this.update();\n    }\n    get canAcceptInBackground() {\n        return this._canAcceptInBackground;\n    }\n    set canAcceptInBackground(canAcceptInBackground) {\n        this._canAcceptInBackground = canAcceptInBackground;\n    }\n    get matchOnDescription() {\n        return this._matchOnDescription;\n    }\n    set matchOnDescription(matchOnDescription) {\n        this._matchOnDescription = matchOnDescription;\n        this.update();\n    }\n    get matchOnDetail() {\n        return this._matchOnDetail;\n    }\n    set matchOnDetail(matchOnDetail) {\n        this._matchOnDetail = matchOnDetail;\n        this.update();\n    }\n    get matchOnLabel() {\n        return this._matchOnLabel;\n    }\n    set matchOnLabel(matchOnLabel) {\n        this._matchOnLabel = matchOnLabel;\n        this.update();\n    }\n    get matchOnLabelMode() {\n        return this._matchOnLabelMode;\n    }\n    set matchOnLabelMode(matchOnLabelMode) {\n        this._matchOnLabelMode = matchOnLabelMode;\n        this.update();\n    }\n    get sortByLabel() {\n        return this._sortByLabel;\n    }\n    set sortByLabel(sortByLabel) {\n        this._sortByLabel = sortByLabel;\n        this.update();\n    }\n    get autoFocusOnList() {\n        return this._autoFocusOnList;\n    }\n    set autoFocusOnList(autoFocusOnList) {\n        this._autoFocusOnList = autoFocusOnList;\n        this.update();\n    }\n    get keepScrollPosition() {\n        return this._keepScrollPosition;\n    }\n    set keepScrollPosition(keepScrollPosition) {\n        this._keepScrollPosition = keepScrollPosition;\n    }\n    get itemActivation() {\n        return this._itemActivation;\n    }\n    set itemActivation(itemActivation) {\n        this._itemActivation = itemActivation;\n    }\n    get activeItems() {\n        return this._activeItems;\n    }\n    set activeItems(activeItems) {\n        this._activeItems = activeItems;\n        this.activeItemsUpdated = true;\n        this.update();\n    }\n    get selectedItems() {\n        return this._selectedItems;\n    }\n    set selectedItems(selectedItems) {\n        this._selectedItems = selectedItems;\n        this.selectedItemsUpdated = true;\n        this.update();\n    }\n    get keyMods() {\n        if (this._quickNavigate) {\n            // Disable keyMods when quick navigate is enabled\n            // because in this model the interaction is purely\n            // keyboard driven and Ctrl/Alt are typically\n            // pressed and hold during this interaction.\n            return NO_KEY_MODS;\n        }\n        return this.ui.keyMods;\n    }\n    set valueSelection(valueSelection) {\n        this._valueSelection = valueSelection;\n        this.valueSelectionUpdated = true;\n        this.update();\n    }\n    get customButton() {\n        return this._customButton;\n    }\n    set customButton(showCustomButton) {\n        this._customButton = showCustomButton;\n        this.update();\n    }\n    get customLabel() {\n        return this._customButtonLabel;\n    }\n    set customLabel(label) {\n        this._customButtonLabel = label;\n        this.update();\n    }\n    get customHover() {\n        return this._customButtonHover;\n    }\n    set customHover(hover) {\n        this._customButtonHover = hover;\n        this.update();\n    }\n    get ok() {\n        return this._ok;\n    }\n    set ok(showOkButton) {\n        this._ok = showOkButton;\n        this.update();\n    }\n    get hideInput() {\n        return !!this._hideInput;\n    }\n    set hideInput(hideInput) {\n        this._hideInput = hideInput;\n        this.update();\n    }\n    trySelectFirst() {\n        if (this.autoFocusOnList) {\n            if (!this.canSelectMany) {\n                this.ui.list.focus(QuickInputListFocus.First);\n            }\n        }\n    }\n    show() {\n        if (!this.visible) {\n            this.visibleDisposables.add(this.ui.inputBox.onDidChange(value => {\n                this.doSetValue(value, true /* skip update since this originates from the UI */);\n            }));\n            this.visibleDisposables.add(this.ui.inputBox.onMouseDown(event => {\n                if (!this.autoFocusOnList) {\n                    this.ui.list.clearFocus();\n                }\n            }));\n            this.visibleDisposables.add((this._hideInput ? this.ui.list : this.ui.inputBox).onKeyDown((event) => {\n                switch (event.keyCode) {\n                    case 18 /* KeyCode.DownArrow */:\n                        this.ui.list.focus(QuickInputListFocus.Next);\n                        if (this.canSelectMany) {\n                            this.ui.list.domFocus();\n                        }\n                        dom.EventHelper.stop(event, true);\n                        break;\n                    case 16 /* KeyCode.UpArrow */:\n                        if (this.ui.list.getFocusedElements().length) {\n                            this.ui.list.focus(QuickInputListFocus.Previous);\n                        }\n                        else {\n                            this.ui.list.focus(QuickInputListFocus.Last);\n                        }\n                        if (this.canSelectMany) {\n                            this.ui.list.domFocus();\n                        }\n                        dom.EventHelper.stop(event, true);\n                        break;\n                    case 12 /* KeyCode.PageDown */:\n                        this.ui.list.focus(QuickInputListFocus.NextPage);\n                        if (this.canSelectMany) {\n                            this.ui.list.domFocus();\n                        }\n                        dom.EventHelper.stop(event, true);\n                        break;\n                    case 11 /* KeyCode.PageUp */:\n                        this.ui.list.focus(QuickInputListFocus.PreviousPage);\n                        if (this.canSelectMany) {\n                            this.ui.list.domFocus();\n                        }\n                        dom.EventHelper.stop(event, true);\n                        break;\n                    case 17 /* KeyCode.RightArrow */:\n                        if (!this._canAcceptInBackground) {\n                            return; // needs to be enabled\n                        }\n                        if (!this.ui.inputBox.isSelectionAtEnd()) {\n                            return; // ensure input box selection at end\n                        }\n                        if (this.activeItems[0]) {\n                            this._selectedItems = [this.activeItems[0]];\n                            this.onDidChangeSelectionEmitter.fire(this.selectedItems);\n                            this.handleAccept(true);\n                        }\n                        break;\n                    case 14 /* KeyCode.Home */:\n                        if ((event.ctrlKey || event.metaKey) && !event.shiftKey && !event.altKey) {\n                            this.ui.list.focus(QuickInputListFocus.First);\n                            dom.EventHelper.stop(event, true);\n                        }\n                        break;\n                    case 13 /* KeyCode.End */:\n                        if ((event.ctrlKey || event.metaKey) && !event.shiftKey && !event.altKey) {\n                            this.ui.list.focus(QuickInputListFocus.Last);\n                            dom.EventHelper.stop(event, true);\n                        }\n                        break;\n                }\n            }));\n            this.visibleDisposables.add(this.ui.onDidAccept(() => {\n                if (this.canSelectMany) {\n                    // if there are no checked elements, it means that an onDidChangeSelection never fired to overwrite\n                    // `_selectedItems`. In that case, we should emit one with an empty array to ensure that\n                    // `.selectedItems` is up to date.\n                    if (!this.ui.list.getCheckedElements().length) {\n                        this._selectedItems = [];\n                        this.onDidChangeSelectionEmitter.fire(this.selectedItems);\n                    }\n                }\n                else if (this.activeItems[0]) {\n                    // For single-select, we set `selectedItems` to the item that was accepted.\n                    this._selectedItems = [this.activeItems[0]];\n                    this.onDidChangeSelectionEmitter.fire(this.selectedItems);\n                }\n                this.handleAccept(false);\n            }));\n            this.visibleDisposables.add(this.ui.onDidCustom(() => {\n                this.onDidCustomEmitter.fire();\n            }));\n            this.visibleDisposables.add(this.ui.list.onDidChangeFocus(focusedItems => {\n                if (this.activeItemsUpdated) {\n                    return; // Expect another event.\n                }\n                if (this.activeItemsToConfirm !== this._activeItems && equals(focusedItems, this._activeItems, (a, b) => a === b)) {\n                    return;\n                }\n                this._activeItems = focusedItems;\n                this.onDidChangeActiveEmitter.fire(focusedItems);\n            }));\n            this.visibleDisposables.add(this.ui.list.onDidChangeSelection(({ items: selectedItems, event }) => {\n                if (this.canSelectMany) {\n                    if (selectedItems.length) {\n                        this.ui.list.setSelectedElements([]);\n                    }\n                    return;\n                }\n                if (this.selectedItemsToConfirm !== this._selectedItems && equals(selectedItems, this._selectedItems, (a, b) => a === b)) {\n                    return;\n                }\n                this._selectedItems = selectedItems;\n                this.onDidChangeSelectionEmitter.fire(selectedItems);\n                if (selectedItems.length) {\n                    this.handleAccept(event instanceof MouseEvent && event.button === 1 /* mouse middle click */);\n                }\n            }));\n            this.visibleDisposables.add(this.ui.list.onChangedCheckedElements(checkedItems => {\n                if (!this.canSelectMany) {\n                    return;\n                }\n                if (this.selectedItemsToConfirm !== this._selectedItems && equals(checkedItems, this._selectedItems, (a, b) => a === b)) {\n                    return;\n                }\n                this._selectedItems = checkedItems;\n                this.onDidChangeSelectionEmitter.fire(checkedItems);\n            }));\n            this.visibleDisposables.add(this.ui.list.onButtonTriggered(event => this.onDidTriggerItemButtonEmitter.fire(event)));\n            this.visibleDisposables.add(this.ui.list.onSeparatorButtonTriggered(event => this.onDidTriggerSeparatorButtonEmitter.fire(event)));\n            this.visibleDisposables.add(this.registerQuickNavigation());\n            this.valueSelectionUpdated = true;\n        }\n        super.show(); // TODO: Why have show() bubble up while update() trickles down?\n    }\n    handleAccept(inBackground) {\n        // Figure out veto via `onWillAccept` event\n        let veto = false;\n        this.onWillAcceptEmitter.fire({ veto: () => veto = true });\n        // Continue with `onDidAccept` if no veto\n        if (!veto) {\n            this.onDidAcceptEmitter.fire({ inBackground });\n        }\n    }\n    registerQuickNavigation() {\n        return dom.addDisposableListener(this.ui.container, dom.EventType.KEY_UP, e => {\n            if (this.canSelectMany || !this._quickNavigate) {\n                return;\n            }\n            const keyboardEvent = new StandardKeyboardEvent(e);\n            const keyCode = keyboardEvent.keyCode;\n            // Select element when keys are pressed that signal it\n            const quickNavKeys = this._quickNavigate.keybindings;\n            const wasTriggerKeyPressed = quickNavKeys.some(k => {\n                const chords = k.getChords();\n                if (chords.length > 1) {\n                    return false;\n                }\n                if (chords[0].shiftKey && keyCode === 4 /* KeyCode.Shift */) {\n                    if (keyboardEvent.ctrlKey || keyboardEvent.altKey || keyboardEvent.metaKey) {\n                        return false; // this is an optimistic check for the shift key being used to navigate back in quick input\n                    }\n                    return true;\n                }\n                if (chords[0].altKey && keyCode === 6 /* KeyCode.Alt */) {\n                    return true;\n                }\n                if (chords[0].ctrlKey && keyCode === 5 /* KeyCode.Ctrl */) {\n                    return true;\n                }\n                if (chords[0].metaKey && keyCode === 57 /* KeyCode.Meta */) {\n                    return true;\n                }\n                return false;\n            });\n            if (wasTriggerKeyPressed) {\n                if (this.activeItems[0]) {\n                    this._selectedItems = [this.activeItems[0]];\n                    this.onDidChangeSelectionEmitter.fire(this.selectedItems);\n                    this.handleAccept(false);\n                }\n                // Unset quick navigate after press. It is only valid once\n                // and should not result in any behaviour change afterwards\n                // if the picker remains open because there was no active item\n                this._quickNavigate = undefined;\n            }\n        });\n    }\n    update() {\n        if (!this.visible) {\n            return;\n        }\n        // store the scrollTop before it is reset\n        const scrollTopBefore = this.keepScrollPosition ? this.scrollTop : 0;\n        const hasDescription = !!this.description;\n        const visibilities = {\n            title: !!this.title || !!this.step || !!this.buttons.length,\n            description: hasDescription,\n            checkAll: this.canSelectMany && !this._hideCheckAll,\n            checkBox: this.canSelectMany,\n            inputBox: !this._hideInput,\n            progressBar: !this._hideInput || hasDescription,\n            visibleCount: true,\n            count: this.canSelectMany && !this._hideCountBadge,\n            ok: this.ok === 'default' ? this.canSelectMany : this.ok,\n            list: true,\n            message: !!this.validationMessage,\n            customButton: this.customButton\n        };\n        this.ui.setVisibilities(visibilities);\n        super.update();\n        if (this.ui.inputBox.value !== this.value) {\n            this.ui.inputBox.value = this.value;\n        }\n        if (this.valueSelectionUpdated) {\n            this.valueSelectionUpdated = false;\n            this.ui.inputBox.select(this._valueSelection && { start: this._valueSelection[0], end: this._valueSelection[1] });\n        }\n        if (this.ui.inputBox.placeholder !== (this.placeholder || '')) {\n            this.ui.inputBox.placeholder = (this.placeholder || '');\n        }\n        let ariaLabel = this.ariaLabel;\n        // Only set aria label to the input box placeholder if we actually have an input box.\n        if (!ariaLabel && visibilities.inputBox) {\n            ariaLabel = this.placeholder || QuickPick.DEFAULT_ARIA_LABEL;\n            // If we have a title, include it in the aria label.\n            if (this.title) {\n                ariaLabel += ` - ${this.title}`;\n            }\n        }\n        if (this.ui.list.ariaLabel !== ariaLabel) {\n            this.ui.list.ariaLabel = ariaLabel !== null && ariaLabel !== void 0 ? ariaLabel : null;\n        }\n        this.ui.list.matchOnDescription = this.matchOnDescription;\n        this.ui.list.matchOnDetail = this.matchOnDetail;\n        this.ui.list.matchOnLabel = this.matchOnLabel;\n        this.ui.list.matchOnLabelMode = this.matchOnLabelMode;\n        this.ui.list.sortByLabel = this.sortByLabel;\n        if (this.itemsUpdated) {\n            this.itemsUpdated = false;\n            this.ui.list.setElements(this.items);\n            this.ui.list.filter(this.filterValue(this.ui.inputBox.value));\n            this.ui.checkAll.checked = this.ui.list.getAllVisibleChecked();\n            this.ui.visibleCount.setCount(this.ui.list.getVisibleCount());\n            this.ui.count.setCount(this.ui.list.getCheckedCount());\n            switch (this._itemActivation) {\n                case ItemActivation.NONE:\n                    this._itemActivation = ItemActivation.FIRST; // only valid once, then unset\n                    break;\n                case ItemActivation.SECOND:\n                    this.ui.list.focus(QuickInputListFocus.Second);\n                    this._itemActivation = ItemActivation.FIRST; // only valid once, then unset\n                    break;\n                case ItemActivation.LAST:\n                    this.ui.list.focus(QuickInputListFocus.Last);\n                    this._itemActivation = ItemActivation.FIRST; // only valid once, then unset\n                    break;\n                default:\n                    this.trySelectFirst();\n                    break;\n            }\n        }\n        if (this.ui.container.classList.contains('show-checkboxes') !== !!this.canSelectMany) {\n            if (this.canSelectMany) {\n                this.ui.list.clearFocus();\n            }\n            else {\n                this.trySelectFirst();\n            }\n        }\n        if (this.activeItemsUpdated) {\n            this.activeItemsUpdated = false;\n            this.activeItemsToConfirm = this._activeItems;\n            this.ui.list.setFocusedElements(this.activeItems);\n            if (this.activeItemsToConfirm === this._activeItems) {\n                this.activeItemsToConfirm = null;\n            }\n        }\n        if (this.selectedItemsUpdated) {\n            this.selectedItemsUpdated = false;\n            this.selectedItemsToConfirm = this._selectedItems;\n            if (this.canSelectMany) {\n                this.ui.list.setCheckedElements(this.selectedItems);\n            }\n            else {\n                this.ui.list.setSelectedElements(this.selectedItems);\n            }\n            if (this.selectedItemsToConfirm === this._selectedItems) {\n                this.selectedItemsToConfirm = null;\n            }\n        }\n        this.ui.customButton.label = this.customLabel || '';\n        this.ui.customButton.element.title = this.customHover || '';\n        if (!visibilities.inputBox) {\n            // we need to move focus into the tree to detect keybindings\n            // properly when the input box is not visible (quick nav)\n            this.ui.list.domFocus();\n            // Focus the first element in the list if multiselect is enabled\n            if (this.canSelectMany) {\n                this.ui.list.focus(QuickInputListFocus.First);\n            }\n        }\n        // Set the scroll position to what it was before updating the items\n        if (this.keepScrollPosition) {\n            this.scrollTop = scrollTopBefore;\n        }\n    }\n}\nQuickPick.DEFAULT_ARIA_LABEL = localize('quickInputBox.ariaLabel', \"Type to narrow down results.\");\nexport class InputBox extends QuickInput {\n    constructor() {\n        super(...arguments);\n        this._value = '';\n        this.valueSelectionUpdated = true;\n        this._password = false;\n        this.onDidValueChangeEmitter = this._register(new Emitter());\n        this.onDidAcceptEmitter = this._register(new Emitter());\n        this.onDidChangeValue = this.onDidValueChangeEmitter.event;\n        this.onDidAccept = this.onDidAcceptEmitter.event;\n    }\n    get value() {\n        return this._value;\n    }\n    set value(value) {\n        this._value = value || '';\n        this.update();\n    }\n    get placeholder() {\n        return this._placeholder;\n    }\n    set placeholder(placeholder) {\n        this._placeholder = placeholder;\n        this.update();\n    }\n    get password() {\n        return this._password;\n    }\n    set password(password) {\n        this._password = password;\n        this.update();\n    }\n    show() {\n        if (!this.visible) {\n            this.visibleDisposables.add(this.ui.inputBox.onDidChange(value => {\n                if (value === this.value) {\n                    return;\n                }\n                this._value = value;\n                this.onDidValueChangeEmitter.fire(value);\n            }));\n            this.visibleDisposables.add(this.ui.onDidAccept(() => this.onDidAcceptEmitter.fire()));\n            this.valueSelectionUpdated = true;\n        }\n        super.show();\n    }\n    update() {\n        if (!this.visible) {\n            return;\n        }\n        this.ui.container.classList.remove('hidden-input');\n        const visibilities = {\n            title: !!this.title || !!this.step || !!this.buttons.length,\n            description: !!this.description || !!this.step,\n            inputBox: true,\n            message: true,\n            progressBar: true\n        };\n        this.ui.setVisibilities(visibilities);\n        super.update();\n        if (this.ui.inputBox.value !== this.value) {\n            this.ui.inputBox.value = this.value;\n        }\n        if (this.valueSelectionUpdated) {\n            this.valueSelectionUpdated = false;\n            this.ui.inputBox.select(this._valueSelection && { start: this._valueSelection[0], end: this._valueSelection[1] });\n        }\n        if (this.ui.inputBox.placeholder !== (this.placeholder || '')) {\n            this.ui.inputBox.placeholder = (this.placeholder || '');\n        }\n        if (this.ui.inputBox.password !== this.password) {\n            this.ui.inputBox.password = this.password;\n        }\n    }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}