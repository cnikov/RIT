{"ast":null,"code":"/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n    r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n    d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = this && this.__param || function (paramIndex, decorator) {\n  return function (target, key) {\n    decorator(target, key, paramIndex);\n  };\n};\nvar WordHighlighterContribution_1;\nimport { alert } from '../../../../base/browser/ui/aria/aria.js';\nimport * as arrays from '../../../../base/common/arrays.js';\nimport { createCancelablePromise, first, timeout } from '../../../../base/common/async.js';\nimport { CancellationToken } from '../../../../base/common/cancellation.js';\nimport { onUnexpectedError, onUnexpectedExternalError } from '../../../../base/common/errors.js';\nimport { Disposable, DisposableStore } from '../../../../base/common/lifecycle.js';\nimport { EditorAction, registerEditorAction, registerEditorContribution, registerModelAndPositionCommand } from '../../../browser/editorExtensions.js';\nimport { Range } from '../../../common/core/range.js';\nimport { EditorContextKeys } from '../../../common/editorContextKeys.js';\nimport { DocumentHighlightKind } from '../../../common/languages.js';\nimport * as nls from '../../../../nls.js';\nimport { IContextKeyService, RawContextKey } from '../../../../platform/contextkey/common/contextkey.js';\nimport { ILanguageFeaturesService } from '../../../common/services/languageFeatures.js';\nimport { getHighlightDecorationOptions } from './highlightDecorations.js';\nimport { Iterable } from '../../../../base/common/iterator.js';\nconst ctxHasWordHighlights = new RawContextKey('hasWordHighlights', false);\nexport function getOccurrencesAtPosition(registry, model, position, token) {\n  const orderedByScore = registry.ordered(model);\n  // in order of score ask the occurrences provider\n  // until someone response with a good result\n  // (good = none empty array)\n  return first(orderedByScore.map(provider => () => {\n    return Promise.resolve(provider.provideDocumentHighlights(model, position, token)).then(undefined, onUnexpectedExternalError);\n  }), arrays.isNonEmptyArray);\n}\nclass OccurenceAtPositionRequest {\n  constructor(_model, _selection, _wordSeparators) {\n    this._model = _model;\n    this._selection = _selection;\n    this._wordSeparators = _wordSeparators;\n    this._wordRange = this._getCurrentWordRange(_model, _selection);\n    this._result = null;\n  }\n  get result() {\n    if (!this._result) {\n      this._result = createCancelablePromise(token => this._compute(this._model, this._selection, this._wordSeparators, token));\n    }\n    return this._result;\n  }\n  _getCurrentWordRange(model, selection) {\n    const word = model.getWordAtPosition(selection.getPosition());\n    if (word) {\n      return new Range(selection.startLineNumber, word.startColumn, selection.startLineNumber, word.endColumn);\n    }\n    return null;\n  }\n  isValid(model, selection, decorations) {\n    const lineNumber = selection.startLineNumber;\n    const startColumn = selection.startColumn;\n    const endColumn = selection.endColumn;\n    const currentWordRange = this._getCurrentWordRange(model, selection);\n    let requestIsValid = Boolean(this._wordRange && this._wordRange.equalsRange(currentWordRange));\n    // Even if we are on a different word, if that word is in the decorations ranges, the request is still valid\n    // (Same symbol)\n    for (let i = 0, len = decorations.length; !requestIsValid && i < len; i++) {\n      const range = decorations.getRange(i);\n      if (range && range.startLineNumber === lineNumber) {\n        if (range.startColumn <= startColumn && range.endColumn >= endColumn) {\n          requestIsValid = true;\n        }\n      }\n    }\n    return requestIsValid;\n  }\n  cancel() {\n    this.result.cancel();\n  }\n}\nclass SemanticOccurenceAtPositionRequest extends OccurenceAtPositionRequest {\n  constructor(model, selection, wordSeparators, providers) {\n    super(model, selection, wordSeparators);\n    this._providers = providers;\n  }\n  _compute(model, selection, wordSeparators, token) {\n    return getOccurrencesAtPosition(this._providers, model, selection.getPosition(), token).then(value => value || []);\n  }\n}\nclass TextualOccurenceAtPositionRequest extends OccurenceAtPositionRequest {\n  constructor(model, selection, wordSeparators) {\n    super(model, selection, wordSeparators);\n    this._selectionIsEmpty = selection.isEmpty();\n  }\n  _compute(model, selection, wordSeparators, token) {\n    return timeout(250, token).then(() => {\n      if (!selection.isEmpty()) {\n        return [];\n      }\n      const word = model.getWordAtPosition(selection.getPosition());\n      if (!word || word.word.length > 1000) {\n        return [];\n      }\n      const matches = model.findMatches(word.word, true, false, true, wordSeparators, false);\n      return matches.map(m => {\n        return {\n          range: m.range,\n          kind: DocumentHighlightKind.Text\n        };\n      });\n    });\n  }\n  isValid(model, selection, decorations) {\n    const currentSelectionIsEmpty = selection.isEmpty();\n    if (this._selectionIsEmpty !== currentSelectionIsEmpty) {\n      return false;\n    }\n    return super.isValid(model, selection, decorations);\n  }\n}\nfunction computeOccurencesAtPosition(registry, model, selection, wordSeparators) {\n  if (registry.has(model)) {\n    return new SemanticOccurenceAtPositionRequest(model, selection, wordSeparators, registry);\n  }\n  return new TextualOccurenceAtPositionRequest(model, selection, wordSeparators);\n}\nregisterModelAndPositionCommand('_executeDocumentHighlights', (accessor, model, position) => {\n  const languageFeaturesService = accessor.get(ILanguageFeaturesService);\n  return getOccurrencesAtPosition(languageFeaturesService.documentHighlightProvider, model, position, CancellationToken.None);\n});\nclass WordHighlighter {\n  constructor(editor, providers, linkedHighlighters, contextKeyService) {\n    this.toUnhook = new DisposableStore();\n    this.workerRequestTokenId = 0;\n    this.workerRequestCompleted = false;\n    this.workerRequestValue = [];\n    this.lastCursorPositionChangeTime = 0;\n    this.renderDecorationsTimer = -1;\n    this.editor = editor;\n    this.providers = providers;\n    this.linkedHighlighters = linkedHighlighters;\n    this._hasWordHighlights = ctxHasWordHighlights.bindTo(contextKeyService);\n    this._ignorePositionChangeEvent = false;\n    this.occurrencesHighlight = this.editor.getOption(80 /* EditorOption.occurrencesHighlight */);\n    this.model = this.editor.getModel();\n    this.toUnhook.add(editor.onDidChangeCursorPosition(e => {\n      if (this._ignorePositionChangeEvent) {\n        // We are changing the position => ignore this event\n        return;\n      }\n      if (!this.occurrencesHighlight) {\n        // Early exit if nothing needs to be done!\n        // Leave some form of early exit check here if you wish to continue being a cursor position change listener ;)\n        return;\n      }\n      this._onPositionChanged(e);\n    }));\n    this.toUnhook.add(editor.onDidChangeModelContent(e => {\n      this._stopAll();\n    }));\n    this.toUnhook.add(editor.onDidChangeConfiguration(e => {\n      const newValue = this.editor.getOption(80 /* EditorOption.occurrencesHighlight */);\n      if (this.occurrencesHighlight !== newValue) {\n        this.occurrencesHighlight = newValue;\n        this._stopAll();\n      }\n    }));\n    this.decorations = this.editor.createDecorationsCollection();\n    this.workerRequestTokenId = 0;\n    this.workerRequest = null;\n    this.workerRequestCompleted = false;\n    this.lastCursorPositionChangeTime = 0;\n    this.renderDecorationsTimer = -1;\n  }\n  hasDecorations() {\n    return this.decorations.length > 0;\n  }\n  restore() {\n    if (!this.occurrencesHighlight) {\n      return;\n    }\n    this._run();\n  }\n  _getSortedHighlights() {\n    return this.decorations.getRanges().sort(Range.compareRangesUsingStarts);\n  }\n  moveNext() {\n    const highlights = this._getSortedHighlights();\n    const index = highlights.findIndex(range => range.containsPosition(this.editor.getPosition()));\n    const newIndex = (index + 1) % highlights.length;\n    const dest = highlights[newIndex];\n    try {\n      this._ignorePositionChangeEvent = true;\n      this.editor.setPosition(dest.getStartPosition());\n      this.editor.revealRangeInCenterIfOutsideViewport(dest);\n      const word = this._getWord();\n      if (word) {\n        const lineContent = this.editor.getModel().getLineContent(dest.startLineNumber);\n        alert(`${lineContent}, ${newIndex + 1} of ${highlights.length} for '${word.word}'`);\n      }\n    } finally {\n      this._ignorePositionChangeEvent = false;\n    }\n  }\n  moveBack() {\n    const highlights = this._getSortedHighlights();\n    const index = highlights.findIndex(range => range.containsPosition(this.editor.getPosition()));\n    const newIndex = (index - 1 + highlights.length) % highlights.length;\n    const dest = highlights[newIndex];\n    try {\n      this._ignorePositionChangeEvent = true;\n      this.editor.setPosition(dest.getStartPosition());\n      this.editor.revealRangeInCenterIfOutsideViewport(dest);\n      const word = this._getWord();\n      if (word) {\n        const lineContent = this.editor.getModel().getLineContent(dest.startLineNumber);\n        alert(`${lineContent}, ${newIndex + 1} of ${highlights.length} for '${word.word}'`);\n      }\n    } finally {\n      this._ignorePositionChangeEvent = false;\n    }\n  }\n  _removeDecorations() {\n    if (this.decorations.length > 0) {\n      // remove decorations\n      this.decorations.clear();\n      this._hasWordHighlights.set(false);\n    }\n  }\n  _stopAll() {\n    // Remove any existing decorations\n    this._removeDecorations();\n    // Cancel any renderDecorationsTimer\n    if (this.renderDecorationsTimer !== -1) {\n      clearTimeout(this.renderDecorationsTimer);\n      this.renderDecorationsTimer = -1;\n    }\n    // Cancel any worker request\n    if (this.workerRequest !== null) {\n      this.workerRequest.cancel();\n      this.workerRequest = null;\n    }\n    // Invalidate any worker request callback\n    if (!this.workerRequestCompleted) {\n      this.workerRequestTokenId++;\n      this.workerRequestCompleted = true;\n    }\n  }\n  _onPositionChanged(e) {\n    // disabled\n    if (!this.occurrencesHighlight) {\n      this._stopAll();\n      return;\n    }\n    // ignore typing & other\n    if (e.reason !== 3 /* CursorChangeReason.Explicit */) {\n      this._stopAll();\n      return;\n    }\n    this._run();\n  }\n  _getWord() {\n    const editorSelection = this.editor.getSelection();\n    const lineNumber = editorSelection.startLineNumber;\n    const startColumn = editorSelection.startColumn;\n    return this.model.getWordAtPosition({\n      lineNumber: lineNumber,\n      column: startColumn\n    });\n  }\n  _run() {\n    const editorSelection = this.editor.getSelection();\n    // ignore multiline selection\n    if (editorSelection.startLineNumber !== editorSelection.endLineNumber) {\n      this._stopAll();\n      return;\n    }\n    const startColumn = editorSelection.startColumn;\n    const endColumn = editorSelection.endColumn;\n    const word = this._getWord();\n    // The selection must be inside a word or surround one word at most\n    if (!word || word.startColumn > startColumn || word.endColumn < endColumn) {\n      this._stopAll();\n      return;\n    }\n    // All the effort below is trying to achieve this:\n    // - when cursor is moved to a word, trigger immediately a findOccurrences request\n    // - 250ms later after the last cursor move event, render the occurrences\n    // - no flickering!\n    const workerRequestIsValid = this.workerRequest && this.workerRequest.isValid(this.model, editorSelection, this.decorations);\n    // There are 4 cases:\n    // a) old workerRequest is valid & completed, renderDecorationsTimer fired\n    // b) old workerRequest is valid & completed, renderDecorationsTimer not fired\n    // c) old workerRequest is valid, but not completed\n    // d) old workerRequest is not valid\n    // For a) no action is needed\n    // For c), member 'lastCursorPositionChangeTime' will be used when installing the timer so no action is needed\n    this.lastCursorPositionChangeTime = new Date().getTime();\n    if (workerRequestIsValid) {\n      if (this.workerRequestCompleted && this.renderDecorationsTimer !== -1) {\n        // case b)\n        // Delay the firing of renderDecorationsTimer by an extra 250 ms\n        clearTimeout(this.renderDecorationsTimer);\n        this.renderDecorationsTimer = -1;\n        this._beginRenderDecorations();\n      }\n    } else {\n      // case d)\n      // Stop all previous actions and start fresh\n      this._stopAll();\n      const myRequestId = ++this.workerRequestTokenId;\n      this.workerRequestCompleted = false;\n      this.workerRequest = computeOccurencesAtPosition(this.providers, this.model, this.editor.getSelection(), this.editor.getOption(129 /* EditorOption.wordSeparators */));\n      this.workerRequest.result.then(data => {\n        if (myRequestId === this.workerRequestTokenId) {\n          this.workerRequestCompleted = true;\n          this.workerRequestValue = data || [];\n          this._beginRenderDecorations();\n        }\n      }, onUnexpectedError);\n    }\n  }\n  _beginRenderDecorations() {\n    const currentTime = new Date().getTime();\n    const minimumRenderTime = this.lastCursorPositionChangeTime + 250;\n    if (currentTime >= minimumRenderTime) {\n      // Synchronous\n      this.renderDecorationsTimer = -1;\n      this.renderDecorations();\n    } else {\n      // Asynchronous\n      this.renderDecorationsTimer = setTimeout(() => {\n        this.renderDecorations();\n      }, minimumRenderTime - currentTime);\n    }\n  }\n  renderDecorations() {\n    this.renderDecorationsTimer = -1;\n    const decorations = [];\n    for (const info of this.workerRequestValue) {\n      if (info.range) {\n        decorations.push({\n          range: info.range,\n          options: getHighlightDecorationOptions(info.kind)\n        });\n      }\n    }\n    this.decorations.set(decorations);\n    this._hasWordHighlights.set(this.hasDecorations());\n    // update decorators of friends\n    for (const other of this.linkedHighlighters()) {\n      if ((other === null || other === void 0 ? void 0 : other.editor.getModel()) === this.editor.getModel()) {\n        other._stopAll();\n        other.decorations.set(decorations);\n        other._hasWordHighlights.set(other.hasDecorations());\n      }\n    }\n  }\n  dispose() {\n    this._stopAll();\n    this.toUnhook.dispose();\n  }\n}\nlet WordHighlighterContribution = WordHighlighterContribution_1 = class WordHighlighterContribution extends Disposable {\n  static get(editor) {\n    return editor.getContribution(WordHighlighterContribution_1.ID);\n  }\n  constructor(editor, contextKeyService, languageFeaturesService) {\n    super();\n    this.wordHighlighter = null;\n    this.linkedContributions = new Set();\n    const createWordHighlighterIfPossible = () => {\n      if (editor.hasModel() && !editor.getModel().isTooLargeForTokenization()) {\n        this.wordHighlighter = new WordHighlighter(editor, languageFeaturesService.documentHighlightProvider, () => Iterable.map(this.linkedContributions, c => c.wordHighlighter), contextKeyService);\n      }\n    };\n    this._register(editor.onDidChangeModel(e => {\n      if (this.wordHighlighter) {\n        this.wordHighlighter.dispose();\n        this.wordHighlighter = null;\n      }\n      createWordHighlighterIfPossible();\n    }));\n    createWordHighlighterIfPossible();\n  }\n  saveViewState() {\n    if (this.wordHighlighter && this.wordHighlighter.hasDecorations()) {\n      return true;\n    }\n    return false;\n  }\n  moveNext() {\n    var _a;\n    (_a = this.wordHighlighter) === null || _a === void 0 ? void 0 : _a.moveNext();\n  }\n  moveBack() {\n    var _a;\n    (_a = this.wordHighlighter) === null || _a === void 0 ? void 0 : _a.moveBack();\n  }\n  restoreViewState(state) {\n    if (this.wordHighlighter && state) {\n      this.wordHighlighter.restore();\n    }\n  }\n  dispose() {\n    if (this.wordHighlighter) {\n      this.wordHighlighter.dispose();\n      this.wordHighlighter = null;\n    }\n    super.dispose();\n  }\n};\nWordHighlighterContribution.ID = 'editor.contrib.wordHighlighter';\nWordHighlighterContribution = WordHighlighterContribution_1 = __decorate([__param(1, IContextKeyService), __param(2, ILanguageFeaturesService)], WordHighlighterContribution);\nexport { WordHighlighterContribution };\nclass WordHighlightNavigationAction extends EditorAction {\n  constructor(next, opts) {\n    super(opts);\n    this._isNext = next;\n  }\n  run(accessor, editor) {\n    const controller = WordHighlighterContribution.get(editor);\n    if (!controller) {\n      return;\n    }\n    if (this._isNext) {\n      controller.moveNext();\n    } else {\n      controller.moveBack();\n    }\n  }\n}\nclass NextWordHighlightAction extends WordHighlightNavigationAction {\n  constructor() {\n    super(true, {\n      id: 'editor.action.wordHighlight.next',\n      label: nls.localize('wordHighlight.next.label', \"Go to Next Symbol Highlight\"),\n      alias: 'Go to Next Symbol Highlight',\n      precondition: ctxHasWordHighlights,\n      kbOpts: {\n        kbExpr: EditorContextKeys.editorTextFocus,\n        primary: 65 /* KeyCode.F7 */,\n        weight: 100 /* KeybindingWeight.EditorContrib */\n      }\n    });\n  }\n}\n\nclass PrevWordHighlightAction extends WordHighlightNavigationAction {\n  constructor() {\n    super(false, {\n      id: 'editor.action.wordHighlight.prev',\n      label: nls.localize('wordHighlight.previous.label', \"Go to Previous Symbol Highlight\"),\n      alias: 'Go to Previous Symbol Highlight',\n      precondition: ctxHasWordHighlights,\n      kbOpts: {\n        kbExpr: EditorContextKeys.editorTextFocus,\n        primary: 1024 /* KeyMod.Shift */ | 65 /* KeyCode.F7 */,\n        weight: 100 /* KeybindingWeight.EditorContrib */\n      }\n    });\n  }\n}\n\nclass TriggerWordHighlightAction extends EditorAction {\n  constructor() {\n    super({\n      id: 'editor.action.wordHighlight.trigger',\n      label: nls.localize('wordHighlight.trigger.label', \"Trigger Symbol Highlight\"),\n      alias: 'Trigger Symbol Highlight',\n      precondition: ctxHasWordHighlights.toNegated(),\n      kbOpts: {\n        kbExpr: EditorContextKeys.editorTextFocus,\n        primary: 0,\n        weight: 100 /* KeybindingWeight.EditorContrib */\n      }\n    });\n  }\n\n  run(accessor, editor, args) {\n    const controller = WordHighlighterContribution.get(editor);\n    if (!controller) {\n      return;\n    }\n    controller.restoreViewState(true);\n  }\n}\nregisterEditorContribution(WordHighlighterContribution.ID, WordHighlighterContribution, 0 /* EditorContributionInstantiation.Eager */); // eager because it uses `saveViewState`/`restoreViewState`\nregisterEditorAction(NextWordHighlightAction);\nregisterEditorAction(PrevWordHighlightAction);\nregisterEditorAction(TriggerWordHighlightAction);","map":{"version":3,"names":["__decorate","decorators","target","key","desc","c","arguments","length","r","Object","getOwnPropertyDescriptor","d","Reflect","decorate","i","defineProperty","__param","paramIndex","decorator","WordHighlighterContribution_1","alert","arrays","createCancelablePromise","first","timeout","CancellationToken","onUnexpectedError","onUnexpectedExternalError","Disposable","DisposableStore","EditorAction","registerEditorAction","registerEditorContribution","registerModelAndPositionCommand","Range","EditorContextKeys","DocumentHighlightKind","nls","IContextKeyService","RawContextKey","ILanguageFeaturesService","getHighlightDecorationOptions","Iterable","ctxHasWordHighlights","getOccurrencesAtPosition","registry","model","position","token","orderedByScore","ordered","map","provider","Promise","resolve","provideDocumentHighlights","then","undefined","isNonEmptyArray","OccurenceAtPositionRequest","constructor","_model","_selection","_wordSeparators","_wordRange","_getCurrentWordRange","_result","result","_compute","selection","word","getWordAtPosition","getPosition","startLineNumber","startColumn","endColumn","isValid","decorations","lineNumber","currentWordRange","requestIsValid","Boolean","equalsRange","len","range","getRange","cancel","SemanticOccurenceAtPositionRequest","wordSeparators","providers","_providers","value","TextualOccurenceAtPositionRequest","_selectionIsEmpty","isEmpty","matches","findMatches","m","kind","Text","currentSelectionIsEmpty","computeOccurencesAtPosition","has","accessor","languageFeaturesService","get","documentHighlightProvider","None","WordHighlighter","editor","linkedHighlighters","contextKeyService","toUnhook","workerRequestTokenId","workerRequestCompleted","workerRequestValue","lastCursorPositionChangeTime","renderDecorationsTimer","_hasWordHighlights","bindTo","_ignorePositionChangeEvent","occurrencesHighlight","getOption","getModel","add","onDidChangeCursorPosition","e","_onPositionChanged","onDidChangeModelContent","_stopAll","onDidChangeConfiguration","newValue","createDecorationsCollection","workerRequest","hasDecorations","restore","_run","_getSortedHighlights","getRanges","sort","compareRangesUsingStarts","moveNext","highlights","index","findIndex","containsPosition","newIndex","dest","setPosition","getStartPosition","revealRangeInCenterIfOutsideViewport","_getWord","lineContent","getLineContent","moveBack","_removeDecorations","clear","set","clearTimeout","reason","editorSelection","getSelection","column","endLineNumber","workerRequestIsValid","Date","getTime","_beginRenderDecorations","myRequestId","data","currentTime","minimumRenderTime","renderDecorations","setTimeout","info","push","options","other","dispose","WordHighlighterContribution","getContribution","ID","wordHighlighter","linkedContributions","Set","createWordHighlighterIfPossible","hasModel","isTooLargeForTokenization","_register","onDidChangeModel","saveViewState","_a","restoreViewState","state","WordHighlightNavigationAction","next","opts","_isNext","run","controller","NextWordHighlightAction","id","label","localize","alias","precondition","kbOpts","kbExpr","editorTextFocus","primary","weight","PrevWordHighlightAction","TriggerWordHighlightAction","toNegated","args"],"sources":["/home/chlohest/work/website/my_web/node_modules/monaco-editor/esm/vs/editor/contrib/wordHighlighter/browser/wordHighlighter.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nvar WordHighlighterContribution_1;\nimport { alert } from '../../../../base/browser/ui/aria/aria.js';\nimport * as arrays from '../../../../base/common/arrays.js';\nimport { createCancelablePromise, first, timeout } from '../../../../base/common/async.js';\nimport { CancellationToken } from '../../../../base/common/cancellation.js';\nimport { onUnexpectedError, onUnexpectedExternalError } from '../../../../base/common/errors.js';\nimport { Disposable, DisposableStore } from '../../../../base/common/lifecycle.js';\nimport { EditorAction, registerEditorAction, registerEditorContribution, registerModelAndPositionCommand } from '../../../browser/editorExtensions.js';\nimport { Range } from '../../../common/core/range.js';\nimport { EditorContextKeys } from '../../../common/editorContextKeys.js';\nimport { DocumentHighlightKind } from '../../../common/languages.js';\nimport * as nls from '../../../../nls.js';\nimport { IContextKeyService, RawContextKey } from '../../../../platform/contextkey/common/contextkey.js';\nimport { ILanguageFeaturesService } from '../../../common/services/languageFeatures.js';\nimport { getHighlightDecorationOptions } from './highlightDecorations.js';\nimport { Iterable } from '../../../../base/common/iterator.js';\nconst ctxHasWordHighlights = new RawContextKey('hasWordHighlights', false);\nexport function getOccurrencesAtPosition(registry, model, position, token) {\n    const orderedByScore = registry.ordered(model);\n    // in order of score ask the occurrences provider\n    // until someone response with a good result\n    // (good = none empty array)\n    return first(orderedByScore.map(provider => () => {\n        return Promise.resolve(provider.provideDocumentHighlights(model, position, token))\n            .then(undefined, onUnexpectedExternalError);\n    }), arrays.isNonEmptyArray);\n}\nclass OccurenceAtPositionRequest {\n    constructor(_model, _selection, _wordSeparators) {\n        this._model = _model;\n        this._selection = _selection;\n        this._wordSeparators = _wordSeparators;\n        this._wordRange = this._getCurrentWordRange(_model, _selection);\n        this._result = null;\n    }\n    get result() {\n        if (!this._result) {\n            this._result = createCancelablePromise(token => this._compute(this._model, this._selection, this._wordSeparators, token));\n        }\n        return this._result;\n    }\n    _getCurrentWordRange(model, selection) {\n        const word = model.getWordAtPosition(selection.getPosition());\n        if (word) {\n            return new Range(selection.startLineNumber, word.startColumn, selection.startLineNumber, word.endColumn);\n        }\n        return null;\n    }\n    isValid(model, selection, decorations) {\n        const lineNumber = selection.startLineNumber;\n        const startColumn = selection.startColumn;\n        const endColumn = selection.endColumn;\n        const currentWordRange = this._getCurrentWordRange(model, selection);\n        let requestIsValid = Boolean(this._wordRange && this._wordRange.equalsRange(currentWordRange));\n        // Even if we are on a different word, if that word is in the decorations ranges, the request is still valid\n        // (Same symbol)\n        for (let i = 0, len = decorations.length; !requestIsValid && i < len; i++) {\n            const range = decorations.getRange(i);\n            if (range && range.startLineNumber === lineNumber) {\n                if (range.startColumn <= startColumn && range.endColumn >= endColumn) {\n                    requestIsValid = true;\n                }\n            }\n        }\n        return requestIsValid;\n    }\n    cancel() {\n        this.result.cancel();\n    }\n}\nclass SemanticOccurenceAtPositionRequest extends OccurenceAtPositionRequest {\n    constructor(model, selection, wordSeparators, providers) {\n        super(model, selection, wordSeparators);\n        this._providers = providers;\n    }\n    _compute(model, selection, wordSeparators, token) {\n        return getOccurrencesAtPosition(this._providers, model, selection.getPosition(), token).then(value => value || []);\n    }\n}\nclass TextualOccurenceAtPositionRequest extends OccurenceAtPositionRequest {\n    constructor(model, selection, wordSeparators) {\n        super(model, selection, wordSeparators);\n        this._selectionIsEmpty = selection.isEmpty();\n    }\n    _compute(model, selection, wordSeparators, token) {\n        return timeout(250, token).then(() => {\n            if (!selection.isEmpty()) {\n                return [];\n            }\n            const word = model.getWordAtPosition(selection.getPosition());\n            if (!word || word.word.length > 1000) {\n                return [];\n            }\n            const matches = model.findMatches(word.word, true, false, true, wordSeparators, false);\n            return matches.map(m => {\n                return {\n                    range: m.range,\n                    kind: DocumentHighlightKind.Text\n                };\n            });\n        });\n    }\n    isValid(model, selection, decorations) {\n        const currentSelectionIsEmpty = selection.isEmpty();\n        if (this._selectionIsEmpty !== currentSelectionIsEmpty) {\n            return false;\n        }\n        return super.isValid(model, selection, decorations);\n    }\n}\nfunction computeOccurencesAtPosition(registry, model, selection, wordSeparators) {\n    if (registry.has(model)) {\n        return new SemanticOccurenceAtPositionRequest(model, selection, wordSeparators, registry);\n    }\n    return new TextualOccurenceAtPositionRequest(model, selection, wordSeparators);\n}\nregisterModelAndPositionCommand('_executeDocumentHighlights', (accessor, model, position) => {\n    const languageFeaturesService = accessor.get(ILanguageFeaturesService);\n    return getOccurrencesAtPosition(languageFeaturesService.documentHighlightProvider, model, position, CancellationToken.None);\n});\nclass WordHighlighter {\n    constructor(editor, providers, linkedHighlighters, contextKeyService) {\n        this.toUnhook = new DisposableStore();\n        this.workerRequestTokenId = 0;\n        this.workerRequestCompleted = false;\n        this.workerRequestValue = [];\n        this.lastCursorPositionChangeTime = 0;\n        this.renderDecorationsTimer = -1;\n        this.editor = editor;\n        this.providers = providers;\n        this.linkedHighlighters = linkedHighlighters;\n        this._hasWordHighlights = ctxHasWordHighlights.bindTo(contextKeyService);\n        this._ignorePositionChangeEvent = false;\n        this.occurrencesHighlight = this.editor.getOption(80 /* EditorOption.occurrencesHighlight */);\n        this.model = this.editor.getModel();\n        this.toUnhook.add(editor.onDidChangeCursorPosition((e) => {\n            if (this._ignorePositionChangeEvent) {\n                // We are changing the position => ignore this event\n                return;\n            }\n            if (!this.occurrencesHighlight) {\n                // Early exit if nothing needs to be done!\n                // Leave some form of early exit check here if you wish to continue being a cursor position change listener ;)\n                return;\n            }\n            this._onPositionChanged(e);\n        }));\n        this.toUnhook.add(editor.onDidChangeModelContent((e) => {\n            this._stopAll();\n        }));\n        this.toUnhook.add(editor.onDidChangeConfiguration((e) => {\n            const newValue = this.editor.getOption(80 /* EditorOption.occurrencesHighlight */);\n            if (this.occurrencesHighlight !== newValue) {\n                this.occurrencesHighlight = newValue;\n                this._stopAll();\n            }\n        }));\n        this.decorations = this.editor.createDecorationsCollection();\n        this.workerRequestTokenId = 0;\n        this.workerRequest = null;\n        this.workerRequestCompleted = false;\n        this.lastCursorPositionChangeTime = 0;\n        this.renderDecorationsTimer = -1;\n    }\n    hasDecorations() {\n        return (this.decorations.length > 0);\n    }\n    restore() {\n        if (!this.occurrencesHighlight) {\n            return;\n        }\n        this._run();\n    }\n    _getSortedHighlights() {\n        return (this.decorations.getRanges()\n            .sort(Range.compareRangesUsingStarts));\n    }\n    moveNext() {\n        const highlights = this._getSortedHighlights();\n        const index = highlights.findIndex((range) => range.containsPosition(this.editor.getPosition()));\n        const newIndex = ((index + 1) % highlights.length);\n        const dest = highlights[newIndex];\n        try {\n            this._ignorePositionChangeEvent = true;\n            this.editor.setPosition(dest.getStartPosition());\n            this.editor.revealRangeInCenterIfOutsideViewport(dest);\n            const word = this._getWord();\n            if (word) {\n                const lineContent = this.editor.getModel().getLineContent(dest.startLineNumber);\n                alert(`${lineContent}, ${newIndex + 1} of ${highlights.length} for '${word.word}'`);\n            }\n        }\n        finally {\n            this._ignorePositionChangeEvent = false;\n        }\n    }\n    moveBack() {\n        const highlights = this._getSortedHighlights();\n        const index = highlights.findIndex((range) => range.containsPosition(this.editor.getPosition()));\n        const newIndex = ((index - 1 + highlights.length) % highlights.length);\n        const dest = highlights[newIndex];\n        try {\n            this._ignorePositionChangeEvent = true;\n            this.editor.setPosition(dest.getStartPosition());\n            this.editor.revealRangeInCenterIfOutsideViewport(dest);\n            const word = this._getWord();\n            if (word) {\n                const lineContent = this.editor.getModel().getLineContent(dest.startLineNumber);\n                alert(`${lineContent}, ${newIndex + 1} of ${highlights.length} for '${word.word}'`);\n            }\n        }\n        finally {\n            this._ignorePositionChangeEvent = false;\n        }\n    }\n    _removeDecorations() {\n        if (this.decorations.length > 0) {\n            // remove decorations\n            this.decorations.clear();\n            this._hasWordHighlights.set(false);\n        }\n    }\n    _stopAll() {\n        // Remove any existing decorations\n        this._removeDecorations();\n        // Cancel any renderDecorationsTimer\n        if (this.renderDecorationsTimer !== -1) {\n            clearTimeout(this.renderDecorationsTimer);\n            this.renderDecorationsTimer = -1;\n        }\n        // Cancel any worker request\n        if (this.workerRequest !== null) {\n            this.workerRequest.cancel();\n            this.workerRequest = null;\n        }\n        // Invalidate any worker request callback\n        if (!this.workerRequestCompleted) {\n            this.workerRequestTokenId++;\n            this.workerRequestCompleted = true;\n        }\n    }\n    _onPositionChanged(e) {\n        // disabled\n        if (!this.occurrencesHighlight) {\n            this._stopAll();\n            return;\n        }\n        // ignore typing & other\n        if (e.reason !== 3 /* CursorChangeReason.Explicit */) {\n            this._stopAll();\n            return;\n        }\n        this._run();\n    }\n    _getWord() {\n        const editorSelection = this.editor.getSelection();\n        const lineNumber = editorSelection.startLineNumber;\n        const startColumn = editorSelection.startColumn;\n        return this.model.getWordAtPosition({\n            lineNumber: lineNumber,\n            column: startColumn\n        });\n    }\n    _run() {\n        const editorSelection = this.editor.getSelection();\n        // ignore multiline selection\n        if (editorSelection.startLineNumber !== editorSelection.endLineNumber) {\n            this._stopAll();\n            return;\n        }\n        const startColumn = editorSelection.startColumn;\n        const endColumn = editorSelection.endColumn;\n        const word = this._getWord();\n        // The selection must be inside a word or surround one word at most\n        if (!word || word.startColumn > startColumn || word.endColumn < endColumn) {\n            this._stopAll();\n            return;\n        }\n        // All the effort below is trying to achieve this:\n        // - when cursor is moved to a word, trigger immediately a findOccurrences request\n        // - 250ms later after the last cursor move event, render the occurrences\n        // - no flickering!\n        const workerRequestIsValid = (this.workerRequest && this.workerRequest.isValid(this.model, editorSelection, this.decorations));\n        // There are 4 cases:\n        // a) old workerRequest is valid & completed, renderDecorationsTimer fired\n        // b) old workerRequest is valid & completed, renderDecorationsTimer not fired\n        // c) old workerRequest is valid, but not completed\n        // d) old workerRequest is not valid\n        // For a) no action is needed\n        // For c), member 'lastCursorPositionChangeTime' will be used when installing the timer so no action is needed\n        this.lastCursorPositionChangeTime = (new Date()).getTime();\n        if (workerRequestIsValid) {\n            if (this.workerRequestCompleted && this.renderDecorationsTimer !== -1) {\n                // case b)\n                // Delay the firing of renderDecorationsTimer by an extra 250 ms\n                clearTimeout(this.renderDecorationsTimer);\n                this.renderDecorationsTimer = -1;\n                this._beginRenderDecorations();\n            }\n        }\n        else {\n            // case d)\n            // Stop all previous actions and start fresh\n            this._stopAll();\n            const myRequestId = ++this.workerRequestTokenId;\n            this.workerRequestCompleted = false;\n            this.workerRequest = computeOccurencesAtPosition(this.providers, this.model, this.editor.getSelection(), this.editor.getOption(129 /* EditorOption.wordSeparators */));\n            this.workerRequest.result.then(data => {\n                if (myRequestId === this.workerRequestTokenId) {\n                    this.workerRequestCompleted = true;\n                    this.workerRequestValue = data || [];\n                    this._beginRenderDecorations();\n                }\n            }, onUnexpectedError);\n        }\n    }\n    _beginRenderDecorations() {\n        const currentTime = (new Date()).getTime();\n        const minimumRenderTime = this.lastCursorPositionChangeTime + 250;\n        if (currentTime >= minimumRenderTime) {\n            // Synchronous\n            this.renderDecorationsTimer = -1;\n            this.renderDecorations();\n        }\n        else {\n            // Asynchronous\n            this.renderDecorationsTimer = setTimeout(() => {\n                this.renderDecorations();\n            }, (minimumRenderTime - currentTime));\n        }\n    }\n    renderDecorations() {\n        this.renderDecorationsTimer = -1;\n        const decorations = [];\n        for (const info of this.workerRequestValue) {\n            if (info.range) {\n                decorations.push({\n                    range: info.range,\n                    options: getHighlightDecorationOptions(info.kind)\n                });\n            }\n        }\n        this.decorations.set(decorations);\n        this._hasWordHighlights.set(this.hasDecorations());\n        // update decorators of friends\n        for (const other of this.linkedHighlighters()) {\n            if ((other === null || other === void 0 ? void 0 : other.editor.getModel()) === this.editor.getModel()) {\n                other._stopAll();\n                other.decorations.set(decorations);\n                other._hasWordHighlights.set(other.hasDecorations());\n            }\n        }\n    }\n    dispose() {\n        this._stopAll();\n        this.toUnhook.dispose();\n    }\n}\nlet WordHighlighterContribution = WordHighlighterContribution_1 = class WordHighlighterContribution extends Disposable {\n    static get(editor) {\n        return editor.getContribution(WordHighlighterContribution_1.ID);\n    }\n    constructor(editor, contextKeyService, languageFeaturesService) {\n        super();\n        this.wordHighlighter = null;\n        this.linkedContributions = new Set();\n        const createWordHighlighterIfPossible = () => {\n            if (editor.hasModel() && !editor.getModel().isTooLargeForTokenization()) {\n                this.wordHighlighter = new WordHighlighter(editor, languageFeaturesService.documentHighlightProvider, () => Iterable.map(this.linkedContributions, c => c.wordHighlighter), contextKeyService);\n            }\n        };\n        this._register(editor.onDidChangeModel((e) => {\n            if (this.wordHighlighter) {\n                this.wordHighlighter.dispose();\n                this.wordHighlighter = null;\n            }\n            createWordHighlighterIfPossible();\n        }));\n        createWordHighlighterIfPossible();\n    }\n    saveViewState() {\n        if (this.wordHighlighter && this.wordHighlighter.hasDecorations()) {\n            return true;\n        }\n        return false;\n    }\n    moveNext() {\n        var _a;\n        (_a = this.wordHighlighter) === null || _a === void 0 ? void 0 : _a.moveNext();\n    }\n    moveBack() {\n        var _a;\n        (_a = this.wordHighlighter) === null || _a === void 0 ? void 0 : _a.moveBack();\n    }\n    restoreViewState(state) {\n        if (this.wordHighlighter && state) {\n            this.wordHighlighter.restore();\n        }\n    }\n    dispose() {\n        if (this.wordHighlighter) {\n            this.wordHighlighter.dispose();\n            this.wordHighlighter = null;\n        }\n        super.dispose();\n    }\n};\nWordHighlighterContribution.ID = 'editor.contrib.wordHighlighter';\nWordHighlighterContribution = WordHighlighterContribution_1 = __decorate([\n    __param(1, IContextKeyService),\n    __param(2, ILanguageFeaturesService)\n], WordHighlighterContribution);\nexport { WordHighlighterContribution };\nclass WordHighlightNavigationAction extends EditorAction {\n    constructor(next, opts) {\n        super(opts);\n        this._isNext = next;\n    }\n    run(accessor, editor) {\n        const controller = WordHighlighterContribution.get(editor);\n        if (!controller) {\n            return;\n        }\n        if (this._isNext) {\n            controller.moveNext();\n        }\n        else {\n            controller.moveBack();\n        }\n    }\n}\nclass NextWordHighlightAction extends WordHighlightNavigationAction {\n    constructor() {\n        super(true, {\n            id: 'editor.action.wordHighlight.next',\n            label: nls.localize('wordHighlight.next.label', \"Go to Next Symbol Highlight\"),\n            alias: 'Go to Next Symbol Highlight',\n            precondition: ctxHasWordHighlights,\n            kbOpts: {\n                kbExpr: EditorContextKeys.editorTextFocus,\n                primary: 65 /* KeyCode.F7 */,\n                weight: 100 /* KeybindingWeight.EditorContrib */\n            }\n        });\n    }\n}\nclass PrevWordHighlightAction extends WordHighlightNavigationAction {\n    constructor() {\n        super(false, {\n            id: 'editor.action.wordHighlight.prev',\n            label: nls.localize('wordHighlight.previous.label', \"Go to Previous Symbol Highlight\"),\n            alias: 'Go to Previous Symbol Highlight',\n            precondition: ctxHasWordHighlights,\n            kbOpts: {\n                kbExpr: EditorContextKeys.editorTextFocus,\n                primary: 1024 /* KeyMod.Shift */ | 65 /* KeyCode.F7 */,\n                weight: 100 /* KeybindingWeight.EditorContrib */\n            }\n        });\n    }\n}\nclass TriggerWordHighlightAction extends EditorAction {\n    constructor() {\n        super({\n            id: 'editor.action.wordHighlight.trigger',\n            label: nls.localize('wordHighlight.trigger.label', \"Trigger Symbol Highlight\"),\n            alias: 'Trigger Symbol Highlight',\n            precondition: ctxHasWordHighlights.toNegated(),\n            kbOpts: {\n                kbExpr: EditorContextKeys.editorTextFocus,\n                primary: 0,\n                weight: 100 /* KeybindingWeight.EditorContrib */\n            }\n        });\n    }\n    run(accessor, editor, args) {\n        const controller = WordHighlighterContribution.get(editor);\n        if (!controller) {\n            return;\n        }\n        controller.restoreViewState(true);\n    }\n}\nregisterEditorContribution(WordHighlighterContribution.ID, WordHighlighterContribution, 0 /* EditorContributionInstantiation.Eager */); // eager because it uses `saveViewState`/`restoreViewState`\nregisterEditorAction(NextWordHighlightAction);\nregisterEditorAction(PrevWordHighlightAction);\nregisterEditorAction(TriggerWordHighlightAction);\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}