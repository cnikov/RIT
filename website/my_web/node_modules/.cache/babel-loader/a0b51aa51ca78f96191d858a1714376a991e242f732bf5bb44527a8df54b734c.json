{"ast":null,"code":"/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n    r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n    d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = this && this.__param || function (paramIndex, decorator) {\n  return function (target, key) {\n    decorator(target, key, paramIndex);\n  };\n};\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\nvar RenameController_1;\nimport { alert } from '../../../../base/browser/ui/aria/aria.js';\nimport { raceCancellation } from '../../../../base/common/async.js';\nimport { CancellationToken, CancellationTokenSource } from '../../../../base/common/cancellation.js';\nimport { onUnexpectedError } from '../../../../base/common/errors.js';\nimport { DisposableStore } from '../../../../base/common/lifecycle.js';\nimport { assertType } from '../../../../base/common/types.js';\nimport { URI } from '../../../../base/common/uri.js';\nimport { EditorStateCancellationTokenSource } from '../../editorState/browser/editorState.js';\nimport { EditorAction, EditorCommand, registerEditorAction, registerEditorCommand, registerEditorContribution, registerModelAndPositionCommand } from '../../../browser/editorExtensions.js';\nimport { IBulkEditService } from '../../../browser/services/bulkEditService.js';\nimport { ICodeEditorService } from '../../../browser/services/codeEditorService.js';\nimport { Position } from '../../../common/core/position.js';\nimport { Range } from '../../../common/core/range.js';\nimport { EditorContextKeys } from '../../../common/editorContextKeys.js';\nimport { ITextResourceConfigurationService } from '../../../common/services/textResourceConfiguration.js';\nimport { MessageController } from '../../message/browser/messageController.js';\nimport * as nls from '../../../../nls.js';\nimport { Extensions } from '../../../../platform/configuration/common/configurationRegistry.js';\nimport { ContextKeyExpr } from '../../../../platform/contextkey/common/contextkey.js';\nimport { IInstantiationService } from '../../../../platform/instantiation/common/instantiation.js';\nimport { ILogService } from '../../../../platform/log/common/log.js';\nimport { INotificationService } from '../../../../platform/notification/common/notification.js';\nimport { IEditorProgressService } from '../../../../platform/progress/common/progress.js';\nimport { Registry } from '../../../../platform/registry/common/platform.js';\nimport { CONTEXT_RENAME_INPUT_VISIBLE, RenameInputField } from './renameInputField.js';\nimport { ILanguageFeaturesService } from '../../../common/services/languageFeatures.js';\nclass RenameSkeleton {\n  constructor(model, position, registry) {\n    this.model = model;\n    this.position = position;\n    this._providerRenameIdx = 0;\n    this._providers = registry.ordered(model);\n  }\n  hasProvider() {\n    return this._providers.length > 0;\n  }\n  resolveRenameLocation(token) {\n    return __awaiter(this, void 0, void 0, function* () {\n      const rejects = [];\n      for (this._providerRenameIdx = 0; this._providerRenameIdx < this._providers.length; this._providerRenameIdx++) {\n        const provider = this._providers[this._providerRenameIdx];\n        if (!provider.resolveRenameLocation) {\n          break;\n        }\n        const res = yield provider.resolveRenameLocation(this.model, this.position, token);\n        if (!res) {\n          continue;\n        }\n        if (res.rejectReason) {\n          rejects.push(res.rejectReason);\n          continue;\n        }\n        return res;\n      }\n      const word = this.model.getWordAtPosition(this.position);\n      if (!word) {\n        return {\n          range: Range.fromPositions(this.position),\n          text: '',\n          rejectReason: rejects.length > 0 ? rejects.join('\\n') : undefined\n        };\n      }\n      return {\n        range: new Range(this.position.lineNumber, word.startColumn, this.position.lineNumber, word.endColumn),\n        text: word.word,\n        rejectReason: rejects.length > 0 ? rejects.join('\\n') : undefined\n      };\n    });\n  }\n  provideRenameEdits(newName, token) {\n    return __awaiter(this, void 0, void 0, function* () {\n      return this._provideRenameEdits(newName, this._providerRenameIdx, [], token);\n    });\n  }\n  _provideRenameEdits(newName, i, rejects, token) {\n    return __awaiter(this, void 0, void 0, function* () {\n      const provider = this._providers[i];\n      if (!provider) {\n        return {\n          edits: [],\n          rejectReason: rejects.join('\\n')\n        };\n      }\n      const result = yield provider.provideRenameEdits(this.model, this.position, newName, token);\n      if (!result) {\n        return this._provideRenameEdits(newName, i + 1, rejects.concat(nls.localize('no result', \"No result.\")), token);\n      } else if (result.rejectReason) {\n        return this._provideRenameEdits(newName, i + 1, rejects.concat(result.rejectReason), token);\n      }\n      return result;\n    });\n  }\n}\nexport function rename(registry, model, position, newName) {\n  return __awaiter(this, void 0, void 0, function* () {\n    const skeleton = new RenameSkeleton(model, position, registry);\n    const loc = yield skeleton.resolveRenameLocation(CancellationToken.None);\n    if (loc === null || loc === void 0 ? void 0 : loc.rejectReason) {\n      return {\n        edits: [],\n        rejectReason: loc.rejectReason\n      };\n    }\n    return skeleton.provideRenameEdits(newName, CancellationToken.None);\n  });\n}\n// ---  register actions and commands\nlet RenameController = RenameController_1 = class RenameController {\n  static get(editor) {\n    return editor.getContribution(RenameController_1.ID);\n  }\n  constructor(editor, _instaService, _notificationService, _bulkEditService, _progressService, _logService, _configService, _languageFeaturesService) {\n    this.editor = editor;\n    this._instaService = _instaService;\n    this._notificationService = _notificationService;\n    this._bulkEditService = _bulkEditService;\n    this._progressService = _progressService;\n    this._logService = _logService;\n    this._configService = _configService;\n    this._languageFeaturesService = _languageFeaturesService;\n    this._disposableStore = new DisposableStore();\n    this._cts = new CancellationTokenSource();\n    this._renameInputField = this._disposableStore.add(this._instaService.createInstance(RenameInputField, this.editor, ['acceptRenameInput', 'acceptRenameInputWithPreview']));\n  }\n  dispose() {\n    this._disposableStore.dispose();\n    this._cts.dispose(true);\n  }\n  run() {\n    var _a, _b;\n    return __awaiter(this, void 0, void 0, function* () {\n      // set up cancellation token to prevent reentrant rename, this\n      // is the parent to the resolve- and rename-tokens\n      this._cts.dispose(true);\n      this._cts = new CancellationTokenSource();\n      if (!this.editor.hasModel()) {\n        return undefined;\n      }\n      const position = this.editor.getPosition();\n      const skeleton = new RenameSkeleton(this.editor.getModel(), position, this._languageFeaturesService.renameProvider);\n      if (!skeleton.hasProvider()) {\n        return undefined;\n      }\n      // part 1 - resolve rename location\n      const cts1 = new EditorStateCancellationTokenSource(this.editor, 4 /* CodeEditorStateFlag.Position */ | 1 /* CodeEditorStateFlag.Value */, undefined, this._cts.token);\n      let loc;\n      try {\n        const resolveLocationOperation = skeleton.resolveRenameLocation(cts1.token);\n        this._progressService.showWhile(resolveLocationOperation, 250);\n        loc = yield resolveLocationOperation;\n      } catch (e) {\n        (_a = MessageController.get(this.editor)) === null || _a === void 0 ? void 0 : _a.showMessage(e || nls.localize('resolveRenameLocationFailed', \"An unknown error occurred while resolving rename location\"), position);\n        return undefined;\n      } finally {\n        cts1.dispose();\n      }\n      if (!loc) {\n        return undefined;\n      }\n      if (loc.rejectReason) {\n        (_b = MessageController.get(this.editor)) === null || _b === void 0 ? void 0 : _b.showMessage(loc.rejectReason, position);\n        return undefined;\n      }\n      if (cts1.token.isCancellationRequested) {\n        return undefined;\n      }\n      // part 2 - do rename at location\n      const cts2 = new EditorStateCancellationTokenSource(this.editor, 4 /* CodeEditorStateFlag.Position */ | 1 /* CodeEditorStateFlag.Value */, loc.range, this._cts.token);\n      const selection = this.editor.getSelection();\n      let selectionStart = 0;\n      let selectionEnd = loc.text.length;\n      if (!Range.isEmpty(selection) && !Range.spansMultipleLines(selection) && Range.containsRange(loc.range, selection)) {\n        selectionStart = Math.max(0, selection.startColumn - loc.range.startColumn);\n        selectionEnd = Math.min(loc.range.endColumn, selection.endColumn) - loc.range.startColumn;\n      }\n      const supportPreview = this._bulkEditService.hasPreviewHandler() && this._configService.getValue(this.editor.getModel().uri, 'editor.rename.enablePreview');\n      const inputFieldResult = yield this._renameInputField.getInput(loc.range, loc.text, selectionStart, selectionEnd, supportPreview, cts2.token);\n      // no result, only hint to focus the editor or not\n      if (typeof inputFieldResult === 'boolean') {\n        if (inputFieldResult) {\n          this.editor.focus();\n        }\n        cts2.dispose();\n        return undefined;\n      }\n      this.editor.focus();\n      const renameOperation = raceCancellation(skeleton.provideRenameEdits(inputFieldResult.newName, cts2.token), cts2.token).then(renameResult => __awaiter(this, void 0, void 0, function* () {\n        if (!renameResult || !this.editor.hasModel()) {\n          return;\n        }\n        if (renameResult.rejectReason) {\n          this._notificationService.info(renameResult.rejectReason);\n          return;\n        }\n        // collapse selection to active end\n        this.editor.setSelection(Range.fromPositions(this.editor.getSelection().getPosition()));\n        this._bulkEditService.apply(renameResult, {\n          editor: this.editor,\n          showPreview: inputFieldResult.wantsPreview,\n          label: nls.localize('label', \"Renaming '{0}' to '{1}'\", loc === null || loc === void 0 ? void 0 : loc.text, inputFieldResult.newName),\n          code: 'undoredo.rename',\n          quotableLabel: nls.localize('quotableLabel', \"Renaming {0} to {1}\", loc === null || loc === void 0 ? void 0 : loc.text, inputFieldResult.newName),\n          respectAutoSaveConfig: true\n        }).then(result => {\n          if (result.ariaSummary) {\n            alert(nls.localize('aria', \"Successfully renamed '{0}' to '{1}'. Summary: {2}\", loc.text, inputFieldResult.newName, result.ariaSummary));\n          }\n        }).catch(err => {\n          this._notificationService.error(nls.localize('rename.failedApply', \"Rename failed to apply edits\"));\n          this._logService.error(err);\n        });\n      }), err => {\n        this._notificationService.error(nls.localize('rename.failed', \"Rename failed to compute edits\"));\n        this._logService.error(err);\n      }).finally(() => {\n        cts2.dispose();\n      });\n      this._progressService.showWhile(renameOperation, 250);\n      return renameOperation;\n    });\n  }\n  acceptRenameInput(wantsPreview) {\n    this._renameInputField.acceptInput(wantsPreview);\n  }\n  cancelRenameInput() {\n    this._renameInputField.cancelInput(true);\n  }\n};\nRenameController.ID = 'editor.contrib.renameController';\nRenameController = RenameController_1 = __decorate([__param(1, IInstantiationService), __param(2, INotificationService), __param(3, IBulkEditService), __param(4, IEditorProgressService), __param(5, ILogService), __param(6, ITextResourceConfigurationService), __param(7, ILanguageFeaturesService)], RenameController);\n// ---- action implementation\nexport class RenameAction extends EditorAction {\n  constructor() {\n    super({\n      id: 'editor.action.rename',\n      label: nls.localize('rename.label', \"Rename Symbol\"),\n      alias: 'Rename Symbol',\n      precondition: ContextKeyExpr.and(EditorContextKeys.writable, EditorContextKeys.hasRenameProvider),\n      kbOpts: {\n        kbExpr: EditorContextKeys.editorTextFocus,\n        primary: 60 /* KeyCode.F2 */,\n        weight: 100 /* KeybindingWeight.EditorContrib */\n      },\n\n      contextMenuOpts: {\n        group: '1_modification',\n        order: 1.1\n      }\n    });\n  }\n  runCommand(accessor, args) {\n    const editorService = accessor.get(ICodeEditorService);\n    const [uri, pos] = Array.isArray(args) && args || [undefined, undefined];\n    if (URI.isUri(uri) && Position.isIPosition(pos)) {\n      return editorService.openCodeEditor({\n        resource: uri\n      }, editorService.getActiveCodeEditor()).then(editor => {\n        if (!editor) {\n          return;\n        }\n        editor.setPosition(pos);\n        editor.invokeWithinContext(accessor => {\n          this.reportTelemetry(accessor, editor);\n          return this.run(accessor, editor);\n        });\n      }, onUnexpectedError);\n    }\n    return super.runCommand(accessor, args);\n  }\n  run(accessor, editor) {\n    const controller = RenameController.get(editor);\n    if (controller) {\n      return controller.run();\n    }\n    return Promise.resolve();\n  }\n}\nregisterEditorContribution(RenameController.ID, RenameController, 4 /* EditorContributionInstantiation.Lazy */);\nregisterEditorAction(RenameAction);\nconst RenameCommand = EditorCommand.bindToContribution(RenameController.get);\nregisterEditorCommand(new RenameCommand({\n  id: 'acceptRenameInput',\n  precondition: CONTEXT_RENAME_INPUT_VISIBLE,\n  handler: x => x.acceptRenameInput(false),\n  kbOpts: {\n    weight: 100 /* KeybindingWeight.EditorContrib */ + 99,\n    kbExpr: ContextKeyExpr.and(EditorContextKeys.focus, ContextKeyExpr.not('isComposing')),\n    primary: 3 /* KeyCode.Enter */\n  }\n}));\n\nregisterEditorCommand(new RenameCommand({\n  id: 'acceptRenameInputWithPreview',\n  precondition: ContextKeyExpr.and(CONTEXT_RENAME_INPUT_VISIBLE, ContextKeyExpr.has('config.editor.rename.enablePreview')),\n  handler: x => x.acceptRenameInput(true),\n  kbOpts: {\n    weight: 100 /* KeybindingWeight.EditorContrib */ + 99,\n    kbExpr: ContextKeyExpr.and(EditorContextKeys.focus, ContextKeyExpr.not('isComposing')),\n    primary: 1024 /* KeyMod.Shift */ + 3 /* KeyCode.Enter */\n  }\n}));\n\nregisterEditorCommand(new RenameCommand({\n  id: 'cancelRenameInput',\n  precondition: CONTEXT_RENAME_INPUT_VISIBLE,\n  handler: x => x.cancelRenameInput(),\n  kbOpts: {\n    weight: 100 /* KeybindingWeight.EditorContrib */ + 99,\n    kbExpr: EditorContextKeys.focus,\n    primary: 9 /* KeyCode.Escape */,\n    secondary: [1024 /* KeyMod.Shift */ | 9 /* KeyCode.Escape */]\n  }\n}));\n// ---- api bridge command\nregisterModelAndPositionCommand('_executeDocumentRenameProvider', function (accessor, model, position, ...args) {\n  const [newName] = args;\n  assertType(typeof newName === 'string');\n  const {\n    renameProvider\n  } = accessor.get(ILanguageFeaturesService);\n  return rename(renameProvider, model, position, newName);\n});\nregisterModelAndPositionCommand('_executePrepareRename', function (accessor, model, position) {\n  return __awaiter(this, void 0, void 0, function* () {\n    const {\n      renameProvider\n    } = accessor.get(ILanguageFeaturesService);\n    const skeleton = new RenameSkeleton(model, position, renameProvider);\n    const loc = yield skeleton.resolveRenameLocation(CancellationToken.None);\n    if (loc === null || loc === void 0 ? void 0 : loc.rejectReason) {\n      throw new Error(loc.rejectReason);\n    }\n    return loc;\n  });\n});\n//todo@jrieken use editor options world\nRegistry.as(Extensions.Configuration).registerConfiguration({\n  id: 'editor',\n  properties: {\n    'editor.rename.enablePreview': {\n      scope: 5 /* ConfigurationScope.LANGUAGE_OVERRIDABLE */,\n      description: nls.localize('enablePreview', \"Enable/disable the ability to preview changes before renaming\"),\n      default: true,\n      type: 'boolean'\n    }\n  }\n});","map":{"version":3,"names":["__decorate","decorators","target","key","desc","c","arguments","length","r","Object","getOwnPropertyDescriptor","d","Reflect","decorate","i","defineProperty","__param","paramIndex","decorator","__awaiter","thisArg","_arguments","P","generator","adopt","value","resolve","Promise","reject","fulfilled","step","next","e","rejected","result","done","then","apply","RenameController_1","alert","raceCancellation","CancellationToken","CancellationTokenSource","onUnexpectedError","DisposableStore","assertType","URI","EditorStateCancellationTokenSource","EditorAction","EditorCommand","registerEditorAction","registerEditorCommand","registerEditorContribution","registerModelAndPositionCommand","IBulkEditService","ICodeEditorService","Position","Range","EditorContextKeys","ITextResourceConfigurationService","MessageController","nls","Extensions","ContextKeyExpr","IInstantiationService","ILogService","INotificationService","IEditorProgressService","Registry","CONTEXT_RENAME_INPUT_VISIBLE","RenameInputField","ILanguageFeaturesService","RenameSkeleton","constructor","model","position","registry","_providerRenameIdx","_providers","ordered","hasProvider","resolveRenameLocation","token","rejects","provider","res","rejectReason","push","word","getWordAtPosition","range","fromPositions","text","join","undefined","lineNumber","startColumn","endColumn","provideRenameEdits","newName","_provideRenameEdits","edits","concat","localize","rename","skeleton","loc","None","RenameController","get","editor","getContribution","ID","_instaService","_notificationService","_bulkEditService","_progressService","_logService","_configService","_languageFeaturesService","_disposableStore","_cts","_renameInputField","add","createInstance","dispose","run","_a","_b","hasModel","getPosition","getModel","renameProvider","cts1","resolveLocationOperation","showWhile","showMessage","isCancellationRequested","cts2","selection","getSelection","selectionStart","selectionEnd","isEmpty","spansMultipleLines","containsRange","Math","max","min","supportPreview","hasPreviewHandler","getValue","uri","inputFieldResult","getInput","focus","renameOperation","renameResult","info","setSelection","showPreview","wantsPreview","label","code","quotableLabel","respectAutoSaveConfig","ariaSummary","catch","err","error","finally","acceptRenameInput","acceptInput","cancelRenameInput","cancelInput","RenameAction","id","alias","precondition","and","writable","hasRenameProvider","kbOpts","kbExpr","editorTextFocus","primary","weight","contextMenuOpts","group","order","runCommand","accessor","args","editorService","pos","Array","isArray","isUri","isIPosition","openCodeEditor","resource","getActiveCodeEditor","setPosition","invokeWithinContext","reportTelemetry","controller","RenameCommand","bindToContribution","handler","x","not","has","secondary","Error","as","Configuration","registerConfiguration","properties","scope","description","default","type"],"sources":["/home/chlohest/work/website/my_web/node_modules/monaco-editor/esm/vs/editor/contrib/rename/browser/rename.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar RenameController_1;\nimport { alert } from '../../../../base/browser/ui/aria/aria.js';\nimport { raceCancellation } from '../../../../base/common/async.js';\nimport { CancellationToken, CancellationTokenSource } from '../../../../base/common/cancellation.js';\nimport { onUnexpectedError } from '../../../../base/common/errors.js';\nimport { DisposableStore } from '../../../../base/common/lifecycle.js';\nimport { assertType } from '../../../../base/common/types.js';\nimport { URI } from '../../../../base/common/uri.js';\nimport { EditorStateCancellationTokenSource } from '../../editorState/browser/editorState.js';\nimport { EditorAction, EditorCommand, registerEditorAction, registerEditorCommand, registerEditorContribution, registerModelAndPositionCommand } from '../../../browser/editorExtensions.js';\nimport { IBulkEditService } from '../../../browser/services/bulkEditService.js';\nimport { ICodeEditorService } from '../../../browser/services/codeEditorService.js';\nimport { Position } from '../../../common/core/position.js';\nimport { Range } from '../../../common/core/range.js';\nimport { EditorContextKeys } from '../../../common/editorContextKeys.js';\nimport { ITextResourceConfigurationService } from '../../../common/services/textResourceConfiguration.js';\nimport { MessageController } from '../../message/browser/messageController.js';\nimport * as nls from '../../../../nls.js';\nimport { Extensions } from '../../../../platform/configuration/common/configurationRegistry.js';\nimport { ContextKeyExpr } from '../../../../platform/contextkey/common/contextkey.js';\nimport { IInstantiationService } from '../../../../platform/instantiation/common/instantiation.js';\nimport { ILogService } from '../../../../platform/log/common/log.js';\nimport { INotificationService } from '../../../../platform/notification/common/notification.js';\nimport { IEditorProgressService } from '../../../../platform/progress/common/progress.js';\nimport { Registry } from '../../../../platform/registry/common/platform.js';\nimport { CONTEXT_RENAME_INPUT_VISIBLE, RenameInputField } from './renameInputField.js';\nimport { ILanguageFeaturesService } from '../../../common/services/languageFeatures.js';\nclass RenameSkeleton {\n    constructor(model, position, registry) {\n        this.model = model;\n        this.position = position;\n        this._providerRenameIdx = 0;\n        this._providers = registry.ordered(model);\n    }\n    hasProvider() {\n        return this._providers.length > 0;\n    }\n    resolveRenameLocation(token) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const rejects = [];\n            for (this._providerRenameIdx = 0; this._providerRenameIdx < this._providers.length; this._providerRenameIdx++) {\n                const provider = this._providers[this._providerRenameIdx];\n                if (!provider.resolveRenameLocation) {\n                    break;\n                }\n                const res = yield provider.resolveRenameLocation(this.model, this.position, token);\n                if (!res) {\n                    continue;\n                }\n                if (res.rejectReason) {\n                    rejects.push(res.rejectReason);\n                    continue;\n                }\n                return res;\n            }\n            const word = this.model.getWordAtPosition(this.position);\n            if (!word) {\n                return {\n                    range: Range.fromPositions(this.position),\n                    text: '',\n                    rejectReason: rejects.length > 0 ? rejects.join('\\n') : undefined\n                };\n            }\n            return {\n                range: new Range(this.position.lineNumber, word.startColumn, this.position.lineNumber, word.endColumn),\n                text: word.word,\n                rejectReason: rejects.length > 0 ? rejects.join('\\n') : undefined\n            };\n        });\n    }\n    provideRenameEdits(newName, token) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this._provideRenameEdits(newName, this._providerRenameIdx, [], token);\n        });\n    }\n    _provideRenameEdits(newName, i, rejects, token) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const provider = this._providers[i];\n            if (!provider) {\n                return {\n                    edits: [],\n                    rejectReason: rejects.join('\\n')\n                };\n            }\n            const result = yield provider.provideRenameEdits(this.model, this.position, newName, token);\n            if (!result) {\n                return this._provideRenameEdits(newName, i + 1, rejects.concat(nls.localize('no result', \"No result.\")), token);\n            }\n            else if (result.rejectReason) {\n                return this._provideRenameEdits(newName, i + 1, rejects.concat(result.rejectReason), token);\n            }\n            return result;\n        });\n    }\n}\nexport function rename(registry, model, position, newName) {\n    return __awaiter(this, void 0, void 0, function* () {\n        const skeleton = new RenameSkeleton(model, position, registry);\n        const loc = yield skeleton.resolveRenameLocation(CancellationToken.None);\n        if (loc === null || loc === void 0 ? void 0 : loc.rejectReason) {\n            return { edits: [], rejectReason: loc.rejectReason };\n        }\n        return skeleton.provideRenameEdits(newName, CancellationToken.None);\n    });\n}\n// ---  register actions and commands\nlet RenameController = RenameController_1 = class RenameController {\n    static get(editor) {\n        return editor.getContribution(RenameController_1.ID);\n    }\n    constructor(editor, _instaService, _notificationService, _bulkEditService, _progressService, _logService, _configService, _languageFeaturesService) {\n        this.editor = editor;\n        this._instaService = _instaService;\n        this._notificationService = _notificationService;\n        this._bulkEditService = _bulkEditService;\n        this._progressService = _progressService;\n        this._logService = _logService;\n        this._configService = _configService;\n        this._languageFeaturesService = _languageFeaturesService;\n        this._disposableStore = new DisposableStore();\n        this._cts = new CancellationTokenSource();\n        this._renameInputField = this._disposableStore.add(this._instaService.createInstance(RenameInputField, this.editor, ['acceptRenameInput', 'acceptRenameInputWithPreview']));\n    }\n    dispose() {\n        this._disposableStore.dispose();\n        this._cts.dispose(true);\n    }\n    run() {\n        var _a, _b;\n        return __awaiter(this, void 0, void 0, function* () {\n            // set up cancellation token to prevent reentrant rename, this\n            // is the parent to the resolve- and rename-tokens\n            this._cts.dispose(true);\n            this._cts = new CancellationTokenSource();\n            if (!this.editor.hasModel()) {\n                return undefined;\n            }\n            const position = this.editor.getPosition();\n            const skeleton = new RenameSkeleton(this.editor.getModel(), position, this._languageFeaturesService.renameProvider);\n            if (!skeleton.hasProvider()) {\n                return undefined;\n            }\n            // part 1 - resolve rename location\n            const cts1 = new EditorStateCancellationTokenSource(this.editor, 4 /* CodeEditorStateFlag.Position */ | 1 /* CodeEditorStateFlag.Value */, undefined, this._cts.token);\n            let loc;\n            try {\n                const resolveLocationOperation = skeleton.resolveRenameLocation(cts1.token);\n                this._progressService.showWhile(resolveLocationOperation, 250);\n                loc = yield resolveLocationOperation;\n            }\n            catch (e) {\n                (_a = MessageController.get(this.editor)) === null || _a === void 0 ? void 0 : _a.showMessage(e || nls.localize('resolveRenameLocationFailed', \"An unknown error occurred while resolving rename location\"), position);\n                return undefined;\n            }\n            finally {\n                cts1.dispose();\n            }\n            if (!loc) {\n                return undefined;\n            }\n            if (loc.rejectReason) {\n                (_b = MessageController.get(this.editor)) === null || _b === void 0 ? void 0 : _b.showMessage(loc.rejectReason, position);\n                return undefined;\n            }\n            if (cts1.token.isCancellationRequested) {\n                return undefined;\n            }\n            // part 2 - do rename at location\n            const cts2 = new EditorStateCancellationTokenSource(this.editor, 4 /* CodeEditorStateFlag.Position */ | 1 /* CodeEditorStateFlag.Value */, loc.range, this._cts.token);\n            const selection = this.editor.getSelection();\n            let selectionStart = 0;\n            let selectionEnd = loc.text.length;\n            if (!Range.isEmpty(selection) && !Range.spansMultipleLines(selection) && Range.containsRange(loc.range, selection)) {\n                selectionStart = Math.max(0, selection.startColumn - loc.range.startColumn);\n                selectionEnd = Math.min(loc.range.endColumn, selection.endColumn) - loc.range.startColumn;\n            }\n            const supportPreview = this._bulkEditService.hasPreviewHandler() && this._configService.getValue(this.editor.getModel().uri, 'editor.rename.enablePreview');\n            const inputFieldResult = yield this._renameInputField.getInput(loc.range, loc.text, selectionStart, selectionEnd, supportPreview, cts2.token);\n            // no result, only hint to focus the editor or not\n            if (typeof inputFieldResult === 'boolean') {\n                if (inputFieldResult) {\n                    this.editor.focus();\n                }\n                cts2.dispose();\n                return undefined;\n            }\n            this.editor.focus();\n            const renameOperation = raceCancellation(skeleton.provideRenameEdits(inputFieldResult.newName, cts2.token), cts2.token).then((renameResult) => __awaiter(this, void 0, void 0, function* () {\n                if (!renameResult || !this.editor.hasModel()) {\n                    return;\n                }\n                if (renameResult.rejectReason) {\n                    this._notificationService.info(renameResult.rejectReason);\n                    return;\n                }\n                // collapse selection to active end\n                this.editor.setSelection(Range.fromPositions(this.editor.getSelection().getPosition()));\n                this._bulkEditService.apply(renameResult, {\n                    editor: this.editor,\n                    showPreview: inputFieldResult.wantsPreview,\n                    label: nls.localize('label', \"Renaming '{0}' to '{1}'\", loc === null || loc === void 0 ? void 0 : loc.text, inputFieldResult.newName),\n                    code: 'undoredo.rename',\n                    quotableLabel: nls.localize('quotableLabel', \"Renaming {0} to {1}\", loc === null || loc === void 0 ? void 0 : loc.text, inputFieldResult.newName),\n                    respectAutoSaveConfig: true\n                }).then(result => {\n                    if (result.ariaSummary) {\n                        alert(nls.localize('aria', \"Successfully renamed '{0}' to '{1}'. Summary: {2}\", loc.text, inputFieldResult.newName, result.ariaSummary));\n                    }\n                }).catch(err => {\n                    this._notificationService.error(nls.localize('rename.failedApply', \"Rename failed to apply edits\"));\n                    this._logService.error(err);\n                });\n            }), err => {\n                this._notificationService.error(nls.localize('rename.failed', \"Rename failed to compute edits\"));\n                this._logService.error(err);\n            }).finally(() => {\n                cts2.dispose();\n            });\n            this._progressService.showWhile(renameOperation, 250);\n            return renameOperation;\n        });\n    }\n    acceptRenameInput(wantsPreview) {\n        this._renameInputField.acceptInput(wantsPreview);\n    }\n    cancelRenameInput() {\n        this._renameInputField.cancelInput(true);\n    }\n};\nRenameController.ID = 'editor.contrib.renameController';\nRenameController = RenameController_1 = __decorate([\n    __param(1, IInstantiationService),\n    __param(2, INotificationService),\n    __param(3, IBulkEditService),\n    __param(4, IEditorProgressService),\n    __param(5, ILogService),\n    __param(6, ITextResourceConfigurationService),\n    __param(7, ILanguageFeaturesService)\n], RenameController);\n// ---- action implementation\nexport class RenameAction extends EditorAction {\n    constructor() {\n        super({\n            id: 'editor.action.rename',\n            label: nls.localize('rename.label', \"Rename Symbol\"),\n            alias: 'Rename Symbol',\n            precondition: ContextKeyExpr.and(EditorContextKeys.writable, EditorContextKeys.hasRenameProvider),\n            kbOpts: {\n                kbExpr: EditorContextKeys.editorTextFocus,\n                primary: 60 /* KeyCode.F2 */,\n                weight: 100 /* KeybindingWeight.EditorContrib */\n            },\n            contextMenuOpts: {\n                group: '1_modification',\n                order: 1.1\n            }\n        });\n    }\n    runCommand(accessor, args) {\n        const editorService = accessor.get(ICodeEditorService);\n        const [uri, pos] = Array.isArray(args) && args || [undefined, undefined];\n        if (URI.isUri(uri) && Position.isIPosition(pos)) {\n            return editorService.openCodeEditor({ resource: uri }, editorService.getActiveCodeEditor()).then(editor => {\n                if (!editor) {\n                    return;\n                }\n                editor.setPosition(pos);\n                editor.invokeWithinContext(accessor => {\n                    this.reportTelemetry(accessor, editor);\n                    return this.run(accessor, editor);\n                });\n            }, onUnexpectedError);\n        }\n        return super.runCommand(accessor, args);\n    }\n    run(accessor, editor) {\n        const controller = RenameController.get(editor);\n        if (controller) {\n            return controller.run();\n        }\n        return Promise.resolve();\n    }\n}\nregisterEditorContribution(RenameController.ID, RenameController, 4 /* EditorContributionInstantiation.Lazy */);\nregisterEditorAction(RenameAction);\nconst RenameCommand = EditorCommand.bindToContribution(RenameController.get);\nregisterEditorCommand(new RenameCommand({\n    id: 'acceptRenameInput',\n    precondition: CONTEXT_RENAME_INPUT_VISIBLE,\n    handler: x => x.acceptRenameInput(false),\n    kbOpts: {\n        weight: 100 /* KeybindingWeight.EditorContrib */ + 99,\n        kbExpr: ContextKeyExpr.and(EditorContextKeys.focus, ContextKeyExpr.not('isComposing')),\n        primary: 3 /* KeyCode.Enter */\n    }\n}));\nregisterEditorCommand(new RenameCommand({\n    id: 'acceptRenameInputWithPreview',\n    precondition: ContextKeyExpr.and(CONTEXT_RENAME_INPUT_VISIBLE, ContextKeyExpr.has('config.editor.rename.enablePreview')),\n    handler: x => x.acceptRenameInput(true),\n    kbOpts: {\n        weight: 100 /* KeybindingWeight.EditorContrib */ + 99,\n        kbExpr: ContextKeyExpr.and(EditorContextKeys.focus, ContextKeyExpr.not('isComposing')),\n        primary: 1024 /* KeyMod.Shift */ + 3 /* KeyCode.Enter */\n    }\n}));\nregisterEditorCommand(new RenameCommand({\n    id: 'cancelRenameInput',\n    precondition: CONTEXT_RENAME_INPUT_VISIBLE,\n    handler: x => x.cancelRenameInput(),\n    kbOpts: {\n        weight: 100 /* KeybindingWeight.EditorContrib */ + 99,\n        kbExpr: EditorContextKeys.focus,\n        primary: 9 /* KeyCode.Escape */,\n        secondary: [1024 /* KeyMod.Shift */ | 9 /* KeyCode.Escape */]\n    }\n}));\n// ---- api bridge command\nregisterModelAndPositionCommand('_executeDocumentRenameProvider', function (accessor, model, position, ...args) {\n    const [newName] = args;\n    assertType(typeof newName === 'string');\n    const { renameProvider } = accessor.get(ILanguageFeaturesService);\n    return rename(renameProvider, model, position, newName);\n});\nregisterModelAndPositionCommand('_executePrepareRename', function (accessor, model, position) {\n    return __awaiter(this, void 0, void 0, function* () {\n        const { renameProvider } = accessor.get(ILanguageFeaturesService);\n        const skeleton = new RenameSkeleton(model, position, renameProvider);\n        const loc = yield skeleton.resolveRenameLocation(CancellationToken.None);\n        if (loc === null || loc === void 0 ? void 0 : loc.rejectReason) {\n            throw new Error(loc.rejectReason);\n        }\n        return loc;\n    });\n});\n//todo@jrieken use editor options world\nRegistry.as(Extensions.Configuration).registerConfiguration({\n    id: 'editor',\n    properties: {\n        'editor.rename.enablePreview': {\n            scope: 5 /* ConfigurationScope.LANGUAGE_OVERRIDABLE */,\n            description: nls.localize('enablePreview', \"Enable/disable the ability to preview changes before renaming\"),\n            default: true,\n            type: 'boolean'\n        }\n    }\n});\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}