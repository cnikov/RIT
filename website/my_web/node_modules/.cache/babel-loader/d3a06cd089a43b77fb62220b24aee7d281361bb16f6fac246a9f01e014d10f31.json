{"ast":null,"code":"/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\nimport { createTrustedTypesPolicy } from '../../../base/browser/trustedTypes.js';\nimport * as strings from '../../../base/common/strings.js';\nimport { TokenizationRegistry } from '../../common/languages.js';\nimport { LineTokens } from '../../common/tokens/lineTokens.js';\nimport { RenderLineInput, renderViewLine2 as renderViewLine } from '../../common/viewLayout/viewLineRenderer.js';\nimport { ViewLineRenderingData } from '../../common/viewModel.js';\nimport { MonarchTokenizer } from '../common/monarch/monarchLexer.js';\nconst ttPolicy = createTrustedTypesPolicy('standaloneColorizer', {\n  createHTML: value => value\n});\nexport class Colorizer {\n  static colorizeElement(themeService, languageService, domNode, options) {\n    options = options || {};\n    const theme = options.theme || 'vs';\n    const mimeType = options.mimeType || domNode.getAttribute('lang') || domNode.getAttribute('data-lang');\n    if (!mimeType) {\n      console.error('Mode not detected');\n      return Promise.resolve();\n    }\n    const languageId = languageService.getLanguageIdByMimeType(mimeType) || mimeType;\n    themeService.setTheme(theme);\n    const text = domNode.firstChild ? domNode.firstChild.nodeValue : '';\n    domNode.className += ' ' + theme;\n    const render = str => {\n      var _a;\n      const trustedhtml = (_a = ttPolicy === null || ttPolicy === void 0 ? void 0 : ttPolicy.createHTML(str)) !== null && _a !== void 0 ? _a : str;\n      domNode.innerHTML = trustedhtml;\n    };\n    return this.colorize(languageService, text || '', languageId, options).then(render, err => console.error(err));\n  }\n  static colorize(languageService, text, languageId, options) {\n    return __awaiter(this, void 0, void 0, function* () {\n      const languageIdCodec = languageService.languageIdCodec;\n      let tabSize = 4;\n      if (options && typeof options.tabSize === 'number') {\n        tabSize = options.tabSize;\n      }\n      if (strings.startsWithUTF8BOM(text)) {\n        text = text.substr(1);\n      }\n      const lines = strings.splitLines(text);\n      if (!languageService.isRegisteredLanguageId(languageId)) {\n        return _fakeColorize(lines, tabSize, languageIdCodec);\n      }\n      const tokenizationSupport = yield TokenizationRegistry.getOrCreate(languageId);\n      if (tokenizationSupport) {\n        return _colorize(lines, tabSize, tokenizationSupport, languageIdCodec);\n      }\n      return _fakeColorize(lines, tabSize, languageIdCodec);\n    });\n  }\n  static colorizeLine(line, mightContainNonBasicASCII, mightContainRTL, tokens, tabSize = 4) {\n    const isBasicASCII = ViewLineRenderingData.isBasicASCII(line, mightContainNonBasicASCII);\n    const containsRTL = ViewLineRenderingData.containsRTL(line, isBasicASCII, mightContainRTL);\n    const renderResult = renderViewLine(new RenderLineInput(false, true, line, false, isBasicASCII, containsRTL, 0, tokens, [], tabSize, 0, 0, 0, 0, -1, 'none', false, false, null));\n    return renderResult.html;\n  }\n  static colorizeModelLine(model, lineNumber, tabSize = 4) {\n    const content = model.getLineContent(lineNumber);\n    model.tokenization.forceTokenization(lineNumber);\n    const tokens = model.tokenization.getLineTokens(lineNumber);\n    const inflatedTokens = tokens.inflate();\n    return this.colorizeLine(content, model.mightContainNonBasicASCII(), model.mightContainRTL(), inflatedTokens, tabSize);\n  }\n}\nfunction _colorize(lines, tabSize, tokenizationSupport, languageIdCodec) {\n  return new Promise((c, e) => {\n    const execute = () => {\n      const result = _actualColorize(lines, tabSize, tokenizationSupport, languageIdCodec);\n      if (tokenizationSupport instanceof MonarchTokenizer) {\n        const status = tokenizationSupport.getLoadStatus();\n        if (status.loaded === false) {\n          status.promise.then(execute, e);\n          return;\n        }\n      }\n      c(result);\n    };\n    execute();\n  });\n}\nfunction _fakeColorize(lines, tabSize, languageIdCodec) {\n  let html = [];\n  const defaultMetadata = (0 /* FontStyle.None */ << 11 /* MetadataConsts.FONT_STYLE_OFFSET */ | 1 /* ColorId.DefaultForeground */ << 15 /* MetadataConsts.FOREGROUND_OFFSET */ | 2 /* ColorId.DefaultBackground */ << 24 /* MetadataConsts.BACKGROUND_OFFSET */) >>> 0;\n  const tokens = new Uint32Array(2);\n  tokens[0] = 0;\n  tokens[1] = defaultMetadata;\n  for (let i = 0, length = lines.length; i < length; i++) {\n    const line = lines[i];\n    tokens[0] = line.length;\n    const lineTokens = new LineTokens(tokens, line, languageIdCodec);\n    const isBasicASCII = ViewLineRenderingData.isBasicASCII(line, /* check for basic ASCII */true);\n    const containsRTL = ViewLineRenderingData.containsRTL(line, isBasicASCII, /* check for RTL */true);\n    const renderResult = renderViewLine(new RenderLineInput(false, true, line, false, isBasicASCII, containsRTL, 0, lineTokens, [], tabSize, 0, 0, 0, 0, -1, 'none', false, false, null));\n    html = html.concat(renderResult.html);\n    html.push('<br/>');\n  }\n  return html.join('');\n}\nfunction _actualColorize(lines, tabSize, tokenizationSupport, languageIdCodec) {\n  let html = [];\n  let state = tokenizationSupport.getInitialState();\n  for (let i = 0, length = lines.length; i < length; i++) {\n    const line = lines[i];\n    const tokenizeResult = tokenizationSupport.tokenizeEncoded(line, true, state);\n    LineTokens.convertToEndOffset(tokenizeResult.tokens, line.length);\n    const lineTokens = new LineTokens(tokenizeResult.tokens, line, languageIdCodec);\n    const isBasicASCII = ViewLineRenderingData.isBasicASCII(line, /* check for basic ASCII */true);\n    const containsRTL = ViewLineRenderingData.containsRTL(line, isBasicASCII, /* check for RTL */true);\n    const renderResult = renderViewLine(new RenderLineInput(false, true, line, false, isBasicASCII, containsRTL, 0, lineTokens.inflate(), [], tabSize, 0, 0, 0, 0, -1, 'none', false, false, null));\n    html = html.concat(renderResult.html);\n    html.push('<br/>');\n    state = tokenizeResult.endState;\n  }\n  return html.join('');\n}","map":{"version":3,"names":["__awaiter","thisArg","_arguments","P","generator","adopt","value","resolve","Promise","reject","fulfilled","step","next","e","rejected","result","done","then","apply","createTrustedTypesPolicy","strings","TokenizationRegistry","LineTokens","RenderLineInput","renderViewLine2","renderViewLine","ViewLineRenderingData","MonarchTokenizer","ttPolicy","createHTML","Colorizer","colorizeElement","themeService","languageService","domNode","options","theme","mimeType","getAttribute","console","error","languageId","getLanguageIdByMimeType","setTheme","text","firstChild","nodeValue","className","render","str","_a","trustedhtml","innerHTML","colorize","err","languageIdCodec","tabSize","startsWithUTF8BOM","substr","lines","splitLines","isRegisteredLanguageId","_fakeColorize","tokenizationSupport","getOrCreate","_colorize","colorizeLine","line","mightContainNonBasicASCII","mightContainRTL","tokens","isBasicASCII","containsRTL","renderResult","html","colorizeModelLine","model","lineNumber","content","getLineContent","tokenization","forceTokenization","getLineTokens","inflatedTokens","inflate","c","execute","_actualColorize","status","getLoadStatus","loaded","promise","defaultMetadata","Uint32Array","i","length","lineTokens","concat","push","join","state","getInitialState","tokenizeResult","tokenizeEncoded","convertToEndOffset","endState"],"sources":["/home/chlohest/work/website/my_web/node_modules/monaco-editor/esm/vs/editor/standalone/browser/colorizer.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { createTrustedTypesPolicy } from '../../../base/browser/trustedTypes.js';\nimport * as strings from '../../../base/common/strings.js';\nimport { TokenizationRegistry } from '../../common/languages.js';\nimport { LineTokens } from '../../common/tokens/lineTokens.js';\nimport { RenderLineInput, renderViewLine2 as renderViewLine } from '../../common/viewLayout/viewLineRenderer.js';\nimport { ViewLineRenderingData } from '../../common/viewModel.js';\nimport { MonarchTokenizer } from '../common/monarch/monarchLexer.js';\nconst ttPolicy = createTrustedTypesPolicy('standaloneColorizer', { createHTML: value => value });\nexport class Colorizer {\n    static colorizeElement(themeService, languageService, domNode, options) {\n        options = options || {};\n        const theme = options.theme || 'vs';\n        const mimeType = options.mimeType || domNode.getAttribute('lang') || domNode.getAttribute('data-lang');\n        if (!mimeType) {\n            console.error('Mode not detected');\n            return Promise.resolve();\n        }\n        const languageId = languageService.getLanguageIdByMimeType(mimeType) || mimeType;\n        themeService.setTheme(theme);\n        const text = domNode.firstChild ? domNode.firstChild.nodeValue : '';\n        domNode.className += ' ' + theme;\n        const render = (str) => {\n            var _a;\n            const trustedhtml = (_a = ttPolicy === null || ttPolicy === void 0 ? void 0 : ttPolicy.createHTML(str)) !== null && _a !== void 0 ? _a : str;\n            domNode.innerHTML = trustedhtml;\n        };\n        return this.colorize(languageService, text || '', languageId, options).then(render, (err) => console.error(err));\n    }\n    static colorize(languageService, text, languageId, options) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const languageIdCodec = languageService.languageIdCodec;\n            let tabSize = 4;\n            if (options && typeof options.tabSize === 'number') {\n                tabSize = options.tabSize;\n            }\n            if (strings.startsWithUTF8BOM(text)) {\n                text = text.substr(1);\n            }\n            const lines = strings.splitLines(text);\n            if (!languageService.isRegisteredLanguageId(languageId)) {\n                return _fakeColorize(lines, tabSize, languageIdCodec);\n            }\n            const tokenizationSupport = yield TokenizationRegistry.getOrCreate(languageId);\n            if (tokenizationSupport) {\n                return _colorize(lines, tabSize, tokenizationSupport, languageIdCodec);\n            }\n            return _fakeColorize(lines, tabSize, languageIdCodec);\n        });\n    }\n    static colorizeLine(line, mightContainNonBasicASCII, mightContainRTL, tokens, tabSize = 4) {\n        const isBasicASCII = ViewLineRenderingData.isBasicASCII(line, mightContainNonBasicASCII);\n        const containsRTL = ViewLineRenderingData.containsRTL(line, isBasicASCII, mightContainRTL);\n        const renderResult = renderViewLine(new RenderLineInput(false, true, line, false, isBasicASCII, containsRTL, 0, tokens, [], tabSize, 0, 0, 0, 0, -1, 'none', false, false, null));\n        return renderResult.html;\n    }\n    static colorizeModelLine(model, lineNumber, tabSize = 4) {\n        const content = model.getLineContent(lineNumber);\n        model.tokenization.forceTokenization(lineNumber);\n        const tokens = model.tokenization.getLineTokens(lineNumber);\n        const inflatedTokens = tokens.inflate();\n        return this.colorizeLine(content, model.mightContainNonBasicASCII(), model.mightContainRTL(), inflatedTokens, tabSize);\n    }\n}\nfunction _colorize(lines, tabSize, tokenizationSupport, languageIdCodec) {\n    return new Promise((c, e) => {\n        const execute = () => {\n            const result = _actualColorize(lines, tabSize, tokenizationSupport, languageIdCodec);\n            if (tokenizationSupport instanceof MonarchTokenizer) {\n                const status = tokenizationSupport.getLoadStatus();\n                if (status.loaded === false) {\n                    status.promise.then(execute, e);\n                    return;\n                }\n            }\n            c(result);\n        };\n        execute();\n    });\n}\nfunction _fakeColorize(lines, tabSize, languageIdCodec) {\n    let html = [];\n    const defaultMetadata = ((0 /* FontStyle.None */ << 11 /* MetadataConsts.FONT_STYLE_OFFSET */)\n        | (1 /* ColorId.DefaultForeground */ << 15 /* MetadataConsts.FOREGROUND_OFFSET */)\n        | (2 /* ColorId.DefaultBackground */ << 24 /* MetadataConsts.BACKGROUND_OFFSET */)) >>> 0;\n    const tokens = new Uint32Array(2);\n    tokens[0] = 0;\n    tokens[1] = defaultMetadata;\n    for (let i = 0, length = lines.length; i < length; i++) {\n        const line = lines[i];\n        tokens[0] = line.length;\n        const lineTokens = new LineTokens(tokens, line, languageIdCodec);\n        const isBasicASCII = ViewLineRenderingData.isBasicASCII(line, /* check for basic ASCII */ true);\n        const containsRTL = ViewLineRenderingData.containsRTL(line, isBasicASCII, /* check for RTL */ true);\n        const renderResult = renderViewLine(new RenderLineInput(false, true, line, false, isBasicASCII, containsRTL, 0, lineTokens, [], tabSize, 0, 0, 0, 0, -1, 'none', false, false, null));\n        html = html.concat(renderResult.html);\n        html.push('<br/>');\n    }\n    return html.join('');\n}\nfunction _actualColorize(lines, tabSize, tokenizationSupport, languageIdCodec) {\n    let html = [];\n    let state = tokenizationSupport.getInitialState();\n    for (let i = 0, length = lines.length; i < length; i++) {\n        const line = lines[i];\n        const tokenizeResult = tokenizationSupport.tokenizeEncoded(line, true, state);\n        LineTokens.convertToEndOffset(tokenizeResult.tokens, line.length);\n        const lineTokens = new LineTokens(tokenizeResult.tokens, line, languageIdCodec);\n        const isBasicASCII = ViewLineRenderingData.isBasicASCII(line, /* check for basic ASCII */ true);\n        const containsRTL = ViewLineRenderingData.containsRTL(line, isBasicASCII, /* check for RTL */ true);\n        const renderResult = renderViewLine(new RenderLineInput(false, true, line, false, isBasicASCII, containsRTL, 0, lineTokens.inflate(), [], tabSize, 0, 0, 0, 0, -1, 'none', false, false, null));\n        html = html.concat(renderResult.html);\n        html.push('<br/>');\n        state = tokenizeResult.endState;\n    }\n    return html.join('');\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}