{"ast":null,"code":"/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { env } from './process.js';\nexport function isHotReloadEnabled() {\n  return !!env['VSCODE_DEV'];\n}\nexport function registerHotReloadHandler(handler) {\n  if (!isHotReloadEnabled()) {\n    return {\n      dispose() {}\n    };\n  } else {\n    const handlers = registerGlobalHotReloadHandler();\n    handlers.add(handler);\n    return {\n      dispose() {\n        handlers.delete(handler);\n      }\n    };\n  }\n}\nfunction registerGlobalHotReloadHandler() {\n  if (!hotReloadHandlers) {\n    hotReloadHandlers = new Set();\n  }\n  const g = globalThis;\n  if (!g.$hotReload_applyNewExports) {\n    g.$hotReload_applyNewExports = oldExports => {\n      for (const h of hotReloadHandlers) {\n        const result = h(oldExports);\n        if (result) {\n          return result;\n        }\n      }\n      return undefined;\n    };\n  }\n  return hotReloadHandlers;\n}\nlet hotReloadHandlers = undefined;","map":{"version":3,"names":["env","isHotReloadEnabled","registerHotReloadHandler","handler","dispose","handlers","registerGlobalHotReloadHandler","add","delete","hotReloadHandlers","Set","g","globalThis","$hotReload_applyNewExports","oldExports","h","result","undefined"],"sources":["/home/chlohest/work/website/my_web/node_modules/monaco-editor/esm/vs/base/common/hotReload.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { env } from './process.js';\nexport function isHotReloadEnabled() {\n    return !!env['VSCODE_DEV'];\n}\nexport function registerHotReloadHandler(handler) {\n    if (!isHotReloadEnabled()) {\n        return { dispose() { } };\n    }\n    else {\n        const handlers = registerGlobalHotReloadHandler();\n        handlers.add(handler);\n        return {\n            dispose() { handlers.delete(handler); }\n        };\n    }\n}\nfunction registerGlobalHotReloadHandler() {\n    if (!hotReloadHandlers) {\n        hotReloadHandlers = new Set();\n    }\n    const g = globalThis;\n    if (!g.$hotReload_applyNewExports) {\n        g.$hotReload_applyNewExports = oldExports => {\n            for (const h of hotReloadHandlers) {\n                const result = h(oldExports);\n                if (result) {\n                    return result;\n                }\n            }\n            return undefined;\n        };\n    }\n    return hotReloadHandlers;\n}\nlet hotReloadHandlers = undefined;\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA,SAASA,GAAG,QAAQ,cAAc;AAClC,OAAO,SAASC,kBAAkBA,CAAA,EAAG;EACjC,OAAO,CAAC,CAACD,GAAG,CAAC,YAAY,CAAC;AAC9B;AACA,OAAO,SAASE,wBAAwBA,CAACC,OAAO,EAAE;EAC9C,IAAI,CAACF,kBAAkB,CAAC,CAAC,EAAE;IACvB,OAAO;MAAEG,OAAOA,CAAA,EAAG,CAAE;IAAE,CAAC;EAC5B,CAAC,MACI;IACD,MAAMC,QAAQ,GAAGC,8BAA8B,CAAC,CAAC;IACjDD,QAAQ,CAACE,GAAG,CAACJ,OAAO,CAAC;IACrB,OAAO;MACHC,OAAOA,CAAA,EAAG;QAAEC,QAAQ,CAACG,MAAM,CAACL,OAAO,CAAC;MAAE;IAC1C,CAAC;EACL;AACJ;AACA,SAASG,8BAA8BA,CAAA,EAAG;EACtC,IAAI,CAACG,iBAAiB,EAAE;IACpBA,iBAAiB,GAAG,IAAIC,GAAG,CAAC,CAAC;EACjC;EACA,MAAMC,CAAC,GAAGC,UAAU;EACpB,IAAI,CAACD,CAAC,CAACE,0BAA0B,EAAE;IAC/BF,CAAC,CAACE,0BAA0B,GAAGC,UAAU,IAAI;MACzC,KAAK,MAAMC,CAAC,IAAIN,iBAAiB,EAAE;QAC/B,MAAMO,MAAM,GAAGD,CAAC,CAACD,UAAU,CAAC;QAC5B,IAAIE,MAAM,EAAE;UACR,OAAOA,MAAM;QACjB;MACJ;MACA,OAAOC,SAAS;IACpB,CAAC;EACL;EACA,OAAOR,iBAAiB;AAC5B;AACA,IAAIA,iBAAiB,GAAGQ,SAAS"},"metadata":{},"sourceType":"module","externalDependencies":[]}