{"ast":null,"code":"var _jsxFileName = \"/home/chlohest/work/website/my_web/src/Componnent/List_item.js\";\nimport { React } from 'react';\nimport { BsCheckLg } from \"react-icons/bs\";\nimport { AiFillFileText } from 'react-icons/ai';\nimport { useNavigate, Link } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ItemList({\n  itemList\n}) {\n  if (itemList == null) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 5\n    }, this);\n  }\n  let varList = [];\n  for (let i in itemList) {\n    let cond = true;\n    console.log(itemList);\n    if (varList.length === 0) {\n      varList.push(itemList[i]);\n    } else {\n      for (let j in varList) {\n        if (itemList[i][1] == varList[j][0] && itemList[i][0] == varList[j][1] || itemList[i][0] == varList[j][0] && itemList[i][1] == varList[j][1]) {\n          cond = false;\n        }\n      }\n      if (cond) {\n        varList.push(itemList[i]);\n      }\n    }\n  }\n  function fillSpan(item) {\n    let rel = \"\";\n    if (item[2].includes(\"Connection\")) {\n      rel = item[2];\n    } else {\n      rel = \"Overlap\";\n    }\n    return item[0] + \" is \" + /*#__PURE__*/_jsxDEV(\"b\", {\n      children: \"rel\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 32\n    }, this) + \" with \" + item[1];\n  }\n  console.log(varList);\n  const listItems = varList.map(item => /*#__PURE__*/_jsxDEV(\"li\", {\n    className: \"rows\",\n    children: [/*#__PURE__*/_jsxDEV(AiFillFileText, {\n      style: {\n        fontSize: '30px'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"content\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"detail\",\n        style: {\n          overflow_y: 'scroll'\n        },\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"name\",\n          children: fillSpan(item)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      hidden: true,\n      id: \"check\",\n      children: /*#__PURE__*/_jsxDEV(BsCheckLg, {\n        style: {\n          fontSize: '30px',\n          color: 'green'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Link, {\n      to: \"/rules\",\n      state: {\n        from: item\n      },\n      children: [\" \", \"CLick me\", \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this)]\n  }, item, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"ul\", {\n      id: \"span-list\",\n      children: listItems\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      style: {\n        position: 'absolute',\n        color: \"red\"\n      },\n      onClick: () => {\n        sessionStorage.setItem(\"rules\", null);\n        window.location.reload(false);\n      },\n      children: \"Clear\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this);\n}\n_c = ItemList;\n;\nexport default ItemList;\nvar _c;\n$RefreshReg$(_c, \"ItemList\");","map":{"version":3,"names":["React","BsCheckLg","AiFillFileText","useNavigate","Link","jsxDEV","_jsxDEV","ItemList","itemList","fileName","_jsxFileName","lineNumber","columnNumber","varList","i","cond","console","log","length","push","j","fillSpan","item","rel","includes","children","listItems","map","className","style","fontSize","overflow_y","hidden","id","color","to","state","from","position","onClick","sessionStorage","setItem","window","location","reload","_c","$RefreshReg$"],"sources":["/home/chlohest/work/website/my_web/src/Componnent/List_item.js"],"sourcesContent":["import {React } from 'react';\nimport { BsCheckLg } from \"react-icons/bs\";\nimport { AiFillFileText } from 'react-icons/ai';\nimport {useNavigate,Link}  from 'react-router-dom';\nfunction ItemList({itemList}){\n\n  if (itemList == null)\n   {\n    return(\n    <div>\n    </div>)\n  }\n    let varList = [];\n    for (let i in itemList){\n      let cond = true\n      console.log(itemList)\n      if(varList.length ===0){\n        varList.push(itemList[i])\n      }\n      else{\n\n        for(let j in varList){\n          if((itemList[i][1] == varList[j][0] && itemList[i][0] == varList[j][1]) || (itemList[i][0] == varList[j][0] && itemList[i][1] == varList[j][1])){\n            cond = false\n          }\n        }\n        if(cond){\n          varList.push(itemList[i])\n        }\n      }\n    }\n    function fillSpan(item){\n      let rel = \"\"\n      if(item[2].includes(\"Connection\")){\n        rel = item[2]\n      }\n      else{rel = \"Overlap\"}\n      return item[0] +\" is \" + <b>rel</b>+ \" with \" + item[1]\n    }\n\n    console.log(varList)\n    const listItems = varList.map((item) => (\n    <li key={item} className='rows'>\n      <AiFillFileText style={{ fontSize: '30px' }} />\n      <div className='content'>\n        <div className='detail' style={{ overflow_y: 'scroll' }}>\n          <span className='name'>{fillSpan(item)}</span>\n        </div>\n      </div>\n      <div hidden={true} id='check'>\n        <BsCheckLg style={{ fontSize: '30px', color: 'green' }} />\n      </div> \n      <Link to=\"/rules\" state={{from:item}}>\n        {\" \"}\n        CLick me{\" \"}\n         </Link>\n    </li>\n ));\n\n return (\n    <div>\n        <ul id='span-list'>{listItems}</ul>\n        <button style={\n          {position:'absolute',color:\"red\"}\n        } onClick={()=>{sessionStorage.setItem(\"rules\",null)\n        window.location.reload(false);\n        }}>Clear</button>\n    </div>\n\n );\n};\nexport default ItemList;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}