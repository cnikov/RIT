{"ast":null,"code":"/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\nimport { binarySearch, isFalsyOrEmpty } from '../../../../base/common/arrays.js';\nimport { Range } from '../../../common/core/range.js';\nimport { BracketSelectionRangeProvider } from '../../smartSelect/browser/bracketSelections.js';\nexport class WordDistance {\n  static create(service, editor) {\n    return __awaiter(this, void 0, void 0, function* () {\n      if (!editor.getOption(117 /* EditorOption.suggest */).localityBonus) {\n        return WordDistance.None;\n      }\n      if (!editor.hasModel()) {\n        return WordDistance.None;\n      }\n      const model = editor.getModel();\n      const position = editor.getPosition();\n      if (!service.canComputeWordRanges(model.uri)) {\n        return WordDistance.None;\n      }\n      const [ranges] = yield new BracketSelectionRangeProvider().provideSelectionRanges(model, [position]);\n      if (ranges.length === 0) {\n        return WordDistance.None;\n      }\n      const wordRanges = yield service.computeWordRanges(model.uri, ranges[0].range);\n      if (!wordRanges) {\n        return WordDistance.None;\n      }\n      // remove current word\n      const wordUntilPos = model.getWordUntilPosition(position);\n      delete wordRanges[wordUntilPos.word];\n      return new class extends WordDistance {\n        distance(anchor, item) {\n          if (!position.equals(editor.getPosition())) {\n            return 0;\n          }\n          if (item.kind === 17 /* CompletionItemKind.Keyword */) {\n            return 2 << 20;\n          }\n          const word = typeof item.label === 'string' ? item.label : item.label.label;\n          const wordLines = wordRanges[word];\n          if (isFalsyOrEmpty(wordLines)) {\n            return 2 << 20;\n          }\n          const idx = binarySearch(wordLines, Range.fromPositions(anchor), Range.compareRangesUsingStarts);\n          const bestWordRange = idx >= 0 ? wordLines[idx] : wordLines[Math.max(0, ~idx - 1)];\n          let blockDistance = ranges.length;\n          for (const range of ranges) {\n            if (!Range.containsRange(range.range, bestWordRange)) {\n              break;\n            }\n            blockDistance -= 1;\n          }\n          return blockDistance;\n        }\n      }();\n    });\n  }\n}\nWordDistance.None = new class extends WordDistance {\n  distance() {\n    return 0;\n  }\n}();","map":{"version":3,"names":["__awaiter","thisArg","_arguments","P","generator","adopt","value","resolve","Promise","reject","fulfilled","step","next","e","rejected","result","done","then","apply","binarySearch","isFalsyOrEmpty","Range","BracketSelectionRangeProvider","WordDistance","create","service","editor","getOption","localityBonus","None","hasModel","model","getModel","position","getPosition","canComputeWordRanges","uri","ranges","provideSelectionRanges","length","wordRanges","computeWordRanges","range","wordUntilPos","getWordUntilPosition","word","distance","anchor","item","equals","kind","label","wordLines","idx","fromPositions","compareRangesUsingStarts","bestWordRange","Math","max","blockDistance","containsRange"],"sources":["/home/chlohest/work/website/my_web/node_modules/monaco-editor/esm/vs/editor/contrib/suggest/browser/wordDistance.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { binarySearch, isFalsyOrEmpty } from '../../../../base/common/arrays.js';\nimport { Range } from '../../../common/core/range.js';\nimport { BracketSelectionRangeProvider } from '../../smartSelect/browser/bracketSelections.js';\nexport class WordDistance {\n    static create(service, editor) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!editor.getOption(117 /* EditorOption.suggest */).localityBonus) {\n                return WordDistance.None;\n            }\n            if (!editor.hasModel()) {\n                return WordDistance.None;\n            }\n            const model = editor.getModel();\n            const position = editor.getPosition();\n            if (!service.canComputeWordRanges(model.uri)) {\n                return WordDistance.None;\n            }\n            const [ranges] = yield new BracketSelectionRangeProvider().provideSelectionRanges(model, [position]);\n            if (ranges.length === 0) {\n                return WordDistance.None;\n            }\n            const wordRanges = yield service.computeWordRanges(model.uri, ranges[0].range);\n            if (!wordRanges) {\n                return WordDistance.None;\n            }\n            // remove current word\n            const wordUntilPos = model.getWordUntilPosition(position);\n            delete wordRanges[wordUntilPos.word];\n            return new class extends WordDistance {\n                distance(anchor, item) {\n                    if (!position.equals(editor.getPosition())) {\n                        return 0;\n                    }\n                    if (item.kind === 17 /* CompletionItemKind.Keyword */) {\n                        return 2 << 20;\n                    }\n                    const word = typeof item.label === 'string' ? item.label : item.label.label;\n                    const wordLines = wordRanges[word];\n                    if (isFalsyOrEmpty(wordLines)) {\n                        return 2 << 20;\n                    }\n                    const idx = binarySearch(wordLines, Range.fromPositions(anchor), Range.compareRangesUsingStarts);\n                    const bestWordRange = idx >= 0 ? wordLines[idx] : wordLines[Math.max(0, ~idx - 1)];\n                    let blockDistance = ranges.length;\n                    for (const range of ranges) {\n                        if (!Range.containsRange(range.range, bestWordRange)) {\n                            break;\n                        }\n                        blockDistance -= 1;\n                    }\n                    return blockDistance;\n                }\n            };\n        });\n    }\n}\nWordDistance.None = new class extends WordDistance {\n    distance() { return 0; }\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}