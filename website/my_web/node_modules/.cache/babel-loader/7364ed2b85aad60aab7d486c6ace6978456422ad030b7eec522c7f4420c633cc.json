{"ast":null,"code":"var _jsxFileName = \"/home/chlohest/work/website/my_web/src/Componnent/List_item copy.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport Editor from \"@monaco-editor/react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Test() {\n  _s();\n  const [overlap, setOverlap] = useState(null);\n  const location = useLocation();\n  const [file, setFileContent] = useState(null);\n  const [file2, setFile2Content] = useState(null);\n  const [name, setName] = useState(null);\n  const [name2, setName2] = useState(null);\n  const monacoEditorRef = useRef(null);\n  const monacoEditor2Ref = useRef(null);\n\n  // Function to handle content change in Editor 1\n  const handleEditorChange = (value, event) => {\n    setFileContent(value);\n    // Update the overlap and perform matching\n    if (overlap) {\n      matchOverlap(1, value);\n    }\n  };\n\n  // Function to handle content change in Editor 2\n  const handleEditor2Change = (value, event) => {\n    setFile2Content(value);\n    // Update the overlap and perform matching\n    if (overlap) {\n      matchOverlap(2, value);\n    }\n  };\n\n  // Function to match overlap in a given editor\n  const matchOverlap = (editorNumber, editorContent) => {\n    if (editorContent && editorNumber === 1) {\n      const matches = model.findMatches(overlap);\n      updateDecorations(monacoEditorRef, matches);\n    } else if (editorContent && editorNumber === 2) {\n      const matches = model2.findMatches(overlap);\n      updateDecorations(monacoEditor2Ref, matches);\n    }\n  };\n\n  // Function to update decorations\n  const updateDecorations = (editorRef, matches) => {\n    if (editorRef.current) {\n      const editor = editorRef.current;\n      const model = editor.getModel();\n      if (model) {\n        const decorationOptions = {\n          isWholeLine: false,\n          className: 'highlighted-text'\n        };\n        const decorations = matches.map(match => ({\n          range: match.range,\n          options: decorationOptions\n        }));\n        editor.deltaDecorations([], decorations);\n        // Refresh the editor layout\n        editor.layout();\n      }\n    }\n  };\n\n  // Effect to update overlap and perform initial matching\n  useEffect(() => {\n    const {\n      from\n    } = location.state;\n    const val = {\n      'data': from\n    };\n    if (!from) {\n      return;\n    }\n    fetch(\"http://localhost:3500/file\", {\n      method: \"POST\",\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(val)\n    }).then(res => {\n      if (!res.ok) {\n        throw res.statusText;\n      }\n      return res.json();\n    }).then(data => {\n      setFileContent(data['data']['0']);\n      setName(data['data']['name1']);\n      setName2(data['data']['name2']);\n      setFile2Content(data['data']['1']);\n      if (data['data']['overlap'] !== undefined) {\n        setOverlap(data[\"data\"][\"overlap\"]);\n        // Perform initial matching\n        matchOverlap(1, file);\n        matchOverlap(2, file2);\n      }\n    }).catch(err => {\n      console.error(err);\n    });\n  }, [location.state]);\n  const handleSaveFile = () => {\n    // Create a Blob with the content of Editor 1\n    const blob = new Blob([file], {\n      type: 'text/plain'\n    });\n    // Create a URL for the Blob\n    const url = URL.createObjectURL(blob);\n    // Create an anchor element for downloading\n    const a = document.createElement('a');\n    a.href = url;\n    a.download = name + '.yaml';\n    a.click();\n    // Clean up the URL object\n    URL.revokeObjectURL(url);\n  };\n  const handleSaveFile2 = () => {\n    // Create a Blob with the content of Editor 2\n    const blob = new Blob([file2], {\n      type: 'text/plain'\n    });\n    // Create a URL for the Blob\n    const url = URL.createObjectURL(blob);\n    // Create an anchor element for downloading\n    const a = document.createElement('a');\n    a.href = url;\n    a.download = name2 + '.yaml';\n    a.click();\n    // Clean up the URL object\n    URL.revokeObjectURL(url);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"editor\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: overlap\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App2\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(Editor, {\n          height: \"60vh\",\n          width: \"50vw\",\n          language: \"yaml\",\n          theme: \"vs-dark\",\n          value: file,\n          onChange: handleEditorChange,\n          onMount: editor => {\n            monacoEditorRef.current = editor;\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleSaveFile,\n          children: \"Save 1\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(Editor, {\n          id: \"editor2\",\n          height: \"60vh\",\n          width: \"50vw\",\n          language: \"yaml\",\n          theme: \"vs-dark\",\n          value: file2,\n          onChange: handleEditor2Change,\n          onMount: editor => {\n            monacoEditor2Ref.current = editor;\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleSaveFile2,\n          children: \"Save 2\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 137,\n    columnNumber: 5\n  }, this);\n}\n_s(Test, \"awm/hk+mLNeqFpLjJALuw8sPutc=\", false, function () {\n  return [useLocation];\n});\n_c = Test;\nexport default Test;\nvar _c;\n$RefreshReg$(_c, \"Test\");","map":{"version":3,"names":["React","useState","useEffect","useRef","useLocation","Editor","jsxDEV","_jsxDEV","Test","_s","overlap","setOverlap","location","file","setFileContent","file2","setFile2Content","name","setName","name2","setName2","monacoEditorRef","monacoEditor2Ref","handleEditorChange","value","event","matchOverlap","handleEditor2Change","editorNumber","editorContent","matches","model","findMatches","updateDecorations","model2","editorRef","current","editor","getModel","decorationOptions","isWholeLine","className","decorations","map","match","range","options","deltaDecorations","layout","from","state","val","fetch","method","headers","body","JSON","stringify","then","res","ok","statusText","json","data","undefined","catch","err","console","error","handleSaveFile","blob","Blob","type","url","URL","createObjectURL","a","document","createElement","href","download","click","revokeObjectURL","handleSaveFile2","id","children","fileName","_jsxFileName","lineNumber","columnNumber","height","width","language","theme","onChange","onMount","onClick","_c","$RefreshReg$"],"sources":["/home/chlohest/work/website/my_web/src/Componnent/List_item copy.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport Editor from \"@monaco-editor/react\";\n\nfunction Test() {\n  const [overlap, setOverlap] = useState(null);\n  const location = useLocation();\n  const [file, setFileContent] = useState(null);\n  const [file2, setFile2Content] = useState(null);\n  const [name, setName] = useState(null);\n  const [name2, setName2] = useState(null);\n  const monacoEditorRef = useRef(null);\n  const monacoEditor2Ref = useRef(null);\n\n  // Function to handle content change in Editor 1\n  const handleEditorChange = (value, event) => {\n    setFileContent(value);\n    // Update the overlap and perform matching\n    if (overlap) {\n      matchOverlap(1, value);\n    }\n  };\n\n  // Function to handle content change in Editor 2\n  const handleEditor2Change = (value, event) => {\n    setFile2Content(value);\n    // Update the overlap and perform matching\n    if (overlap) {\n      matchOverlap(2, value);\n    }\n  };\n\n  // Function to match overlap in a given editor\n  const matchOverlap = (editorNumber, editorContent) => {\n    if (editorContent && editorNumber === 1) {\n      const matches = model.findMatches(overlap);\n      updateDecorations(monacoEditorRef, matches);\n    } else if (editorContent && editorNumber === 2) {\n      const matches = model2.findMatches(overlap);\n      updateDecorations(monacoEditor2Ref, matches);\n    }\n  };\n\n  // Function to update decorations\n  const updateDecorations = (editorRef, matches) => {\n    if (editorRef.current) {\n      const editor = editorRef.current;\n      const model = editor.getModel();\n\n      if (model) {\n        const decorationOptions = {\n          isWholeLine: false,\n          className: 'highlighted-text',\n        };\n        const decorations = matches.map(match => ({\n          range: match.range,\n          options: decorationOptions,\n        }));\n\n        editor.deltaDecorations([], decorations);\n        // Refresh the editor layout\n        editor.layout();\n      }\n    }\n  };\n\n  // Effect to update overlap and perform initial matching\n  useEffect(() => {\n    const { from } = location.state;\n    const val = { 'data': from };\n\n    if (!from) {\n      return;\n    }\n\n    fetch(\"http://localhost:3500/file\", {\n      method: \"POST\",\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify(val),\n    })\n      .then((res) => {\n        if (!res.ok) {\n          throw res.statusText;\n        }\n        return res.json();\n      })\n      .then((data) => {\n        setFileContent(data['data']['0']);\n        setName(data['data']['name1']);\n        setName2(data['data']['name2']);\n        setFile2Content(data['data']['1']);\n\n        if (data['data']['overlap'] !== undefined) {\n          setOverlap(data[\"data\"][\"overlap\"]);\n          // Perform initial matching\n          matchOverlap(1, file);\n          matchOverlap(2, file2);\n        }\n      })\n      .catch((err) => {\n        console.error(err);\n      });\n  }, [location.state]);\n\n  const handleSaveFile = () => {\n    // Create a Blob with the content of Editor 1\n    const blob = new Blob([file], { type: 'text/plain' });\n    // Create a URL for the Blob\n    const url = URL.createObjectURL(blob);\n    // Create an anchor element for downloading\n    const a = document.createElement('a');\n    a.href = url;\n    a.download = name + '.yaml';\n    a.click();\n    // Clean up the URL object\n    URL.revokeObjectURL(url);\n  };\n\n  const handleSaveFile2 = () => {\n    // Create a Blob with the content of Editor 2\n    const blob = new Blob([file2], { type: 'text/plain' });\n    // Create a URL for the Blob\n    const url = URL.createObjectURL(blob);\n    // Create an anchor element for downloading\n    const a = document.createElement('a');\n    a.href = url;\n    a.download = name2 + '.yaml';\n    a.click();\n    // Clean up the URL object\n    URL.revokeObjectURL(url);\n  };\n\n  return (\n    <div id='editor'>\n      <h1>{overlap}</h1>\n      <div className='App2'>\n        <div>\n          <Editor\n            height=\"60vh\"\n            width=\"50vw\"\n            language=\"yaml\"\n            theme=\"vs-dark\"\n            value={file}\n            onChange={handleEditorChange}\n            onMount={(editor) => {\n              monacoEditorRef.current = editor;\n            }}\n          />\n          <button onClick={handleSaveFile}>Save 1</button>\n        </div>\n        <div>\n          <Editor\n            id=\"editor2\"\n            height=\"60vh\"\n            width=\"50vw\"\n            language=\"yaml\"\n            theme=\"vs-dark\"\n            value={file2}\n            onChange={handleEditor2Change}\n            onMount={(editor) => {\n              monacoEditor2Ref.current = editor;\n            }}\n          />\n          <button onClick={handleSaveFile2}>Save 2</button>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Test;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}