{"ast":null,"code":"var _jsxFileName = \"/home/chlohest/work/website/my_web/src/Componnent/List_item copy.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport Editor from \"@monaco-editor/react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Test() {\n  _s();\n  const [overlap, SetOverlap] = useState(null);\n  const location = useLocation();\n  let [file, setFileContent] = useState(null);\n  let [file2, setFile2Content] = useState(null);\n  let [name, setName] = useState(null);\n  let [name2, setName2] = useState(null);\n  let monacoEditorRef = useRef(null);\n  let monacoEditor2Ref = useRef(null);\n  let monacoEditorRef1 = useRef(null);\n  let monacoEditor2Ref2 = useRef(null);\n  let decorationsRef = useRef([]);\n  useEffect(() => {\n    const {\n      from\n    } = location.state;\n    const val = {\n      'data': from\n    };\n    if (!from) {\n      return;\n    }\n    fetch(\"http://localhost:3500/file\", {\n      method: \"POST\",\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(val)\n    }).then(res => {\n      if (!res.ok) {\n        throw res.statusText;\n      }\n      return res.json();\n    }).then(data => {\n      setFileContent(data['data']['0']);\n      setName(data['data']['name1']);\n      setName2(data['data']['name2']);\n      setFile2Content(data['data']['1']);\n      if (data['data']['overlap'] !== undefined) {\n        SetOverlap(data[\"data\"][\"overlap\"]);\n        // SetOverlap('xxpatterns')\n      }\n    }).catch(err => {\n      console.error(err);\n    });\n  }, [location.state]);\n  const handleSaveFile = () => {\n    // Create a Blob with the content of the first Ace Editor (file)\n    const blob = new Blob([file], {\n      type: 'text/plain'\n    });\n\n    // Create a URL for the Blob\n    const url = URL.createObjectURL(blob);\n\n    // Create an anchor element for downloading\n    const a = document.createElement('a');\n    a.href = url;\n    a.download = name + '.yaml';\n    a.click();\n\n    // Clean up the URL object\n    URL.revokeObjectURL(url);\n  };\n  const handleSaveFile2 = () => {\n    // Create a Blob with the content of the first Ace Editor (file)\n    const blob = new Blob([file2], {\n      type: 'text/plain'\n    });\n\n    // Create a URL for the Blob\n    const url = URL.createObjectURL(blob);\n\n    // Create an anchor element for downloading\n    const a = document.createElement('a');\n    a.href = url;\n    a.download = name2 + '.yaml';\n    a.click();\n\n    // Clean up the URL object\n    URL.revokeObjectURL(url);\n  };\n  function escapeRegExp(string) {\n    // Escape special characters except for \"$\" and \"n\"\n    return string.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&').replace(/\\$/g, '$').replace(/n/g, 'n');\n  }\n  function findSub(string1, string2) {\n    // Use a regular expression to find \"$\" followed by capital letters and replace with \"*\"\n    string1 = string1.replace(/\\$[A-Z]+/g, '\\\\.*');\n\n    // Then, you can proceed with your existing logic to find other substrings\n    let list = [];\n    let tmp = \"\";\n    let unescape = \"\";\n    for (let i = 0; i < string1.length; i++) {\n      tmp += escapeRegExp(string1[i]);\n      unescape += string1[i];\n      if (!string2.includes(unescape)) {\n        tmp = tmp.slice(0, -1);\n        unescape = unescape.slice(0, -1);\n        if (unescape.length > 1 && ![\"OR\", \"AND\", \"NOT\"].includes(unescape)) {\n          list.push(unescape);\n        }\n        tmp = escapeRegExp(string1[i]);\n        unescape = string1[i];\n      }\n    }\n    if (unescape.length > 1 && ![\"OR\", \"AND\", \"NOT\"].includes(unescape)) {\n      list.push(unescape);\n    }\n    console.log(list);\n    return list;\n  }\n  function highlight() {\n    if (overlap && monacoEditorRef.current) {\n      const editor = monacoEditorRef.current;\n      console.log(decorationsRef);\n      editor.deltaDecorations(decorationsRef.current, []);\n      const model = editor.getModel();\n      if (model) {\n        let matchList = findSub(overlap, model.getValue());\n        for (let i in matchList) {\n          const matches = model.findMatches(matchList[i]);\n          const decorationOptions = {\n            isWholeLine: false,\n            className: 'highlighted-text'\n          };\n          const decorations = matches.map(match => ({\n            range: match.range,\n            options: decorationOptions\n          }));\n          decorationsRef.current = editor.deltaDecorations([], decorations);\n          // Refresh the editor layout\n          editor.layout();\n        }\n      }\n    }\n  }\n  useEffect(() => {\n    if (overlap && monacoEditorRef.current) {\n      monacoEditorRef1 = monacoEditorRef;\n      const editor = monacoEditorRef.current;\n      const model = editor.getModel();\n      if (model) {\n        let matchList = findSub(overlap, model.getValue());\n        for (let i in matchList) {\n          const matches = model.findMatches(matchList[i]);\n          const decorationOptions = {\n            isWholeLine: false,\n            className: 'highlighted-text'\n          };\n          const decorations = matches.map(match => ({\n            range: match.range,\n            options: decorationOptions\n          }));\n          decorationsRef.current = decorations;\n          editor.deltaDecorations([], decorations);\n          // Refresh the editor layout\n          editor.layout();\n        }\n      }\n    }\n    if (overlap && monacoEditor2Ref.current) {\n      const editor2 = monacoEditor2Ref.current;\n      const model2 = editor2.getModel();\n      if (model2) {\n        let matchList = findSub(overlap, model2.getValue());\n        for (let i in matchList) {\n          const matches2 = model2.findMatches(matchList[i]);\n          const decorationOptions = {\n            isWholeLine: false,\n            className: 'highlighted-text'\n          };\n          const decorations2 = matches2.map(match => ({\n            range: match.range,\n            options: decorationOptions\n          }));\n          editor2.deltaDecorations([], decorations2);\n\n          // Refresh the editor layout\n          editor2.layout();\n        }\n      }\n    }\n  }, [overlap]);\n  const handleEditorChange = (value, event) => {\n    setFileContent(value);\n    highlight();\n  };\n  const handleEditor2Change = (value, event) => {\n    setFile2Content(value);\n    // updateHighlight();\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"editor\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: overlap\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 230,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App2\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(Editor, {\n          height: \"60vh\",\n          width: \"50vw\",\n          language: \"yaml\",\n          theme: \"vs-dark\",\n          value: file,\n          onChange: handleEditorChange,\n          onMount: editor => {\n            // Store the Monaco Editor instance in the ref\n            monacoEditorRef.current = editor;\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 233,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleSaveFile,\n          children: \"Save 1\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 245,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 232,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(Editor, {\n          id: \"editor2\",\n          height: \"60vh\",\n          width: \"50vw\",\n          language: \"yaml\",\n          theme: \"vs-dark\",\n          value: file2,\n          onChange: handleEditor2Change,\n          onMount: editor => {\n            // Store the Monaco Editor instance in the ref\n            monacoEditor2Ref.current = editor;\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 248,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleSaveFile2,\n          children: \"Save 2\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 261,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 247,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 231,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 229,\n    columnNumber: 5\n  }, this);\n}\n_s(Test, \"RPBA2ZokrpPOszEn5txdPDQQKZw=\", false, function () {\n  return [useLocation];\n});\n_c = Test;\nexport default Test;\nvar _c;\n$RefreshReg$(_c, \"Test\");","map":{"version":3,"names":["React","useState","useEffect","useRef","useLocation","Editor","jsxDEV","_jsxDEV","Test","_s","overlap","SetOverlap","location","file","setFileContent","file2","setFile2Content","name","setName","name2","setName2","monacoEditorRef","monacoEditor2Ref","monacoEditorRef1","monacoEditor2Ref2","decorationsRef","from","state","val","fetch","method","headers","body","JSON","stringify","then","res","ok","statusText","json","data","undefined","catch","err","console","error","handleSaveFile","blob","Blob","type","url","URL","createObjectURL","a","document","createElement","href","download","click","revokeObjectURL","handleSaveFile2","escapeRegExp","string","replace","findSub","string1","string2","list","tmp","unescape","i","length","includes","slice","push","log","highlight","current","editor","deltaDecorations","model","getModel","matchList","getValue","matches","findMatches","decorationOptions","isWholeLine","className","decorations","map","match","range","options","layout","editor2","model2","matches2","decorations2","handleEditorChange","value","event","handleEditor2Change","id","children","fileName","_jsxFileName","lineNumber","columnNumber","height","width","language","theme","onChange","onMount","onClick","_c","$RefreshReg$"],"sources":["/home/chlohest/work/website/my_web/src/Componnent/List_item copy.js"],"sourcesContent":["import React, { useState, useEffect,useRef } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport Editor from \"@monaco-editor/react\";\n\nfunction Test() {\n  const [overlap, SetOverlap] = useState(null);\n  const location = useLocation();\n  let [file,setFileContent] = useState(null);\n  let [file2, setFile2Content] = useState(null);\n  let [name, setName] = useState(null)\n  let [name2, setName2] = useState(null)\n  let monacoEditorRef = useRef(null);\n  let monacoEditor2Ref = useRef(null);\n  let monacoEditorRef1 = useRef(null);\n  let monacoEditor2Ref2 = useRef(null);\n  let decorationsRef = useRef([]);\n\n  useEffect(() => {\n    const { from } = location.state;\n  \n    const val = { 'data': from };\n\n\n    if (!from) {\n      return;\n    }\n\n    fetch(\"http://localhost:3500/file\", {\n      method: \"POST\",\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(val),\n    })\n      .then(res => {\n        if (!res.ok) {\n          throw res.statusText;\n        }\n        return res.json();\n      })\n      .then(data => {\n        setFileContent(data['data']['0']);\n  \n        setName(data['data']['name1']);\n        setName2(data['data']['name2']);\n        setFile2Content(data['data']['1']);\n\n\n        if (data['data']['overlap'] !== undefined) {\n          SetOverlap(data[\"data\"][\"overlap\"]);\n        // SetOverlap('xxpatterns')\n        }\n      })\n      .catch(err => {\n        console.error(err);\n      });\n  }, [location.state]);\n\n  const handleSaveFile = () => {\n    // Create a Blob with the content of the first Ace Editor (file)\n    const blob = new Blob([file], { type: 'text/plain' });\n\n    // Create a URL for the Blob\n    const url = URL.createObjectURL(blob);\n\n    // Create an anchor element for downloading\n    const a = document.createElement('a');\n    a.href = url;\n    a.download = name + '.yaml';\n    a.click();\n\n    // Clean up the URL object\n    URL.revokeObjectURL(url);\n  };\n  const handleSaveFile2 = () => {\n    // Create a Blob with the content of the first Ace Editor (file)\n    const blob = new Blob([file2], { type: 'text/plain' });\n\n    // Create a URL for the Blob\n    const url = URL.createObjectURL(blob);\n\n    // Create an anchor element for downloading\n    const a = document.createElement('a');\n    a.href = url;\n    a.download = name2 + '.yaml';\n    a.click();\n\n    // Clean up the URL object\n    URL.revokeObjectURL(url);\n  };\n  function escapeRegExp(string) {\n    // Escape special characters except for \"$\" and \"n\"\n    return string.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&').replace(/\\$/g, '$').replace(/n/g, 'n');\n  }\n  \n  \n  function findSub(string1, string2) {\n    // Use a regular expression to find \"$\" followed by capital letters and replace with \"*\"\n    string1 = string1.replace(/\\$[A-Z]+/g, '\\\\.*');\n    \n    // Then, you can proceed with your existing logic to find other substrings\n    let list = [];\n    let tmp = \"\";\n    let unescape = \"\";\n  \n    for (let i = 0; i < string1.length; i++) {\n      tmp += escapeRegExp(string1[i]);\n      unescape += string1[i];\n  \n      if (!string2.includes(unescape)) {\n        tmp = tmp.slice(0, -1);\n        unescape = unescape.slice(0, -1);\n  \n        if (unescape.length > 1 && ![\"OR\", \"AND\", \"NOT\"].includes(unescape)) {\n          list.push(unescape);\n        }\n  \n        tmp = escapeRegExp(string1[i]);\n        unescape = string1[i];\n      }\n    }\n  \n    if (unescape.length > 1 && ![\"OR\", \"AND\", \"NOT\"].includes(unescape)) {\n      list.push(unescape);\n    }\n  \n    console.log(list);\n    return list;\n  }\n  \n  function highlight(){\n\n    if (overlap && monacoEditorRef.current) {\n\n        const editor = monacoEditorRef.current;\n        console.log(decorationsRef)\n        editor.deltaDecorations(decorationsRef.current, []);\n        const model = editor.getModel();\n        if (model) {\n            let matchList = findSub(overlap,model.getValue())\n    \n            for(let i in matchList){\n                const matches = model.findMatches(matchList[i]);\n                const decorationOptions = {\n                  isWholeLine: false,\n                  className: 'highlighted-text',\n                };\n                const decorations = matches.map(match => ({\n                  range: match.range,\n                  options: decorationOptions,\n                }));\n                decorationsRef.current =  editor.deltaDecorations([], decorations);\n                // Refresh the editor layout\n                editor.layout();\n              }\n            }\n    }\n\n  }\n  useEffect(() => {\n    if (overlap && monacoEditorRef.current) {\n        monacoEditorRef1 = monacoEditorRef\n      const editor = monacoEditorRef.current;\n      const model = editor.getModel();\n  \n      if (model) {\n        let matchList = findSub(overlap,model.getValue())\n\n        for(let i in matchList){\n            const matches = model.findMatches(matchList[i]);\n            const decorationOptions = {\n              isWholeLine: false,\n              className: 'highlighted-text',\n            };\n            const decorations = matches.map(match => ({\n              range: match.range,\n              options: decorationOptions,\n            }));\n      \n            decorationsRef.current =decorations\n            editor.deltaDecorations([], decorations);\n            // Refresh the editor layout\n            editor.layout();\n          }\n        }\n \n    }\n    if (overlap && monacoEditor2Ref.current) {\n      const editor2 = monacoEditor2Ref.current;\n      const model2 = editor2.getModel();\n  \n      if (model2) {\n        let matchList = findSub(overlap,model2.getValue())\n\n        for(let i in matchList){\n            const matches2 = model2.findMatches(matchList[i]);\n\n        const decorationOptions = {\n          isWholeLine: false,\n          className: 'highlighted-text',\n        };\n        const decorations2 = matches2.map(match => ({\n          range: match.range,\n          options: decorationOptions,\n        }));\n  \n        editor2.deltaDecorations([], decorations2);\n  \n        // Refresh the editor layout\n        editor2.layout();\n      }\n    }\n    }\n  }, [overlap]);\n\n  const handleEditorChange = (value, event) => {\n    setFileContent(value);\n    highlight();\n  };\n\n  const handleEditor2Change = (value, event) => {\n    setFile2Content(value);\n    // updateHighlight();\n  };\n\n\n  return (\n    <div id='editor'>\n      <h1>{overlap}</h1>\n      <div className='App2'>\n        <div>\n          <Editor\n            height=\"60vh\"\n            width=\"50vw\"\n            language=\"yaml\"\n            theme=\"vs-dark\"\n            value={file} \n            onChange={handleEditorChange}\n            onMount={editor => {\n                // Store the Monaco Editor instance in the ref\n                monacoEditorRef.current = editor;\n            }}\n          />\n          <button onClick={handleSaveFile}>Save 1</button>\n        </div>\n        <div>\n          <Editor\n            id=\"editor2\"\n            height=\"60vh\"\n            width=\"50vw\"\n            language=\"yaml\"\n            theme=\"vs-dark\"\n            value={file2} \n            onChange={handleEditor2Change}\n            onMount={editor => {\n                // Store the Monaco Editor instance in the ref\n                monacoEditor2Ref.current = editor;\n            }}\n          />\n          <button onClick={handleSaveFile2}>Save 2</button>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Test;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}