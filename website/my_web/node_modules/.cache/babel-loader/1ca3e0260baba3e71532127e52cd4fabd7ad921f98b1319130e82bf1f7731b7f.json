{"ast":null,"code":"/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n    r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n    d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = this && this.__param || function (paramIndex, decorator) {\n  return function (target, key) {\n    decorator(target, key, paramIndex);\n  };\n};\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\nvar CommonFindController_1;\nimport { Delayer } from '../../../../base/common/async.js';\nimport { Disposable } from '../../../../base/common/lifecycle.js';\nimport * as strings from '../../../../base/common/strings.js';\nimport { EditorAction, EditorCommand, MultiEditorAction, registerEditorAction, registerEditorCommand, registerEditorContribution, registerMultiEditorAction } from '../../../browser/editorExtensions.js';\nimport { overviewRulerRangeHighlight } from '../../../common/core/editorColorRegistry.js';\nimport { EditorContextKeys } from '../../../common/editorContextKeys.js';\nimport { OverviewRulerLane } from '../../../common/model.js';\nimport { CONTEXT_FIND_INPUT_FOCUSED, CONTEXT_FIND_WIDGET_VISIBLE, CONTEXT_REPLACE_INPUT_FOCUSED, FindModelBoundToEditorModel, FIND_IDS, ToggleCaseSensitiveKeybinding, TogglePreserveCaseKeybinding, ToggleRegexKeybinding, ToggleSearchScopeKeybinding, ToggleWholeWordKeybinding } from './findModel.js';\nimport { FindOptionsWidget } from './findOptionsWidget.js';\nimport { FindReplaceState } from './findState.js';\nimport { FindWidget } from './findWidget.js';\nimport * as nls from '../../../../nls.js';\nimport { MenuId } from '../../../../platform/actions/common/actions.js';\nimport { IClipboardService } from '../../../../platform/clipboard/common/clipboardService.js';\nimport { ContextKeyExpr, IContextKeyService } from '../../../../platform/contextkey/common/contextkey.js';\nimport { IContextViewService } from '../../../../platform/contextview/browser/contextView.js';\nimport { IKeybindingService } from '../../../../platform/keybinding/common/keybinding.js';\nimport { INotificationService, Severity } from '../../../../platform/notification/common/notification.js';\nimport { IQuickInputService } from '../../../../platform/quickinput/common/quickInput.js';\nimport { IStorageService } from '../../../../platform/storage/common/storage.js';\nimport { IThemeService, themeColorFromId } from '../../../../platform/theme/common/themeService.js';\nconst SEARCH_STRING_MAX_LENGTH = 524288;\nexport function getSelectionSearchString(editor, seedSearchStringFromSelection = 'single', seedSearchStringFromNonEmptySelection = false) {\n  if (!editor.hasModel()) {\n    return null;\n  }\n  const selection = editor.getSelection();\n  // if selection spans multiple lines, default search string to empty\n  if (seedSearchStringFromSelection === 'single' && selection.startLineNumber === selection.endLineNumber || seedSearchStringFromSelection === 'multiple') {\n    if (selection.isEmpty()) {\n      const wordAtPosition = editor.getConfiguredWordAtPosition(selection.getStartPosition());\n      if (wordAtPosition && false === seedSearchStringFromNonEmptySelection) {\n        return wordAtPosition.word;\n      }\n    } else {\n      if (editor.getModel().getValueLengthInRange(selection) < SEARCH_STRING_MAX_LENGTH) {\n        return editor.getModel().getValueInRange(selection);\n      }\n    }\n  }\n  return null;\n}\nlet CommonFindController = CommonFindController_1 = class CommonFindController extends Disposable {\n  get editor() {\n    return this._editor;\n  }\n  static get(editor) {\n    return editor.getContribution(CommonFindController_1.ID);\n  }\n  constructor(editor, contextKeyService, storageService, clipboardService, notificationService) {\n    super();\n    this._editor = editor;\n    this._findWidgetVisible = CONTEXT_FIND_WIDGET_VISIBLE.bindTo(contextKeyService);\n    this._contextKeyService = contextKeyService;\n    this._storageService = storageService;\n    this._clipboardService = clipboardService;\n    this._notificationService = notificationService;\n    this._updateHistoryDelayer = new Delayer(500);\n    this._state = this._register(new FindReplaceState());\n    this.loadQueryState();\n    this._register(this._state.onFindReplaceStateChange(e => this._onStateChanged(e)));\n    this._model = null;\n    this._register(this._editor.onDidChangeModel(() => {\n      const shouldRestartFind = this._editor.getModel() && this._state.isRevealed;\n      this.disposeModel();\n      this._state.change({\n        searchScope: null,\n        matchCase: this._storageService.getBoolean('editor.matchCase', 1 /* StorageScope.WORKSPACE */, false),\n        wholeWord: this._storageService.getBoolean('editor.wholeWord', 1 /* StorageScope.WORKSPACE */, false),\n        isRegex: this._storageService.getBoolean('editor.isRegex', 1 /* StorageScope.WORKSPACE */, false),\n        preserveCase: this._storageService.getBoolean('editor.preserveCase', 1 /* StorageScope.WORKSPACE */, false)\n      }, false);\n      if (shouldRestartFind) {\n        this._start({\n          forceRevealReplace: false,\n          seedSearchStringFromSelection: 'none',\n          seedSearchStringFromNonEmptySelection: false,\n          seedSearchStringFromGlobalClipboard: false,\n          shouldFocus: 0 /* FindStartFocusAction.NoFocusChange */,\n          shouldAnimate: false,\n          updateSearchScope: false,\n          loop: this._editor.getOption(41 /* EditorOption.find */).loop\n        });\n      }\n    }));\n  }\n  dispose() {\n    this.disposeModel();\n    super.dispose();\n  }\n  disposeModel() {\n    if (this._model) {\n      this._model.dispose();\n      this._model = null;\n    }\n  }\n  _onStateChanged(e) {\n    this.saveQueryState(e);\n    if (e.isRevealed) {\n      if (this._state.isRevealed) {\n        this._findWidgetVisible.set(true);\n      } else {\n        this._findWidgetVisible.reset();\n        this.disposeModel();\n      }\n    }\n    if (e.searchString) {\n      this.setGlobalBufferTerm(this._state.searchString);\n    }\n  }\n  saveQueryState(e) {\n    if (e.isRegex) {\n      this._storageService.store('editor.isRegex', this._state.actualIsRegex, 1 /* StorageScope.WORKSPACE */, 1 /* StorageTarget.MACHINE */);\n    }\n\n    if (e.wholeWord) {\n      this._storageService.store('editor.wholeWord', this._state.actualWholeWord, 1 /* StorageScope.WORKSPACE */, 1 /* StorageTarget.MACHINE */);\n    }\n\n    if (e.matchCase) {\n      this._storageService.store('editor.matchCase', this._state.actualMatchCase, 1 /* StorageScope.WORKSPACE */, 1 /* StorageTarget.MACHINE */);\n    }\n\n    if (e.preserveCase) {\n      this._storageService.store('editor.preserveCase', this._state.actualPreserveCase, 1 /* StorageScope.WORKSPACE */, 1 /* StorageTarget.MACHINE */);\n    }\n  }\n\n  loadQueryState() {\n    this._state.change({\n      matchCase: this._storageService.getBoolean('editor.matchCase', 1 /* StorageScope.WORKSPACE */, this._state.matchCase),\n      wholeWord: this._storageService.getBoolean('editor.wholeWord', 1 /* StorageScope.WORKSPACE */, this._state.wholeWord),\n      isRegex: this._storageService.getBoolean('editor.isRegex', 1 /* StorageScope.WORKSPACE */, this._state.isRegex),\n      preserveCase: this._storageService.getBoolean('editor.preserveCase', 1 /* StorageScope.WORKSPACE */, this._state.preserveCase)\n    }, false);\n  }\n  isFindInputFocused() {\n    return !!CONTEXT_FIND_INPUT_FOCUSED.getValue(this._contextKeyService);\n  }\n  getState() {\n    return this._state;\n  }\n  closeFindWidget() {\n    this._state.change({\n      isRevealed: false,\n      searchScope: null\n    }, false);\n    this._editor.focus();\n  }\n  toggleCaseSensitive() {\n    this._state.change({\n      matchCase: !this._state.matchCase\n    }, false);\n    if (!this._state.isRevealed) {\n      this.highlightFindOptions();\n    }\n  }\n  toggleWholeWords() {\n    this._state.change({\n      wholeWord: !this._state.wholeWord\n    }, false);\n    if (!this._state.isRevealed) {\n      this.highlightFindOptions();\n    }\n  }\n  toggleRegex() {\n    this._state.change({\n      isRegex: !this._state.isRegex\n    }, false);\n    if (!this._state.isRevealed) {\n      this.highlightFindOptions();\n    }\n  }\n  togglePreserveCase() {\n    this._state.change({\n      preserveCase: !this._state.preserveCase\n    }, false);\n    if (!this._state.isRevealed) {\n      this.highlightFindOptions();\n    }\n  }\n  toggleSearchScope() {\n    if (this._state.searchScope) {\n      this._state.change({\n        searchScope: null\n      }, true);\n    } else {\n      if (this._editor.hasModel()) {\n        const selections = this._editor.getSelections();\n        selections.map(selection => {\n          if (selection.endColumn === 1 && selection.endLineNumber > selection.startLineNumber) {\n            selection = selection.setEndPosition(selection.endLineNumber - 1, this._editor.getModel().getLineMaxColumn(selection.endLineNumber - 1));\n          }\n          if (!selection.isEmpty()) {\n            return selection;\n          }\n          return null;\n        }).filter(element => !!element);\n        if (selections.length) {\n          this._state.change({\n            searchScope: selections\n          }, true);\n        }\n      }\n    }\n  }\n  setSearchString(searchString) {\n    if (this._state.isRegex) {\n      searchString = strings.escapeRegExpCharacters(searchString);\n    }\n    this._state.change({\n      searchString: searchString\n    }, false);\n  }\n  highlightFindOptions(ignoreWhenVisible = false) {\n    // overwritten in subclass\n  }\n  _start(opts, newState) {\n    return __awaiter(this, void 0, void 0, function* () {\n      this.disposeModel();\n      if (!this._editor.hasModel()) {\n        // cannot do anything with an editor that doesn't have a model...\n        return;\n      }\n      const stateChanges = Object.assign(Object.assign({}, newState), {\n        isRevealed: true\n      });\n      if (opts.seedSearchStringFromSelection === 'single') {\n        const selectionSearchString = getSelectionSearchString(this._editor, opts.seedSearchStringFromSelection, opts.seedSearchStringFromNonEmptySelection);\n        if (selectionSearchString) {\n          if (this._state.isRegex) {\n            stateChanges.searchString = strings.escapeRegExpCharacters(selectionSearchString);\n          } else {\n            stateChanges.searchString = selectionSearchString;\n          }\n        }\n      } else if (opts.seedSearchStringFromSelection === 'multiple' && !opts.updateSearchScope) {\n        const selectionSearchString = getSelectionSearchString(this._editor, opts.seedSearchStringFromSelection);\n        if (selectionSearchString) {\n          stateChanges.searchString = selectionSearchString;\n        }\n      }\n      if (!stateChanges.searchString && opts.seedSearchStringFromGlobalClipboard) {\n        const selectionSearchString = yield this.getGlobalBufferTerm();\n        if (!this._editor.hasModel()) {\n          // the editor has lost its model in the meantime\n          return;\n        }\n        if (selectionSearchString) {\n          stateChanges.searchString = selectionSearchString;\n        }\n      }\n      // Overwrite isReplaceRevealed\n      if (opts.forceRevealReplace || stateChanges.isReplaceRevealed) {\n        stateChanges.isReplaceRevealed = true;\n      } else if (!this._findWidgetVisible.get()) {\n        stateChanges.isReplaceRevealed = false;\n      }\n      if (opts.updateSearchScope) {\n        const currentSelections = this._editor.getSelections();\n        if (currentSelections.some(selection => !selection.isEmpty())) {\n          stateChanges.searchScope = currentSelections;\n        }\n      }\n      stateChanges.loop = opts.loop;\n      this._state.change(stateChanges, false);\n      if (!this._model) {\n        this._model = new FindModelBoundToEditorModel(this._editor, this._state);\n      }\n    });\n  }\n  start(opts, newState) {\n    return this._start(opts, newState);\n  }\n  moveToNextMatch() {\n    if (this._model) {\n      this._model.moveToNextMatch();\n      return true;\n    }\n    return false;\n  }\n  moveToPrevMatch() {\n    if (this._model) {\n      this._model.moveToPrevMatch();\n      return true;\n    }\n    return false;\n  }\n  goToMatch(index) {\n    if (this._model) {\n      this._model.moveToMatch(index);\n      return true;\n    }\n    return false;\n  }\n  replace() {\n    if (this._model) {\n      this._model.replace();\n      return true;\n    }\n    return false;\n  }\n  replaceAll() {\n    var _a;\n    if (this._model) {\n      if ((_a = this._editor.getModel()) === null || _a === void 0 ? void 0 : _a.isTooLargeForHeapOperation()) {\n        this._notificationService.warn(nls.localize('too.large.for.replaceall', \"The file is too large to perform a replace all operation.\"));\n        return false;\n      }\n      this._model.replaceAll();\n      return true;\n    }\n    return false;\n  }\n  selectAllMatches() {\n    if (this._model) {\n      this._model.selectAllMatches();\n      this._editor.focus();\n      return true;\n    }\n    return false;\n  }\n  getGlobalBufferTerm() {\n    return __awaiter(this, void 0, void 0, function* () {\n      if (this._editor.getOption(41 /* EditorOption.find */).globalFindClipboard && this._editor.hasModel() && !this._editor.getModel().isTooLargeForSyncing()) {\n        return this._clipboardService.readFindText();\n      }\n      return '';\n    });\n  }\n  setGlobalBufferTerm(text) {\n    if (this._editor.getOption(41 /* EditorOption.find */).globalFindClipboard && this._editor.hasModel() && !this._editor.getModel().isTooLargeForSyncing()) {\n      // intentionally not awaited\n      this._clipboardService.writeFindText(text);\n    }\n  }\n};\nCommonFindController.ID = 'editor.contrib.findController';\nCommonFindController = CommonFindController_1 = __decorate([__param(1, IContextKeyService), __param(2, IStorageService), __param(3, IClipboardService), __param(4, INotificationService)], CommonFindController);\nexport { CommonFindController };\nlet FindController = class FindController extends CommonFindController {\n  constructor(editor, _contextViewService, _contextKeyService, _keybindingService, _themeService, notificationService, _storageService, clipboardService) {\n    super(editor, _contextKeyService, _storageService, clipboardService, notificationService);\n    this._contextViewService = _contextViewService;\n    this._keybindingService = _keybindingService;\n    this._themeService = _themeService;\n    this._widget = null;\n    this._findOptionsWidget = null;\n  }\n  _start(opts, newState) {\n    const _super = Object.create(null, {\n      _start: {\n        get: () => super._start\n      }\n    });\n    return __awaiter(this, void 0, void 0, function* () {\n      if (!this._widget) {\n        this._createFindWidget();\n      }\n      const selection = this._editor.getSelection();\n      let updateSearchScope = false;\n      switch (this._editor.getOption(41 /* EditorOption.find */).autoFindInSelection) {\n        case 'always':\n          updateSearchScope = true;\n          break;\n        case 'never':\n          updateSearchScope = false;\n          break;\n        case 'multiline':\n          {\n            const isSelectionMultipleLine = !!selection && selection.startLineNumber !== selection.endLineNumber;\n            updateSearchScope = isSelectionMultipleLine;\n            break;\n          }\n        default:\n          break;\n      }\n      opts.updateSearchScope = opts.updateSearchScope || updateSearchScope;\n      yield _super._start.call(this, opts, newState);\n      if (this._widget) {\n        if (opts.shouldFocus === 2 /* FindStartFocusAction.FocusReplaceInput */) {\n          this._widget.focusReplaceInput();\n        } else if (opts.shouldFocus === 1 /* FindStartFocusAction.FocusFindInput */) {\n          this._widget.focusFindInput();\n        }\n      }\n    });\n  }\n  highlightFindOptions(ignoreWhenVisible = false) {\n    if (!this._widget) {\n      this._createFindWidget();\n    }\n    if (this._state.isRevealed && !ignoreWhenVisible) {\n      this._widget.highlightFindOptions();\n    } else {\n      this._findOptionsWidget.highlightFindOptions();\n    }\n  }\n  _createFindWidget() {\n    this._widget = this._register(new FindWidget(this._editor, this, this._state, this._contextViewService, this._keybindingService, this._contextKeyService, this._themeService, this._storageService, this._notificationService));\n    this._findOptionsWidget = this._register(new FindOptionsWidget(this._editor, this._state, this._keybindingService));\n  }\n};\nFindController = __decorate([__param(1, IContextViewService), __param(2, IContextKeyService), __param(3, IKeybindingService), __param(4, IThemeService), __param(5, INotificationService), __param(6, IStorageService), __param(7, IClipboardService)], FindController);\nexport { FindController };\nexport const StartFindAction = registerMultiEditorAction(new MultiEditorAction({\n  id: FIND_IDS.StartFindAction,\n  label: nls.localize('startFindAction', \"Find\"),\n  alias: 'Find',\n  precondition: ContextKeyExpr.or(EditorContextKeys.focus, ContextKeyExpr.has('editorIsOpen')),\n  kbOpts: {\n    kbExpr: null,\n    primary: 2048 /* KeyMod.CtrlCmd */ | 36 /* KeyCode.KeyF */,\n    weight: 100 /* KeybindingWeight.EditorContrib */\n  },\n\n  menuOpts: {\n    menuId: MenuId.MenubarEditMenu,\n    group: '3_find',\n    title: nls.localize({\n      key: 'miFind',\n      comment: ['&& denotes a mnemonic']\n    }, \"&&Find\"),\n    order: 1\n  }\n}));\nStartFindAction.addImplementation(0, (accessor, editor, args) => {\n  const controller = CommonFindController.get(editor);\n  if (!controller) {\n    return false;\n  }\n  return controller.start({\n    forceRevealReplace: false,\n    seedSearchStringFromSelection: editor.getOption(41 /* EditorOption.find */).seedSearchStringFromSelection !== 'never' ? 'single' : 'none',\n    seedSearchStringFromNonEmptySelection: editor.getOption(41 /* EditorOption.find */).seedSearchStringFromSelection === 'selection',\n    seedSearchStringFromGlobalClipboard: editor.getOption(41 /* EditorOption.find */).globalFindClipboard,\n    shouldFocus: 1 /* FindStartFocusAction.FocusFindInput */,\n    shouldAnimate: true,\n    updateSearchScope: false,\n    loop: editor.getOption(41 /* EditorOption.find */).loop\n  });\n});\nconst findArgDescription = {\n  description: 'Open a new In-Editor Find Widget.',\n  args: [{\n    name: 'Open a new In-Editor Find Widget args',\n    schema: {\n      properties: {\n        searchString: {\n          type: 'string'\n        },\n        replaceString: {\n          type: 'string'\n        },\n        regex: {\n          type: 'boolean'\n        },\n        regexOverride: {\n          type: 'number',\n          description: nls.localize('actions.find.isRegexOverride', 'Overrides \"Use Regular Expression\" flag.\\nThe flag will not be saved for the future.\\n0: Do Nothing\\n1: True\\n2: False')\n        },\n        wholeWord: {\n          type: 'boolean'\n        },\n        wholeWordOverride: {\n          type: 'number',\n          description: nls.localize('actions.find.wholeWordOverride', 'Overrides \"Match Whole Word\" flag.\\nThe flag will not be saved for the future.\\n0: Do Nothing\\n1: True\\n2: False')\n        },\n        matchCase: {\n          type: 'boolean'\n        },\n        matchCaseOverride: {\n          type: 'number',\n          description: nls.localize('actions.find.matchCaseOverride', 'Overrides \"Math Case\" flag.\\nThe flag will not be saved for the future.\\n0: Do Nothing\\n1: True\\n2: False')\n        },\n        preserveCase: {\n          type: 'boolean'\n        },\n        preserveCaseOverride: {\n          type: 'number',\n          description: nls.localize('actions.find.preserveCaseOverride', 'Overrides \"Preserve Case\" flag.\\nThe flag will not be saved for the future.\\n0: Do Nothing\\n1: True\\n2: False')\n        },\n        findInSelection: {\n          type: 'boolean'\n        }\n      }\n    }\n  }]\n};\nexport class StartFindWithArgsAction extends EditorAction {\n  constructor() {\n    super({\n      id: FIND_IDS.StartFindWithArgs,\n      label: nls.localize('startFindWithArgsAction', \"Find With Arguments\"),\n      alias: 'Find With Arguments',\n      precondition: undefined,\n      kbOpts: {\n        kbExpr: null,\n        primary: 0,\n        weight: 100 /* KeybindingWeight.EditorContrib */\n      },\n\n      description: findArgDescription\n    });\n  }\n  run(accessor, editor, args) {\n    return __awaiter(this, void 0, void 0, function* () {\n      const controller = CommonFindController.get(editor);\n      if (controller) {\n        const newState = args ? {\n          searchString: args.searchString,\n          replaceString: args.replaceString,\n          isReplaceRevealed: args.replaceString !== undefined,\n          isRegex: args.isRegex,\n          // isRegexOverride: args.regexOverride,\n          wholeWord: args.matchWholeWord,\n          // wholeWordOverride: args.wholeWordOverride,\n          matchCase: args.isCaseSensitive,\n          // matchCaseOverride: args.matchCaseOverride,\n          preserveCase: args.preserveCase\n          // preserveCaseOverride: args.preserveCaseOverride,\n        } : {};\n        yield controller.start({\n          forceRevealReplace: false,\n          seedSearchStringFromSelection: controller.getState().searchString.length === 0 && editor.getOption(41 /* EditorOption.find */).seedSearchStringFromSelection !== 'never' ? 'single' : 'none',\n          seedSearchStringFromNonEmptySelection: editor.getOption(41 /* EditorOption.find */).seedSearchStringFromSelection === 'selection',\n          seedSearchStringFromGlobalClipboard: true,\n          shouldFocus: 1 /* FindStartFocusAction.FocusFindInput */,\n          shouldAnimate: true,\n          updateSearchScope: (args === null || args === void 0 ? void 0 : args.findInSelection) || false,\n          loop: editor.getOption(41 /* EditorOption.find */).loop\n        }, newState);\n        controller.setGlobalBufferTerm(controller.getState().searchString);\n      }\n    });\n  }\n}\nexport class StartFindWithSelectionAction extends EditorAction {\n  constructor() {\n    super({\n      id: FIND_IDS.StartFindWithSelection,\n      label: nls.localize('startFindWithSelectionAction', \"Find With Selection\"),\n      alias: 'Find With Selection',\n      precondition: undefined,\n      kbOpts: {\n        kbExpr: null,\n        primary: 0,\n        mac: {\n          primary: 2048 /* KeyMod.CtrlCmd */ | 35 /* KeyCode.KeyE */\n        },\n\n        weight: 100 /* KeybindingWeight.EditorContrib */\n      }\n    });\n  }\n\n  run(accessor, editor) {\n    return __awaiter(this, void 0, void 0, function* () {\n      const controller = CommonFindController.get(editor);\n      if (controller) {\n        yield controller.start({\n          forceRevealReplace: false,\n          seedSearchStringFromSelection: 'multiple',\n          seedSearchStringFromNonEmptySelection: false,\n          seedSearchStringFromGlobalClipboard: false,\n          shouldFocus: 0 /* FindStartFocusAction.NoFocusChange */,\n          shouldAnimate: true,\n          updateSearchScope: false,\n          loop: editor.getOption(41 /* EditorOption.find */).loop\n        });\n        controller.setGlobalBufferTerm(controller.getState().searchString);\n      }\n    });\n  }\n}\nexport class MatchFindAction extends EditorAction {\n  run(accessor, editor) {\n    return __awaiter(this, void 0, void 0, function* () {\n      const controller = CommonFindController.get(editor);\n      if (controller && !this._run(controller)) {\n        yield controller.start({\n          forceRevealReplace: false,\n          seedSearchStringFromSelection: controller.getState().searchString.length === 0 && editor.getOption(41 /* EditorOption.find */).seedSearchStringFromSelection !== 'never' ? 'single' : 'none',\n          seedSearchStringFromNonEmptySelection: editor.getOption(41 /* EditorOption.find */).seedSearchStringFromSelection === 'selection',\n          seedSearchStringFromGlobalClipboard: true,\n          shouldFocus: 0 /* FindStartFocusAction.NoFocusChange */,\n          shouldAnimate: true,\n          updateSearchScope: false,\n          loop: editor.getOption(41 /* EditorOption.find */).loop\n        });\n        this._run(controller);\n      }\n    });\n  }\n}\nexport class NextMatchFindAction extends MatchFindAction {\n  constructor() {\n    super({\n      id: FIND_IDS.NextMatchFindAction,\n      label: nls.localize('findNextMatchAction', \"Find Next\"),\n      alias: 'Find Next',\n      precondition: undefined,\n      kbOpts: [{\n        kbExpr: EditorContextKeys.focus,\n        primary: 61 /* KeyCode.F3 */,\n        mac: {\n          primary: 2048 /* KeyMod.CtrlCmd */ | 37 /* KeyCode.KeyG */,\n          secondary: [61 /* KeyCode.F3 */]\n        },\n        weight: 100 /* KeybindingWeight.EditorContrib */\n      }, {\n        kbExpr: ContextKeyExpr.and(EditorContextKeys.focus, CONTEXT_FIND_INPUT_FOCUSED),\n        primary: 3 /* KeyCode.Enter */,\n        weight: 100 /* KeybindingWeight.EditorContrib */\n      }]\n    });\n  }\n\n  _run(controller) {\n    const result = controller.moveToNextMatch();\n    if (result) {\n      controller.editor.pushUndoStop();\n      return true;\n    }\n    return false;\n  }\n}\nexport class PreviousMatchFindAction extends MatchFindAction {\n  constructor() {\n    super({\n      id: FIND_IDS.PreviousMatchFindAction,\n      label: nls.localize('findPreviousMatchAction', \"Find Previous\"),\n      alias: 'Find Previous',\n      precondition: undefined,\n      kbOpts: [{\n        kbExpr: EditorContextKeys.focus,\n        primary: 1024 /* KeyMod.Shift */ | 61 /* KeyCode.F3 */,\n        mac: {\n          primary: 2048 /* KeyMod.CtrlCmd */ | 1024 /* KeyMod.Shift */ | 37 /* KeyCode.KeyG */,\n          secondary: [1024 /* KeyMod.Shift */ | 61 /* KeyCode.F3 */]\n        },\n        weight: 100 /* KeybindingWeight.EditorContrib */\n      }, {\n        kbExpr: ContextKeyExpr.and(EditorContextKeys.focus, CONTEXT_FIND_INPUT_FOCUSED),\n        primary: 1024 /* KeyMod.Shift */ | 3 /* KeyCode.Enter */,\n        weight: 100 /* KeybindingWeight.EditorContrib */\n      }]\n    });\n  }\n\n  _run(controller) {\n    return controller.moveToPrevMatch();\n  }\n}\nexport class MoveToMatchFindAction extends EditorAction {\n  constructor() {\n    super({\n      id: FIND_IDS.GoToMatchFindAction,\n      label: nls.localize('findMatchAction.goToMatch', \"Go to Match...\"),\n      alias: 'Go to Match...',\n      precondition: CONTEXT_FIND_WIDGET_VISIBLE\n    });\n    this._highlightDecorations = [];\n  }\n  run(accessor, editor, args) {\n    const controller = CommonFindController.get(editor);\n    if (!controller) {\n      return;\n    }\n    const matchesCount = controller.getState().matchesCount;\n    if (matchesCount < 1) {\n      const notificationService = accessor.get(INotificationService);\n      notificationService.notify({\n        severity: Severity.Warning,\n        message: nls.localize('findMatchAction.noResults', \"No matches. Try searching for something else.\")\n      });\n      return;\n    }\n    const quickInputService = accessor.get(IQuickInputService);\n    const inputBox = quickInputService.createInputBox();\n    inputBox.placeholder = nls.localize('findMatchAction.inputPlaceHolder', \"Type a number to go to a specific match (between 1 and {0})\", matchesCount);\n    const toFindMatchIndex = value => {\n      const index = parseInt(value);\n      if (isNaN(index)) {\n        return undefined;\n      }\n      const matchCount = controller.getState().matchesCount;\n      if (index > 0 && index <= matchCount) {\n        return index - 1; // zero based\n      } else if (index < 0 && index >= -matchCount) {\n        return matchCount + index;\n      }\n      return undefined;\n    };\n    const updatePickerAndEditor = value => {\n      const index = toFindMatchIndex(value);\n      if (typeof index === 'number') {\n        // valid\n        inputBox.validationMessage = undefined;\n        controller.goToMatch(index);\n        const currentMatch = controller.getState().currentMatch;\n        if (currentMatch) {\n          this.addDecorations(editor, currentMatch);\n        }\n      } else {\n        inputBox.validationMessage = nls.localize('findMatchAction.inputValidationMessage', \"Please type a number between 1 and {0}\", controller.getState().matchesCount);\n        this.clearDecorations(editor);\n      }\n    };\n    inputBox.onDidChangeValue(value => {\n      updatePickerAndEditor(value);\n    });\n    inputBox.onDidAccept(() => {\n      const index = toFindMatchIndex(inputBox.value);\n      if (typeof index === 'number') {\n        controller.goToMatch(index);\n        inputBox.hide();\n      } else {\n        inputBox.validationMessage = nls.localize('findMatchAction.inputValidationMessage', \"Please type a number between 1 and {0}\", controller.getState().matchesCount);\n      }\n    });\n    inputBox.onDidHide(() => {\n      this.clearDecorations(editor);\n      inputBox.dispose();\n    });\n    inputBox.show();\n  }\n  clearDecorations(editor) {\n    editor.changeDecorations(changeAccessor => {\n      this._highlightDecorations = changeAccessor.deltaDecorations(this._highlightDecorations, []);\n    });\n  }\n  addDecorations(editor, range) {\n    editor.changeDecorations(changeAccessor => {\n      this._highlightDecorations = changeAccessor.deltaDecorations(this._highlightDecorations, [{\n        range,\n        options: {\n          description: 'find-match-quick-access-range-highlight',\n          className: 'rangeHighlight',\n          isWholeLine: true\n        }\n      }, {\n        range,\n        options: {\n          description: 'find-match-quick-access-range-highlight-overview',\n          overviewRuler: {\n            color: themeColorFromId(overviewRulerRangeHighlight),\n            position: OverviewRulerLane.Full\n          }\n        }\n      }]);\n    });\n  }\n}\nexport class SelectionMatchFindAction extends EditorAction {\n  run(accessor, editor) {\n    return __awaiter(this, void 0, void 0, function* () {\n      const controller = CommonFindController.get(editor);\n      if (!controller) {\n        return;\n      }\n      const selectionSearchString = getSelectionSearchString(editor, 'single', false);\n      if (selectionSearchString) {\n        controller.setSearchString(selectionSearchString);\n      }\n      if (!this._run(controller)) {\n        yield controller.start({\n          forceRevealReplace: false,\n          seedSearchStringFromSelection: 'none',\n          seedSearchStringFromNonEmptySelection: false,\n          seedSearchStringFromGlobalClipboard: false,\n          shouldFocus: 0 /* FindStartFocusAction.NoFocusChange */,\n          shouldAnimate: true,\n          updateSearchScope: false,\n          loop: editor.getOption(41 /* EditorOption.find */).loop\n        });\n        this._run(controller);\n      }\n    });\n  }\n}\nexport class NextSelectionMatchFindAction extends SelectionMatchFindAction {\n  constructor() {\n    super({\n      id: FIND_IDS.NextSelectionMatchFindAction,\n      label: nls.localize('nextSelectionMatchFindAction', \"Find Next Selection\"),\n      alias: 'Find Next Selection',\n      precondition: undefined,\n      kbOpts: {\n        kbExpr: EditorContextKeys.focus,\n        primary: 2048 /* KeyMod.CtrlCmd */ | 61 /* KeyCode.F3 */,\n        weight: 100 /* KeybindingWeight.EditorContrib */\n      }\n    });\n  }\n\n  _run(controller) {\n    return controller.moveToNextMatch();\n  }\n}\nexport class PreviousSelectionMatchFindAction extends SelectionMatchFindAction {\n  constructor() {\n    super({\n      id: FIND_IDS.PreviousSelectionMatchFindAction,\n      label: nls.localize('previousSelectionMatchFindAction', \"Find Previous Selection\"),\n      alias: 'Find Previous Selection',\n      precondition: undefined,\n      kbOpts: {\n        kbExpr: EditorContextKeys.focus,\n        primary: 2048 /* KeyMod.CtrlCmd */ | 1024 /* KeyMod.Shift */ | 61 /* KeyCode.F3 */,\n        weight: 100 /* KeybindingWeight.EditorContrib */\n      }\n    });\n  }\n\n  _run(controller) {\n    return controller.moveToPrevMatch();\n  }\n}\nexport const StartFindReplaceAction = registerMultiEditorAction(new MultiEditorAction({\n  id: FIND_IDS.StartFindReplaceAction,\n  label: nls.localize('startReplace', \"Replace\"),\n  alias: 'Replace',\n  precondition: ContextKeyExpr.or(EditorContextKeys.focus, ContextKeyExpr.has('editorIsOpen')),\n  kbOpts: {\n    kbExpr: null,\n    primary: 2048 /* KeyMod.CtrlCmd */ | 38 /* KeyCode.KeyH */,\n    mac: {\n      primary: 2048 /* KeyMod.CtrlCmd */ | 512 /* KeyMod.Alt */ | 36 /* KeyCode.KeyF */\n    },\n    weight: 100 /* KeybindingWeight.EditorContrib */\n  },\n\n  menuOpts: {\n    menuId: MenuId.MenubarEditMenu,\n    group: '3_find',\n    title: nls.localize({\n      key: 'miReplace',\n      comment: ['&& denotes a mnemonic']\n    }, \"&&Replace\"),\n    order: 2\n  }\n}));\nStartFindReplaceAction.addImplementation(0, (accessor, editor, args) => {\n  if (!editor.hasModel() || editor.getOption(90 /* EditorOption.readOnly */)) {\n    return false;\n  }\n  const controller = CommonFindController.get(editor);\n  if (!controller) {\n    return false;\n  }\n  const currentSelection = editor.getSelection();\n  const findInputFocused = controller.isFindInputFocused();\n  // we only seed search string from selection when the current selection is single line and not empty,\n  // + the find input is not focused\n  const seedSearchStringFromSelection = !currentSelection.isEmpty() && currentSelection.startLineNumber === currentSelection.endLineNumber && editor.getOption(41 /* EditorOption.find */).seedSearchStringFromSelection !== 'never' && !findInputFocused;\n  /*\n  * if the existing search string in find widget is empty and we don't seed search string from selection, it means the Find Input is still empty, so we should focus the Find Input instead of Replace Input.\n   * findInputFocused true -> seedSearchStringFromSelection false, FocusReplaceInput\n  * findInputFocused false, seedSearchStringFromSelection true FocusReplaceInput\n  * findInputFocused false seedSearchStringFromSelection false FocusFindInput\n  */\n  const shouldFocus = findInputFocused || seedSearchStringFromSelection ? 2 /* FindStartFocusAction.FocusReplaceInput */ : 1 /* FindStartFocusAction.FocusFindInput */;\n  return controller.start({\n    forceRevealReplace: true,\n    seedSearchStringFromSelection: seedSearchStringFromSelection ? 'single' : 'none',\n    seedSearchStringFromNonEmptySelection: editor.getOption(41 /* EditorOption.find */).seedSearchStringFromSelection === 'selection',\n    seedSearchStringFromGlobalClipboard: editor.getOption(41 /* EditorOption.find */).seedSearchStringFromSelection !== 'never',\n    shouldFocus: shouldFocus,\n    shouldAnimate: true,\n    updateSearchScope: false,\n    loop: editor.getOption(41 /* EditorOption.find */).loop\n  });\n});\nregisterEditorContribution(CommonFindController.ID, FindController, 0 /* EditorContributionInstantiation.Eager */); // eager because it uses `saveViewState`/`restoreViewState`\nregisterEditorAction(StartFindWithArgsAction);\nregisterEditorAction(StartFindWithSelectionAction);\nregisterEditorAction(NextMatchFindAction);\nregisterEditorAction(PreviousMatchFindAction);\nregisterEditorAction(MoveToMatchFindAction);\nregisterEditorAction(NextSelectionMatchFindAction);\nregisterEditorAction(PreviousSelectionMatchFindAction);\nconst FindCommand = EditorCommand.bindToContribution(CommonFindController.get);\nregisterEditorCommand(new FindCommand({\n  id: FIND_IDS.CloseFindWidgetCommand,\n  precondition: CONTEXT_FIND_WIDGET_VISIBLE,\n  handler: x => x.closeFindWidget(),\n  kbOpts: {\n    weight: 100 /* KeybindingWeight.EditorContrib */ + 5,\n    kbExpr: ContextKeyExpr.and(EditorContextKeys.focus, ContextKeyExpr.not('isComposing')),\n    primary: 9 /* KeyCode.Escape */,\n    secondary: [1024 /* KeyMod.Shift */ | 9 /* KeyCode.Escape */]\n  }\n}));\n\nregisterEditorCommand(new FindCommand({\n  id: FIND_IDS.ToggleCaseSensitiveCommand,\n  precondition: undefined,\n  handler: x => x.toggleCaseSensitive(),\n  kbOpts: {\n    weight: 100 /* KeybindingWeight.EditorContrib */ + 5,\n    kbExpr: EditorContextKeys.focus,\n    primary: ToggleCaseSensitiveKeybinding.primary,\n    mac: ToggleCaseSensitiveKeybinding.mac,\n    win: ToggleCaseSensitiveKeybinding.win,\n    linux: ToggleCaseSensitiveKeybinding.linux\n  }\n}));\nregisterEditorCommand(new FindCommand({\n  id: FIND_IDS.ToggleWholeWordCommand,\n  precondition: undefined,\n  handler: x => x.toggleWholeWords(),\n  kbOpts: {\n    weight: 100 /* KeybindingWeight.EditorContrib */ + 5,\n    kbExpr: EditorContextKeys.focus,\n    primary: ToggleWholeWordKeybinding.primary,\n    mac: ToggleWholeWordKeybinding.mac,\n    win: ToggleWholeWordKeybinding.win,\n    linux: ToggleWholeWordKeybinding.linux\n  }\n}));\nregisterEditorCommand(new FindCommand({\n  id: FIND_IDS.ToggleRegexCommand,\n  precondition: undefined,\n  handler: x => x.toggleRegex(),\n  kbOpts: {\n    weight: 100 /* KeybindingWeight.EditorContrib */ + 5,\n    kbExpr: EditorContextKeys.focus,\n    primary: ToggleRegexKeybinding.primary,\n    mac: ToggleRegexKeybinding.mac,\n    win: ToggleRegexKeybinding.win,\n    linux: ToggleRegexKeybinding.linux\n  }\n}));\nregisterEditorCommand(new FindCommand({\n  id: FIND_IDS.ToggleSearchScopeCommand,\n  precondition: undefined,\n  handler: x => x.toggleSearchScope(),\n  kbOpts: {\n    weight: 100 /* KeybindingWeight.EditorContrib */ + 5,\n    kbExpr: EditorContextKeys.focus,\n    primary: ToggleSearchScopeKeybinding.primary,\n    mac: ToggleSearchScopeKeybinding.mac,\n    win: ToggleSearchScopeKeybinding.win,\n    linux: ToggleSearchScopeKeybinding.linux\n  }\n}));\nregisterEditorCommand(new FindCommand({\n  id: FIND_IDS.TogglePreserveCaseCommand,\n  precondition: undefined,\n  handler: x => x.togglePreserveCase(),\n  kbOpts: {\n    weight: 100 /* KeybindingWeight.EditorContrib */ + 5,\n    kbExpr: EditorContextKeys.focus,\n    primary: TogglePreserveCaseKeybinding.primary,\n    mac: TogglePreserveCaseKeybinding.mac,\n    win: TogglePreserveCaseKeybinding.win,\n    linux: TogglePreserveCaseKeybinding.linux\n  }\n}));\nregisterEditorCommand(new FindCommand({\n  id: FIND_IDS.ReplaceOneAction,\n  precondition: CONTEXT_FIND_WIDGET_VISIBLE,\n  handler: x => x.replace(),\n  kbOpts: {\n    weight: 100 /* KeybindingWeight.EditorContrib */ + 5,\n    kbExpr: EditorContextKeys.focus,\n    primary: 2048 /* KeyMod.CtrlCmd */ | 1024 /* KeyMod.Shift */ | 22 /* KeyCode.Digit1 */\n  }\n}));\n\nregisterEditorCommand(new FindCommand({\n  id: FIND_IDS.ReplaceOneAction,\n  precondition: CONTEXT_FIND_WIDGET_VISIBLE,\n  handler: x => x.replace(),\n  kbOpts: {\n    weight: 100 /* KeybindingWeight.EditorContrib */ + 5,\n    kbExpr: ContextKeyExpr.and(EditorContextKeys.focus, CONTEXT_REPLACE_INPUT_FOCUSED),\n    primary: 3 /* KeyCode.Enter */\n  }\n}));\n\nregisterEditorCommand(new FindCommand({\n  id: FIND_IDS.ReplaceAllAction,\n  precondition: CONTEXT_FIND_WIDGET_VISIBLE,\n  handler: x => x.replaceAll(),\n  kbOpts: {\n    weight: 100 /* KeybindingWeight.EditorContrib */ + 5,\n    kbExpr: EditorContextKeys.focus,\n    primary: 2048 /* KeyMod.CtrlCmd */ | 512 /* KeyMod.Alt */ | 3 /* KeyCode.Enter */\n  }\n}));\n\nregisterEditorCommand(new FindCommand({\n  id: FIND_IDS.ReplaceAllAction,\n  precondition: CONTEXT_FIND_WIDGET_VISIBLE,\n  handler: x => x.replaceAll(),\n  kbOpts: {\n    weight: 100 /* KeybindingWeight.EditorContrib */ + 5,\n    kbExpr: ContextKeyExpr.and(EditorContextKeys.focus, CONTEXT_REPLACE_INPUT_FOCUSED),\n    primary: undefined,\n    mac: {\n      primary: 2048 /* KeyMod.CtrlCmd */ | 3 /* KeyCode.Enter */\n    }\n  }\n}));\n\nregisterEditorCommand(new FindCommand({\n  id: FIND_IDS.SelectAllMatchesAction,\n  precondition: CONTEXT_FIND_WIDGET_VISIBLE,\n  handler: x => x.selectAllMatches(),\n  kbOpts: {\n    weight: 100 /* KeybindingWeight.EditorContrib */ + 5,\n    kbExpr: EditorContextKeys.focus,\n    primary: 512 /* KeyMod.Alt */ | 3 /* KeyCode.Enter */\n  }\n}));","map":{"version":3,"names":["__decorate","decorators","target","key","desc","c","arguments","length","r","Object","getOwnPropertyDescriptor","d","Reflect","decorate","i","defineProperty","__param","paramIndex","decorator","__awaiter","thisArg","_arguments","P","generator","adopt","value","resolve","Promise","reject","fulfilled","step","next","e","rejected","result","done","then","apply","CommonFindController_1","Delayer","Disposable","strings","EditorAction","EditorCommand","MultiEditorAction","registerEditorAction","registerEditorCommand","registerEditorContribution","registerMultiEditorAction","overviewRulerRangeHighlight","EditorContextKeys","OverviewRulerLane","CONTEXT_FIND_INPUT_FOCUSED","CONTEXT_FIND_WIDGET_VISIBLE","CONTEXT_REPLACE_INPUT_FOCUSED","FindModelBoundToEditorModel","FIND_IDS","ToggleCaseSensitiveKeybinding","TogglePreserveCaseKeybinding","ToggleRegexKeybinding","ToggleSearchScopeKeybinding","ToggleWholeWordKeybinding","FindOptionsWidget","FindReplaceState","FindWidget","nls","MenuId","IClipboardService","ContextKeyExpr","IContextKeyService","IContextViewService","IKeybindingService","INotificationService","Severity","IQuickInputService","IStorageService","IThemeService","themeColorFromId","SEARCH_STRING_MAX_LENGTH","getSelectionSearchString","editor","seedSearchStringFromSelection","seedSearchStringFromNonEmptySelection","hasModel","selection","getSelection","startLineNumber","endLineNumber","isEmpty","wordAtPosition","getConfiguredWordAtPosition","getStartPosition","word","getModel","getValueLengthInRange","getValueInRange","CommonFindController","_editor","get","getContribution","ID","constructor","contextKeyService","storageService","clipboardService","notificationService","_findWidgetVisible","bindTo","_contextKeyService","_storageService","_clipboardService","_notificationService","_updateHistoryDelayer","_state","_register","loadQueryState","onFindReplaceStateChange","_onStateChanged","_model","onDidChangeModel","shouldRestartFind","isRevealed","disposeModel","change","searchScope","matchCase","getBoolean","wholeWord","isRegex","preserveCase","_start","forceRevealReplace","seedSearchStringFromGlobalClipboard","shouldFocus","shouldAnimate","updateSearchScope","loop","getOption","dispose","saveQueryState","set","reset","searchString","setGlobalBufferTerm","store","actualIsRegex","actualWholeWord","actualMatchCase","actualPreserveCase","isFindInputFocused","getValue","getState","closeFindWidget","focus","toggleCaseSensitive","highlightFindOptions","toggleWholeWords","toggleRegex","togglePreserveCase","toggleSearchScope","selections","getSelections","map","endColumn","setEndPosition","getLineMaxColumn","filter","element","setSearchString","escapeRegExpCharacters","ignoreWhenVisible","opts","newState","stateChanges","assign","selectionSearchString","getGlobalBufferTerm","isReplaceRevealed","currentSelections","some","start","moveToNextMatch","moveToPrevMatch","goToMatch","index","moveToMatch","replace","replaceAll","_a","isTooLargeForHeapOperation","warn","localize","selectAllMatches","globalFindClipboard","isTooLargeForSyncing","readFindText","text","writeFindText","FindController","_contextViewService","_keybindingService","_themeService","_widget","_findOptionsWidget","_super","create","_createFindWidget","autoFindInSelection","isSelectionMultipleLine","call","focusReplaceInput","focusFindInput","StartFindAction","id","label","alias","precondition","or","has","kbOpts","kbExpr","primary","weight","menuOpts","menuId","MenubarEditMenu","group","title","comment","order","addImplementation","accessor","args","controller","findArgDescription","description","name","schema","properties","type","replaceString","regex","regexOverride","wholeWordOverride","matchCaseOverride","preserveCaseOverride","findInSelection","StartFindWithArgsAction","StartFindWithArgs","undefined","run","matchWholeWord","isCaseSensitive","StartFindWithSelectionAction","StartFindWithSelection","mac","MatchFindAction","_run","NextMatchFindAction","secondary","and","pushUndoStop","PreviousMatchFindAction","MoveToMatchFindAction","GoToMatchFindAction","_highlightDecorations","matchesCount","notify","severity","Warning","message","quickInputService","inputBox","createInputBox","placeholder","toFindMatchIndex","parseInt","isNaN","matchCount","updatePickerAndEditor","validationMessage","currentMatch","addDecorations","clearDecorations","onDidChangeValue","onDidAccept","hide","onDidHide","show","changeDecorations","changeAccessor","deltaDecorations","range","options","className","isWholeLine","overviewRuler","color","position","Full","SelectionMatchFindAction","NextSelectionMatchFindAction","PreviousSelectionMatchFindAction","StartFindReplaceAction","currentSelection","findInputFocused","FindCommand","bindToContribution","CloseFindWidgetCommand","handler","x","not","ToggleCaseSensitiveCommand","win","linux","ToggleWholeWordCommand","ToggleRegexCommand","ToggleSearchScopeCommand","TogglePreserveCaseCommand","ReplaceOneAction","ReplaceAllAction","SelectAllMatchesAction"],"sources":["/home/chlohest/work/website/my_web/node_modules/monaco-editor/esm/vs/editor/contrib/find/browser/findController.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar CommonFindController_1;\nimport { Delayer } from '../../../../base/common/async.js';\nimport { Disposable } from '../../../../base/common/lifecycle.js';\nimport * as strings from '../../../../base/common/strings.js';\nimport { EditorAction, EditorCommand, MultiEditorAction, registerEditorAction, registerEditorCommand, registerEditorContribution, registerMultiEditorAction } from '../../../browser/editorExtensions.js';\nimport { overviewRulerRangeHighlight } from '../../../common/core/editorColorRegistry.js';\nimport { EditorContextKeys } from '../../../common/editorContextKeys.js';\nimport { OverviewRulerLane } from '../../../common/model.js';\nimport { CONTEXT_FIND_INPUT_FOCUSED, CONTEXT_FIND_WIDGET_VISIBLE, CONTEXT_REPLACE_INPUT_FOCUSED, FindModelBoundToEditorModel, FIND_IDS, ToggleCaseSensitiveKeybinding, TogglePreserveCaseKeybinding, ToggleRegexKeybinding, ToggleSearchScopeKeybinding, ToggleWholeWordKeybinding } from './findModel.js';\nimport { FindOptionsWidget } from './findOptionsWidget.js';\nimport { FindReplaceState } from './findState.js';\nimport { FindWidget } from './findWidget.js';\nimport * as nls from '../../../../nls.js';\nimport { MenuId } from '../../../../platform/actions/common/actions.js';\nimport { IClipboardService } from '../../../../platform/clipboard/common/clipboardService.js';\nimport { ContextKeyExpr, IContextKeyService } from '../../../../platform/contextkey/common/contextkey.js';\nimport { IContextViewService } from '../../../../platform/contextview/browser/contextView.js';\nimport { IKeybindingService } from '../../../../platform/keybinding/common/keybinding.js';\nimport { INotificationService, Severity } from '../../../../platform/notification/common/notification.js';\nimport { IQuickInputService } from '../../../../platform/quickinput/common/quickInput.js';\nimport { IStorageService } from '../../../../platform/storage/common/storage.js';\nimport { IThemeService, themeColorFromId } from '../../../../platform/theme/common/themeService.js';\nconst SEARCH_STRING_MAX_LENGTH = 524288;\nexport function getSelectionSearchString(editor, seedSearchStringFromSelection = 'single', seedSearchStringFromNonEmptySelection = false) {\n    if (!editor.hasModel()) {\n        return null;\n    }\n    const selection = editor.getSelection();\n    // if selection spans multiple lines, default search string to empty\n    if ((seedSearchStringFromSelection === 'single' && selection.startLineNumber === selection.endLineNumber)\n        || seedSearchStringFromSelection === 'multiple') {\n        if (selection.isEmpty()) {\n            const wordAtPosition = editor.getConfiguredWordAtPosition(selection.getStartPosition());\n            if (wordAtPosition && (false === seedSearchStringFromNonEmptySelection)) {\n                return wordAtPosition.word;\n            }\n        }\n        else {\n            if (editor.getModel().getValueLengthInRange(selection) < SEARCH_STRING_MAX_LENGTH) {\n                return editor.getModel().getValueInRange(selection);\n            }\n        }\n    }\n    return null;\n}\nlet CommonFindController = CommonFindController_1 = class CommonFindController extends Disposable {\n    get editor() {\n        return this._editor;\n    }\n    static get(editor) {\n        return editor.getContribution(CommonFindController_1.ID);\n    }\n    constructor(editor, contextKeyService, storageService, clipboardService, notificationService) {\n        super();\n        this._editor = editor;\n        this._findWidgetVisible = CONTEXT_FIND_WIDGET_VISIBLE.bindTo(contextKeyService);\n        this._contextKeyService = contextKeyService;\n        this._storageService = storageService;\n        this._clipboardService = clipboardService;\n        this._notificationService = notificationService;\n        this._updateHistoryDelayer = new Delayer(500);\n        this._state = this._register(new FindReplaceState());\n        this.loadQueryState();\n        this._register(this._state.onFindReplaceStateChange((e) => this._onStateChanged(e)));\n        this._model = null;\n        this._register(this._editor.onDidChangeModel(() => {\n            const shouldRestartFind = (this._editor.getModel() && this._state.isRevealed);\n            this.disposeModel();\n            this._state.change({\n                searchScope: null,\n                matchCase: this._storageService.getBoolean('editor.matchCase', 1 /* StorageScope.WORKSPACE */, false),\n                wholeWord: this._storageService.getBoolean('editor.wholeWord', 1 /* StorageScope.WORKSPACE */, false),\n                isRegex: this._storageService.getBoolean('editor.isRegex', 1 /* StorageScope.WORKSPACE */, false),\n                preserveCase: this._storageService.getBoolean('editor.preserveCase', 1 /* StorageScope.WORKSPACE */, false)\n            }, false);\n            if (shouldRestartFind) {\n                this._start({\n                    forceRevealReplace: false,\n                    seedSearchStringFromSelection: 'none',\n                    seedSearchStringFromNonEmptySelection: false,\n                    seedSearchStringFromGlobalClipboard: false,\n                    shouldFocus: 0 /* FindStartFocusAction.NoFocusChange */,\n                    shouldAnimate: false,\n                    updateSearchScope: false,\n                    loop: this._editor.getOption(41 /* EditorOption.find */).loop\n                });\n            }\n        }));\n    }\n    dispose() {\n        this.disposeModel();\n        super.dispose();\n    }\n    disposeModel() {\n        if (this._model) {\n            this._model.dispose();\n            this._model = null;\n        }\n    }\n    _onStateChanged(e) {\n        this.saveQueryState(e);\n        if (e.isRevealed) {\n            if (this._state.isRevealed) {\n                this._findWidgetVisible.set(true);\n            }\n            else {\n                this._findWidgetVisible.reset();\n                this.disposeModel();\n            }\n        }\n        if (e.searchString) {\n            this.setGlobalBufferTerm(this._state.searchString);\n        }\n    }\n    saveQueryState(e) {\n        if (e.isRegex) {\n            this._storageService.store('editor.isRegex', this._state.actualIsRegex, 1 /* StorageScope.WORKSPACE */, 1 /* StorageTarget.MACHINE */);\n        }\n        if (e.wholeWord) {\n            this._storageService.store('editor.wholeWord', this._state.actualWholeWord, 1 /* StorageScope.WORKSPACE */, 1 /* StorageTarget.MACHINE */);\n        }\n        if (e.matchCase) {\n            this._storageService.store('editor.matchCase', this._state.actualMatchCase, 1 /* StorageScope.WORKSPACE */, 1 /* StorageTarget.MACHINE */);\n        }\n        if (e.preserveCase) {\n            this._storageService.store('editor.preserveCase', this._state.actualPreserveCase, 1 /* StorageScope.WORKSPACE */, 1 /* StorageTarget.MACHINE */);\n        }\n    }\n    loadQueryState() {\n        this._state.change({\n            matchCase: this._storageService.getBoolean('editor.matchCase', 1 /* StorageScope.WORKSPACE */, this._state.matchCase),\n            wholeWord: this._storageService.getBoolean('editor.wholeWord', 1 /* StorageScope.WORKSPACE */, this._state.wholeWord),\n            isRegex: this._storageService.getBoolean('editor.isRegex', 1 /* StorageScope.WORKSPACE */, this._state.isRegex),\n            preserveCase: this._storageService.getBoolean('editor.preserveCase', 1 /* StorageScope.WORKSPACE */, this._state.preserveCase)\n        }, false);\n    }\n    isFindInputFocused() {\n        return !!CONTEXT_FIND_INPUT_FOCUSED.getValue(this._contextKeyService);\n    }\n    getState() {\n        return this._state;\n    }\n    closeFindWidget() {\n        this._state.change({\n            isRevealed: false,\n            searchScope: null\n        }, false);\n        this._editor.focus();\n    }\n    toggleCaseSensitive() {\n        this._state.change({ matchCase: !this._state.matchCase }, false);\n        if (!this._state.isRevealed) {\n            this.highlightFindOptions();\n        }\n    }\n    toggleWholeWords() {\n        this._state.change({ wholeWord: !this._state.wholeWord }, false);\n        if (!this._state.isRevealed) {\n            this.highlightFindOptions();\n        }\n    }\n    toggleRegex() {\n        this._state.change({ isRegex: !this._state.isRegex }, false);\n        if (!this._state.isRevealed) {\n            this.highlightFindOptions();\n        }\n    }\n    togglePreserveCase() {\n        this._state.change({ preserveCase: !this._state.preserveCase }, false);\n        if (!this._state.isRevealed) {\n            this.highlightFindOptions();\n        }\n    }\n    toggleSearchScope() {\n        if (this._state.searchScope) {\n            this._state.change({ searchScope: null }, true);\n        }\n        else {\n            if (this._editor.hasModel()) {\n                const selections = this._editor.getSelections();\n                selections.map(selection => {\n                    if (selection.endColumn === 1 && selection.endLineNumber > selection.startLineNumber) {\n                        selection = selection.setEndPosition(selection.endLineNumber - 1, this._editor.getModel().getLineMaxColumn(selection.endLineNumber - 1));\n                    }\n                    if (!selection.isEmpty()) {\n                        return selection;\n                    }\n                    return null;\n                }).filter(element => !!element);\n                if (selections.length) {\n                    this._state.change({ searchScope: selections }, true);\n                }\n            }\n        }\n    }\n    setSearchString(searchString) {\n        if (this._state.isRegex) {\n            searchString = strings.escapeRegExpCharacters(searchString);\n        }\n        this._state.change({ searchString: searchString }, false);\n    }\n    highlightFindOptions(ignoreWhenVisible = false) {\n        // overwritten in subclass\n    }\n    _start(opts, newState) {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.disposeModel();\n            if (!this._editor.hasModel()) {\n                // cannot do anything with an editor that doesn't have a model...\n                return;\n            }\n            const stateChanges = Object.assign(Object.assign({}, newState), { isRevealed: true });\n            if (opts.seedSearchStringFromSelection === 'single') {\n                const selectionSearchString = getSelectionSearchString(this._editor, opts.seedSearchStringFromSelection, opts.seedSearchStringFromNonEmptySelection);\n                if (selectionSearchString) {\n                    if (this._state.isRegex) {\n                        stateChanges.searchString = strings.escapeRegExpCharacters(selectionSearchString);\n                    }\n                    else {\n                        stateChanges.searchString = selectionSearchString;\n                    }\n                }\n            }\n            else if (opts.seedSearchStringFromSelection === 'multiple' && !opts.updateSearchScope) {\n                const selectionSearchString = getSelectionSearchString(this._editor, opts.seedSearchStringFromSelection);\n                if (selectionSearchString) {\n                    stateChanges.searchString = selectionSearchString;\n                }\n            }\n            if (!stateChanges.searchString && opts.seedSearchStringFromGlobalClipboard) {\n                const selectionSearchString = yield this.getGlobalBufferTerm();\n                if (!this._editor.hasModel()) {\n                    // the editor has lost its model in the meantime\n                    return;\n                }\n                if (selectionSearchString) {\n                    stateChanges.searchString = selectionSearchString;\n                }\n            }\n            // Overwrite isReplaceRevealed\n            if (opts.forceRevealReplace || stateChanges.isReplaceRevealed) {\n                stateChanges.isReplaceRevealed = true;\n            }\n            else if (!this._findWidgetVisible.get()) {\n                stateChanges.isReplaceRevealed = false;\n            }\n            if (opts.updateSearchScope) {\n                const currentSelections = this._editor.getSelections();\n                if (currentSelections.some(selection => !selection.isEmpty())) {\n                    stateChanges.searchScope = currentSelections;\n                }\n            }\n            stateChanges.loop = opts.loop;\n            this._state.change(stateChanges, false);\n            if (!this._model) {\n                this._model = new FindModelBoundToEditorModel(this._editor, this._state);\n            }\n        });\n    }\n    start(opts, newState) {\n        return this._start(opts, newState);\n    }\n    moveToNextMatch() {\n        if (this._model) {\n            this._model.moveToNextMatch();\n            return true;\n        }\n        return false;\n    }\n    moveToPrevMatch() {\n        if (this._model) {\n            this._model.moveToPrevMatch();\n            return true;\n        }\n        return false;\n    }\n    goToMatch(index) {\n        if (this._model) {\n            this._model.moveToMatch(index);\n            return true;\n        }\n        return false;\n    }\n    replace() {\n        if (this._model) {\n            this._model.replace();\n            return true;\n        }\n        return false;\n    }\n    replaceAll() {\n        var _a;\n        if (this._model) {\n            if ((_a = this._editor.getModel()) === null || _a === void 0 ? void 0 : _a.isTooLargeForHeapOperation()) {\n                this._notificationService.warn(nls.localize('too.large.for.replaceall', \"The file is too large to perform a replace all operation.\"));\n                return false;\n            }\n            this._model.replaceAll();\n            return true;\n        }\n        return false;\n    }\n    selectAllMatches() {\n        if (this._model) {\n            this._model.selectAllMatches();\n            this._editor.focus();\n            return true;\n        }\n        return false;\n    }\n    getGlobalBufferTerm() {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (this._editor.getOption(41 /* EditorOption.find */).globalFindClipboard\n                && this._editor.hasModel()\n                && !this._editor.getModel().isTooLargeForSyncing()) {\n                return this._clipboardService.readFindText();\n            }\n            return '';\n        });\n    }\n    setGlobalBufferTerm(text) {\n        if (this._editor.getOption(41 /* EditorOption.find */).globalFindClipboard\n            && this._editor.hasModel()\n            && !this._editor.getModel().isTooLargeForSyncing()) {\n            // intentionally not awaited\n            this._clipboardService.writeFindText(text);\n        }\n    }\n};\nCommonFindController.ID = 'editor.contrib.findController';\nCommonFindController = CommonFindController_1 = __decorate([\n    __param(1, IContextKeyService),\n    __param(2, IStorageService),\n    __param(3, IClipboardService),\n    __param(4, INotificationService)\n], CommonFindController);\nexport { CommonFindController };\nlet FindController = class FindController extends CommonFindController {\n    constructor(editor, _contextViewService, _contextKeyService, _keybindingService, _themeService, notificationService, _storageService, clipboardService) {\n        super(editor, _contextKeyService, _storageService, clipboardService, notificationService);\n        this._contextViewService = _contextViewService;\n        this._keybindingService = _keybindingService;\n        this._themeService = _themeService;\n        this._widget = null;\n        this._findOptionsWidget = null;\n    }\n    _start(opts, newState) {\n        const _super = Object.create(null, {\n            _start: { get: () => super._start }\n        });\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!this._widget) {\n                this._createFindWidget();\n            }\n            const selection = this._editor.getSelection();\n            let updateSearchScope = false;\n            switch (this._editor.getOption(41 /* EditorOption.find */).autoFindInSelection) {\n                case 'always':\n                    updateSearchScope = true;\n                    break;\n                case 'never':\n                    updateSearchScope = false;\n                    break;\n                case 'multiline': {\n                    const isSelectionMultipleLine = !!selection && selection.startLineNumber !== selection.endLineNumber;\n                    updateSearchScope = isSelectionMultipleLine;\n                    break;\n                }\n                default:\n                    break;\n            }\n            opts.updateSearchScope = opts.updateSearchScope || updateSearchScope;\n            yield _super._start.call(this, opts, newState);\n            if (this._widget) {\n                if (opts.shouldFocus === 2 /* FindStartFocusAction.FocusReplaceInput */) {\n                    this._widget.focusReplaceInput();\n                }\n                else if (opts.shouldFocus === 1 /* FindStartFocusAction.FocusFindInput */) {\n                    this._widget.focusFindInput();\n                }\n            }\n        });\n    }\n    highlightFindOptions(ignoreWhenVisible = false) {\n        if (!this._widget) {\n            this._createFindWidget();\n        }\n        if (this._state.isRevealed && !ignoreWhenVisible) {\n            this._widget.highlightFindOptions();\n        }\n        else {\n            this._findOptionsWidget.highlightFindOptions();\n        }\n    }\n    _createFindWidget() {\n        this._widget = this._register(new FindWidget(this._editor, this, this._state, this._contextViewService, this._keybindingService, this._contextKeyService, this._themeService, this._storageService, this._notificationService));\n        this._findOptionsWidget = this._register(new FindOptionsWidget(this._editor, this._state, this._keybindingService));\n    }\n};\nFindController = __decorate([\n    __param(1, IContextViewService),\n    __param(2, IContextKeyService),\n    __param(3, IKeybindingService),\n    __param(4, IThemeService),\n    __param(5, INotificationService),\n    __param(6, IStorageService),\n    __param(7, IClipboardService)\n], FindController);\nexport { FindController };\nexport const StartFindAction = registerMultiEditorAction(new MultiEditorAction({\n    id: FIND_IDS.StartFindAction,\n    label: nls.localize('startFindAction', \"Find\"),\n    alias: 'Find',\n    precondition: ContextKeyExpr.or(EditorContextKeys.focus, ContextKeyExpr.has('editorIsOpen')),\n    kbOpts: {\n        kbExpr: null,\n        primary: 2048 /* KeyMod.CtrlCmd */ | 36 /* KeyCode.KeyF */,\n        weight: 100 /* KeybindingWeight.EditorContrib */\n    },\n    menuOpts: {\n        menuId: MenuId.MenubarEditMenu,\n        group: '3_find',\n        title: nls.localize({ key: 'miFind', comment: ['&& denotes a mnemonic'] }, \"&&Find\"),\n        order: 1\n    }\n}));\nStartFindAction.addImplementation(0, (accessor, editor, args) => {\n    const controller = CommonFindController.get(editor);\n    if (!controller) {\n        return false;\n    }\n    return controller.start({\n        forceRevealReplace: false,\n        seedSearchStringFromSelection: editor.getOption(41 /* EditorOption.find */).seedSearchStringFromSelection !== 'never' ? 'single' : 'none',\n        seedSearchStringFromNonEmptySelection: editor.getOption(41 /* EditorOption.find */).seedSearchStringFromSelection === 'selection',\n        seedSearchStringFromGlobalClipboard: editor.getOption(41 /* EditorOption.find */).globalFindClipboard,\n        shouldFocus: 1 /* FindStartFocusAction.FocusFindInput */,\n        shouldAnimate: true,\n        updateSearchScope: false,\n        loop: editor.getOption(41 /* EditorOption.find */).loop\n    });\n});\nconst findArgDescription = {\n    description: 'Open a new In-Editor Find Widget.',\n    args: [{\n            name: 'Open a new In-Editor Find Widget args',\n            schema: {\n                properties: {\n                    searchString: { type: 'string' },\n                    replaceString: { type: 'string' },\n                    regex: { type: 'boolean' },\n                    regexOverride: {\n                        type: 'number',\n                        description: nls.localize('actions.find.isRegexOverride', 'Overrides \"Use Regular Expression\" flag.\\nThe flag will not be saved for the future.\\n0: Do Nothing\\n1: True\\n2: False')\n                    },\n                    wholeWord: { type: 'boolean' },\n                    wholeWordOverride: {\n                        type: 'number',\n                        description: nls.localize('actions.find.wholeWordOverride', 'Overrides \"Match Whole Word\" flag.\\nThe flag will not be saved for the future.\\n0: Do Nothing\\n1: True\\n2: False')\n                    },\n                    matchCase: { type: 'boolean' },\n                    matchCaseOverride: {\n                        type: 'number',\n                        description: nls.localize('actions.find.matchCaseOverride', 'Overrides \"Math Case\" flag.\\nThe flag will not be saved for the future.\\n0: Do Nothing\\n1: True\\n2: False')\n                    },\n                    preserveCase: { type: 'boolean' },\n                    preserveCaseOverride: {\n                        type: 'number',\n                        description: nls.localize('actions.find.preserveCaseOverride', 'Overrides \"Preserve Case\" flag.\\nThe flag will not be saved for the future.\\n0: Do Nothing\\n1: True\\n2: False')\n                    },\n                    findInSelection: { type: 'boolean' },\n                }\n            }\n        }]\n};\nexport class StartFindWithArgsAction extends EditorAction {\n    constructor() {\n        super({\n            id: FIND_IDS.StartFindWithArgs,\n            label: nls.localize('startFindWithArgsAction', \"Find With Arguments\"),\n            alias: 'Find With Arguments',\n            precondition: undefined,\n            kbOpts: {\n                kbExpr: null,\n                primary: 0,\n                weight: 100 /* KeybindingWeight.EditorContrib */\n            },\n            description: findArgDescription\n        });\n    }\n    run(accessor, editor, args) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const controller = CommonFindController.get(editor);\n            if (controller) {\n                const newState = args ? {\n                    searchString: args.searchString,\n                    replaceString: args.replaceString,\n                    isReplaceRevealed: args.replaceString !== undefined,\n                    isRegex: args.isRegex,\n                    // isRegexOverride: args.regexOverride,\n                    wholeWord: args.matchWholeWord,\n                    // wholeWordOverride: args.wholeWordOverride,\n                    matchCase: args.isCaseSensitive,\n                    // matchCaseOverride: args.matchCaseOverride,\n                    preserveCase: args.preserveCase,\n                    // preserveCaseOverride: args.preserveCaseOverride,\n                } : {};\n                yield controller.start({\n                    forceRevealReplace: false,\n                    seedSearchStringFromSelection: (controller.getState().searchString.length === 0) && editor.getOption(41 /* EditorOption.find */).seedSearchStringFromSelection !== 'never' ? 'single' : 'none',\n                    seedSearchStringFromNonEmptySelection: editor.getOption(41 /* EditorOption.find */).seedSearchStringFromSelection === 'selection',\n                    seedSearchStringFromGlobalClipboard: true,\n                    shouldFocus: 1 /* FindStartFocusAction.FocusFindInput */,\n                    shouldAnimate: true,\n                    updateSearchScope: (args === null || args === void 0 ? void 0 : args.findInSelection) || false,\n                    loop: editor.getOption(41 /* EditorOption.find */).loop\n                }, newState);\n                controller.setGlobalBufferTerm(controller.getState().searchString);\n            }\n        });\n    }\n}\nexport class StartFindWithSelectionAction extends EditorAction {\n    constructor() {\n        super({\n            id: FIND_IDS.StartFindWithSelection,\n            label: nls.localize('startFindWithSelectionAction', \"Find With Selection\"),\n            alias: 'Find With Selection',\n            precondition: undefined,\n            kbOpts: {\n                kbExpr: null,\n                primary: 0,\n                mac: {\n                    primary: 2048 /* KeyMod.CtrlCmd */ | 35 /* KeyCode.KeyE */,\n                },\n                weight: 100 /* KeybindingWeight.EditorContrib */\n            }\n        });\n    }\n    run(accessor, editor) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const controller = CommonFindController.get(editor);\n            if (controller) {\n                yield controller.start({\n                    forceRevealReplace: false,\n                    seedSearchStringFromSelection: 'multiple',\n                    seedSearchStringFromNonEmptySelection: false,\n                    seedSearchStringFromGlobalClipboard: false,\n                    shouldFocus: 0 /* FindStartFocusAction.NoFocusChange */,\n                    shouldAnimate: true,\n                    updateSearchScope: false,\n                    loop: editor.getOption(41 /* EditorOption.find */).loop\n                });\n                controller.setGlobalBufferTerm(controller.getState().searchString);\n            }\n        });\n    }\n}\nexport class MatchFindAction extends EditorAction {\n    run(accessor, editor) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const controller = CommonFindController.get(editor);\n            if (controller && !this._run(controller)) {\n                yield controller.start({\n                    forceRevealReplace: false,\n                    seedSearchStringFromSelection: (controller.getState().searchString.length === 0) && editor.getOption(41 /* EditorOption.find */).seedSearchStringFromSelection !== 'never' ? 'single' : 'none',\n                    seedSearchStringFromNonEmptySelection: editor.getOption(41 /* EditorOption.find */).seedSearchStringFromSelection === 'selection',\n                    seedSearchStringFromGlobalClipboard: true,\n                    shouldFocus: 0 /* FindStartFocusAction.NoFocusChange */,\n                    shouldAnimate: true,\n                    updateSearchScope: false,\n                    loop: editor.getOption(41 /* EditorOption.find */).loop\n                });\n                this._run(controller);\n            }\n        });\n    }\n}\nexport class NextMatchFindAction extends MatchFindAction {\n    constructor() {\n        super({\n            id: FIND_IDS.NextMatchFindAction,\n            label: nls.localize('findNextMatchAction', \"Find Next\"),\n            alias: 'Find Next',\n            precondition: undefined,\n            kbOpts: [{\n                    kbExpr: EditorContextKeys.focus,\n                    primary: 61 /* KeyCode.F3 */,\n                    mac: { primary: 2048 /* KeyMod.CtrlCmd */ | 37 /* KeyCode.KeyG */, secondary: [61 /* KeyCode.F3 */] },\n                    weight: 100 /* KeybindingWeight.EditorContrib */\n                }, {\n                    kbExpr: ContextKeyExpr.and(EditorContextKeys.focus, CONTEXT_FIND_INPUT_FOCUSED),\n                    primary: 3 /* KeyCode.Enter */,\n                    weight: 100 /* KeybindingWeight.EditorContrib */\n                }]\n        });\n    }\n    _run(controller) {\n        const result = controller.moveToNextMatch();\n        if (result) {\n            controller.editor.pushUndoStop();\n            return true;\n        }\n        return false;\n    }\n}\nexport class PreviousMatchFindAction extends MatchFindAction {\n    constructor() {\n        super({\n            id: FIND_IDS.PreviousMatchFindAction,\n            label: nls.localize('findPreviousMatchAction', \"Find Previous\"),\n            alias: 'Find Previous',\n            precondition: undefined,\n            kbOpts: [{\n                    kbExpr: EditorContextKeys.focus,\n                    primary: 1024 /* KeyMod.Shift */ | 61 /* KeyCode.F3 */,\n                    mac: { primary: 2048 /* KeyMod.CtrlCmd */ | 1024 /* KeyMod.Shift */ | 37 /* KeyCode.KeyG */, secondary: [1024 /* KeyMod.Shift */ | 61 /* KeyCode.F3 */] },\n                    weight: 100 /* KeybindingWeight.EditorContrib */\n                }, {\n                    kbExpr: ContextKeyExpr.and(EditorContextKeys.focus, CONTEXT_FIND_INPUT_FOCUSED),\n                    primary: 1024 /* KeyMod.Shift */ | 3 /* KeyCode.Enter */,\n                    weight: 100 /* KeybindingWeight.EditorContrib */\n                }\n            ]\n        });\n    }\n    _run(controller) {\n        return controller.moveToPrevMatch();\n    }\n}\nexport class MoveToMatchFindAction extends EditorAction {\n    constructor() {\n        super({\n            id: FIND_IDS.GoToMatchFindAction,\n            label: nls.localize('findMatchAction.goToMatch', \"Go to Match...\"),\n            alias: 'Go to Match...',\n            precondition: CONTEXT_FIND_WIDGET_VISIBLE\n        });\n        this._highlightDecorations = [];\n    }\n    run(accessor, editor, args) {\n        const controller = CommonFindController.get(editor);\n        if (!controller) {\n            return;\n        }\n        const matchesCount = controller.getState().matchesCount;\n        if (matchesCount < 1) {\n            const notificationService = accessor.get(INotificationService);\n            notificationService.notify({\n                severity: Severity.Warning,\n                message: nls.localize('findMatchAction.noResults', \"No matches. Try searching for something else.\")\n            });\n            return;\n        }\n        const quickInputService = accessor.get(IQuickInputService);\n        const inputBox = quickInputService.createInputBox();\n        inputBox.placeholder = nls.localize('findMatchAction.inputPlaceHolder', \"Type a number to go to a specific match (between 1 and {0})\", matchesCount);\n        const toFindMatchIndex = (value) => {\n            const index = parseInt(value);\n            if (isNaN(index)) {\n                return undefined;\n            }\n            const matchCount = controller.getState().matchesCount;\n            if (index > 0 && index <= matchCount) {\n                return index - 1; // zero based\n            }\n            else if (index < 0 && index >= -matchCount) {\n                return matchCount + index;\n            }\n            return undefined;\n        };\n        const updatePickerAndEditor = (value) => {\n            const index = toFindMatchIndex(value);\n            if (typeof index === 'number') {\n                // valid\n                inputBox.validationMessage = undefined;\n                controller.goToMatch(index);\n                const currentMatch = controller.getState().currentMatch;\n                if (currentMatch) {\n                    this.addDecorations(editor, currentMatch);\n                }\n            }\n            else {\n                inputBox.validationMessage = nls.localize('findMatchAction.inputValidationMessage', \"Please type a number between 1 and {0}\", controller.getState().matchesCount);\n                this.clearDecorations(editor);\n            }\n        };\n        inputBox.onDidChangeValue(value => {\n            updatePickerAndEditor(value);\n        });\n        inputBox.onDidAccept(() => {\n            const index = toFindMatchIndex(inputBox.value);\n            if (typeof index === 'number') {\n                controller.goToMatch(index);\n                inputBox.hide();\n            }\n            else {\n                inputBox.validationMessage = nls.localize('findMatchAction.inputValidationMessage', \"Please type a number between 1 and {0}\", controller.getState().matchesCount);\n            }\n        });\n        inputBox.onDidHide(() => {\n            this.clearDecorations(editor);\n            inputBox.dispose();\n        });\n        inputBox.show();\n    }\n    clearDecorations(editor) {\n        editor.changeDecorations(changeAccessor => {\n            this._highlightDecorations = changeAccessor.deltaDecorations(this._highlightDecorations, []);\n        });\n    }\n    addDecorations(editor, range) {\n        editor.changeDecorations(changeAccessor => {\n            this._highlightDecorations = changeAccessor.deltaDecorations(this._highlightDecorations, [\n                {\n                    range,\n                    options: {\n                        description: 'find-match-quick-access-range-highlight',\n                        className: 'rangeHighlight',\n                        isWholeLine: true\n                    }\n                },\n                {\n                    range,\n                    options: {\n                        description: 'find-match-quick-access-range-highlight-overview',\n                        overviewRuler: {\n                            color: themeColorFromId(overviewRulerRangeHighlight),\n                            position: OverviewRulerLane.Full\n                        }\n                    }\n                }\n            ]);\n        });\n    }\n}\nexport class SelectionMatchFindAction extends EditorAction {\n    run(accessor, editor) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const controller = CommonFindController.get(editor);\n            if (!controller) {\n                return;\n            }\n            const selectionSearchString = getSelectionSearchString(editor, 'single', false);\n            if (selectionSearchString) {\n                controller.setSearchString(selectionSearchString);\n            }\n            if (!this._run(controller)) {\n                yield controller.start({\n                    forceRevealReplace: false,\n                    seedSearchStringFromSelection: 'none',\n                    seedSearchStringFromNonEmptySelection: false,\n                    seedSearchStringFromGlobalClipboard: false,\n                    shouldFocus: 0 /* FindStartFocusAction.NoFocusChange */,\n                    shouldAnimate: true,\n                    updateSearchScope: false,\n                    loop: editor.getOption(41 /* EditorOption.find */).loop\n                });\n                this._run(controller);\n            }\n        });\n    }\n}\nexport class NextSelectionMatchFindAction extends SelectionMatchFindAction {\n    constructor() {\n        super({\n            id: FIND_IDS.NextSelectionMatchFindAction,\n            label: nls.localize('nextSelectionMatchFindAction', \"Find Next Selection\"),\n            alias: 'Find Next Selection',\n            precondition: undefined,\n            kbOpts: {\n                kbExpr: EditorContextKeys.focus,\n                primary: 2048 /* KeyMod.CtrlCmd */ | 61 /* KeyCode.F3 */,\n                weight: 100 /* KeybindingWeight.EditorContrib */\n            }\n        });\n    }\n    _run(controller) {\n        return controller.moveToNextMatch();\n    }\n}\nexport class PreviousSelectionMatchFindAction extends SelectionMatchFindAction {\n    constructor() {\n        super({\n            id: FIND_IDS.PreviousSelectionMatchFindAction,\n            label: nls.localize('previousSelectionMatchFindAction', \"Find Previous Selection\"),\n            alias: 'Find Previous Selection',\n            precondition: undefined,\n            kbOpts: {\n                kbExpr: EditorContextKeys.focus,\n                primary: 2048 /* KeyMod.CtrlCmd */ | 1024 /* KeyMod.Shift */ | 61 /* KeyCode.F3 */,\n                weight: 100 /* KeybindingWeight.EditorContrib */\n            }\n        });\n    }\n    _run(controller) {\n        return controller.moveToPrevMatch();\n    }\n}\nexport const StartFindReplaceAction = registerMultiEditorAction(new MultiEditorAction({\n    id: FIND_IDS.StartFindReplaceAction,\n    label: nls.localize('startReplace', \"Replace\"),\n    alias: 'Replace',\n    precondition: ContextKeyExpr.or(EditorContextKeys.focus, ContextKeyExpr.has('editorIsOpen')),\n    kbOpts: {\n        kbExpr: null,\n        primary: 2048 /* KeyMod.CtrlCmd */ | 38 /* KeyCode.KeyH */,\n        mac: { primary: 2048 /* KeyMod.CtrlCmd */ | 512 /* KeyMod.Alt */ | 36 /* KeyCode.KeyF */ },\n        weight: 100 /* KeybindingWeight.EditorContrib */\n    },\n    menuOpts: {\n        menuId: MenuId.MenubarEditMenu,\n        group: '3_find',\n        title: nls.localize({ key: 'miReplace', comment: ['&& denotes a mnemonic'] }, \"&&Replace\"),\n        order: 2\n    }\n}));\nStartFindReplaceAction.addImplementation(0, (accessor, editor, args) => {\n    if (!editor.hasModel() || editor.getOption(90 /* EditorOption.readOnly */)) {\n        return false;\n    }\n    const controller = CommonFindController.get(editor);\n    if (!controller) {\n        return false;\n    }\n    const currentSelection = editor.getSelection();\n    const findInputFocused = controller.isFindInputFocused();\n    // we only seed search string from selection when the current selection is single line and not empty,\n    // + the find input is not focused\n    const seedSearchStringFromSelection = !currentSelection.isEmpty()\n        && currentSelection.startLineNumber === currentSelection.endLineNumber\n        && (editor.getOption(41 /* EditorOption.find */).seedSearchStringFromSelection !== 'never')\n        && !findInputFocused;\n    /*\n    * if the existing search string in find widget is empty and we don't seed search string from selection, it means the Find Input is still empty, so we should focus the Find Input instead of Replace Input.\n\n    * findInputFocused true -> seedSearchStringFromSelection false, FocusReplaceInput\n    * findInputFocused false, seedSearchStringFromSelection true FocusReplaceInput\n    * findInputFocused false seedSearchStringFromSelection false FocusFindInput\n    */\n    const shouldFocus = (findInputFocused || seedSearchStringFromSelection) ?\n        2 /* FindStartFocusAction.FocusReplaceInput */ : 1 /* FindStartFocusAction.FocusFindInput */;\n    return controller.start({\n        forceRevealReplace: true,\n        seedSearchStringFromSelection: seedSearchStringFromSelection ? 'single' : 'none',\n        seedSearchStringFromNonEmptySelection: editor.getOption(41 /* EditorOption.find */).seedSearchStringFromSelection === 'selection',\n        seedSearchStringFromGlobalClipboard: editor.getOption(41 /* EditorOption.find */).seedSearchStringFromSelection !== 'never',\n        shouldFocus: shouldFocus,\n        shouldAnimate: true,\n        updateSearchScope: false,\n        loop: editor.getOption(41 /* EditorOption.find */).loop\n    });\n});\nregisterEditorContribution(CommonFindController.ID, FindController, 0 /* EditorContributionInstantiation.Eager */); // eager because it uses `saveViewState`/`restoreViewState`\nregisterEditorAction(StartFindWithArgsAction);\nregisterEditorAction(StartFindWithSelectionAction);\nregisterEditorAction(NextMatchFindAction);\nregisterEditorAction(PreviousMatchFindAction);\nregisterEditorAction(MoveToMatchFindAction);\nregisterEditorAction(NextSelectionMatchFindAction);\nregisterEditorAction(PreviousSelectionMatchFindAction);\nconst FindCommand = EditorCommand.bindToContribution(CommonFindController.get);\nregisterEditorCommand(new FindCommand({\n    id: FIND_IDS.CloseFindWidgetCommand,\n    precondition: CONTEXT_FIND_WIDGET_VISIBLE,\n    handler: x => x.closeFindWidget(),\n    kbOpts: {\n        weight: 100 /* KeybindingWeight.EditorContrib */ + 5,\n        kbExpr: ContextKeyExpr.and(EditorContextKeys.focus, ContextKeyExpr.not('isComposing')),\n        primary: 9 /* KeyCode.Escape */,\n        secondary: [1024 /* KeyMod.Shift */ | 9 /* KeyCode.Escape */]\n    }\n}));\nregisterEditorCommand(new FindCommand({\n    id: FIND_IDS.ToggleCaseSensitiveCommand,\n    precondition: undefined,\n    handler: x => x.toggleCaseSensitive(),\n    kbOpts: {\n        weight: 100 /* KeybindingWeight.EditorContrib */ + 5,\n        kbExpr: EditorContextKeys.focus,\n        primary: ToggleCaseSensitiveKeybinding.primary,\n        mac: ToggleCaseSensitiveKeybinding.mac,\n        win: ToggleCaseSensitiveKeybinding.win,\n        linux: ToggleCaseSensitiveKeybinding.linux\n    }\n}));\nregisterEditorCommand(new FindCommand({\n    id: FIND_IDS.ToggleWholeWordCommand,\n    precondition: undefined,\n    handler: x => x.toggleWholeWords(),\n    kbOpts: {\n        weight: 100 /* KeybindingWeight.EditorContrib */ + 5,\n        kbExpr: EditorContextKeys.focus,\n        primary: ToggleWholeWordKeybinding.primary,\n        mac: ToggleWholeWordKeybinding.mac,\n        win: ToggleWholeWordKeybinding.win,\n        linux: ToggleWholeWordKeybinding.linux\n    }\n}));\nregisterEditorCommand(new FindCommand({\n    id: FIND_IDS.ToggleRegexCommand,\n    precondition: undefined,\n    handler: x => x.toggleRegex(),\n    kbOpts: {\n        weight: 100 /* KeybindingWeight.EditorContrib */ + 5,\n        kbExpr: EditorContextKeys.focus,\n        primary: ToggleRegexKeybinding.primary,\n        mac: ToggleRegexKeybinding.mac,\n        win: ToggleRegexKeybinding.win,\n        linux: ToggleRegexKeybinding.linux\n    }\n}));\nregisterEditorCommand(new FindCommand({\n    id: FIND_IDS.ToggleSearchScopeCommand,\n    precondition: undefined,\n    handler: x => x.toggleSearchScope(),\n    kbOpts: {\n        weight: 100 /* KeybindingWeight.EditorContrib */ + 5,\n        kbExpr: EditorContextKeys.focus,\n        primary: ToggleSearchScopeKeybinding.primary,\n        mac: ToggleSearchScopeKeybinding.mac,\n        win: ToggleSearchScopeKeybinding.win,\n        linux: ToggleSearchScopeKeybinding.linux\n    }\n}));\nregisterEditorCommand(new FindCommand({\n    id: FIND_IDS.TogglePreserveCaseCommand,\n    precondition: undefined,\n    handler: x => x.togglePreserveCase(),\n    kbOpts: {\n        weight: 100 /* KeybindingWeight.EditorContrib */ + 5,\n        kbExpr: EditorContextKeys.focus,\n        primary: TogglePreserveCaseKeybinding.primary,\n        mac: TogglePreserveCaseKeybinding.mac,\n        win: TogglePreserveCaseKeybinding.win,\n        linux: TogglePreserveCaseKeybinding.linux\n    }\n}));\nregisterEditorCommand(new FindCommand({\n    id: FIND_IDS.ReplaceOneAction,\n    precondition: CONTEXT_FIND_WIDGET_VISIBLE,\n    handler: x => x.replace(),\n    kbOpts: {\n        weight: 100 /* KeybindingWeight.EditorContrib */ + 5,\n        kbExpr: EditorContextKeys.focus,\n        primary: 2048 /* KeyMod.CtrlCmd */ | 1024 /* KeyMod.Shift */ | 22 /* KeyCode.Digit1 */\n    }\n}));\nregisterEditorCommand(new FindCommand({\n    id: FIND_IDS.ReplaceOneAction,\n    precondition: CONTEXT_FIND_WIDGET_VISIBLE,\n    handler: x => x.replace(),\n    kbOpts: {\n        weight: 100 /* KeybindingWeight.EditorContrib */ + 5,\n        kbExpr: ContextKeyExpr.and(EditorContextKeys.focus, CONTEXT_REPLACE_INPUT_FOCUSED),\n        primary: 3 /* KeyCode.Enter */\n    }\n}));\nregisterEditorCommand(new FindCommand({\n    id: FIND_IDS.ReplaceAllAction,\n    precondition: CONTEXT_FIND_WIDGET_VISIBLE,\n    handler: x => x.replaceAll(),\n    kbOpts: {\n        weight: 100 /* KeybindingWeight.EditorContrib */ + 5,\n        kbExpr: EditorContextKeys.focus,\n        primary: 2048 /* KeyMod.CtrlCmd */ | 512 /* KeyMod.Alt */ | 3 /* KeyCode.Enter */\n    }\n}));\nregisterEditorCommand(new FindCommand({\n    id: FIND_IDS.ReplaceAllAction,\n    precondition: CONTEXT_FIND_WIDGET_VISIBLE,\n    handler: x => x.replaceAll(),\n    kbOpts: {\n        weight: 100 /* KeybindingWeight.EditorContrib */ + 5,\n        kbExpr: ContextKeyExpr.and(EditorContextKeys.focus, CONTEXT_REPLACE_INPUT_FOCUSED),\n        primary: undefined,\n        mac: {\n            primary: 2048 /* KeyMod.CtrlCmd */ | 3 /* KeyCode.Enter */,\n        }\n    }\n}));\nregisterEditorCommand(new FindCommand({\n    id: FIND_IDS.SelectAllMatchesAction,\n    precondition: CONTEXT_FIND_WIDGET_VISIBLE,\n    handler: x => x.selectAllMatches(),\n    kbOpts: {\n        weight: 100 /* KeybindingWeight.EditorContrib */ + 5,\n        kbExpr: EditorContextKeys.focus,\n        primary: 512 /* KeyMod.Alt */ | 3 /* KeyCode.Enter */\n    }\n}));\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}