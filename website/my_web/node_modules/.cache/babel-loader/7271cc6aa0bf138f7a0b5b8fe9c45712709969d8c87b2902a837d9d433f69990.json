{"ast":null,"code":"module.exports.watch = watch;\nmodule.exports.resetWatchers = resetWatchers;\nvar debug = require('debug')('nodemon:watch');\nvar debugRoot = require('debug')('nodemon');\nvar chokidar = require('chokidar');\nvar undefsafe = require('undefsafe');\nvar config = require('../config');\nvar path = require('path');\nvar utils = require('../utils');\nvar bus = utils.bus;\nvar match = require('./match');\nvar watchers = [];\nvar debouncedBus;\nbus.on('reset', resetWatchers);\nfunction resetWatchers() {\n  debugRoot('resetting watchers');\n  watchers.forEach(function (watcher) {\n    watcher.close();\n  });\n  watchers = [];\n}\nfunction watch() {\n  if (watchers.length) {\n    debug('early exit on watch, still watching (%s)', watchers.length);\n    return;\n  }\n  var dirs = [].slice.call(config.dirs);\n  debugRoot('start watch on: %s', dirs.join(', '));\n  const rootIgnored = config.options.ignore;\n  debugRoot('ignored', rootIgnored);\n  var watchedFiles = [];\n  const promise = new Promise(function (resolve) {\n    const dotFilePattern = /[/\\\\]\\./;\n    var ignored = match.rulesToMonitor([],\n    // not needed\n    Array.from(rootIgnored), config).map(pattern => pattern.slice(1));\n    const addDotFile = dirs.filter(dir => dir.match(dotFilePattern));\n\n    // don't ignore dotfiles if explicitly watched.\n    if (addDotFile.length === 0) {\n      ignored.push(dotFilePattern);\n    }\n    var watchOptions = {\n      ignorePermissionErrors: true,\n      ignored: ignored,\n      persistent: true,\n      usePolling: config.options.legacyWatch || false,\n      interval: config.options.pollingInterval\n      // note to future developer: I've gone back and forth on adding `cwd`\n      // to the props and in some cases it fixes bugs but typically it causes\n      // bugs elsewhere (since nodemon is used is so many ways). the final\n      // decision is to *not* use it at all and work around it\n      // cwd: ...\n    };\n\n    if (utils.isWindows) {\n      watchOptions.disableGlobbing = true;\n    }\n    if (utils.isIBMi) {\n      watchOptions.usePolling = true;\n    }\n    if (process.env.TEST) {\n      watchOptions.useFsEvents = false;\n    }\n    var watcher = chokidar.watch(dirs, Object.assign({}, watchOptions, config.options.watchOptions || {}));\n    watcher.ready = false;\n    var total = 0;\n    watcher.on('change', filterAndRestart);\n    watcher.on('add', function (file) {\n      if (watcher.ready) {\n        return filterAndRestart(file);\n      }\n      watchedFiles.push(file);\n      bus.emit('watching', file);\n      debug('chokidar watching: %s', file);\n    });\n    watcher.on('ready', function () {\n      watchedFiles = Array.from(new Set(watchedFiles)); // ensure no dupes\n      total = watchedFiles.length;\n      watcher.ready = true;\n      resolve(total);\n      debugRoot('watch is complete');\n    });\n    watcher.on('error', function (error) {\n      if (error.code === 'EINVAL') {\n        utils.log.error('Internal watch failed. Likely cause: too many ' + 'files being watched (perhaps from the root of a drive?\\n' + 'See https://github.com/paulmillr/chokidar/issues/229 for details');\n      } else {\n        utils.log.error('Internal watch failed: ' + error.message);\n        process.exit(1);\n      }\n    });\n    watchers.push(watcher);\n  });\n  return promise.catch(e => {\n    // this is a core error and it should break nodemon - so I have to break\n    // out of a promise using the setTimeout\n    setTimeout(() => {\n      throw e;\n    });\n  }).then(function () {\n    utils.log.detail(`watching ${watchedFiles.length} file${watchedFiles.length === 1 ? '' : 's'}`);\n    return watchedFiles;\n  });\n}\nfunction filterAndRestart(files) {\n  if (!Array.isArray(files)) {\n    files = [files];\n  }\n  if (files.length) {\n    var cwd = process.cwd();\n    if (this.options && this.options.cwd) {\n      cwd = this.options.cwd;\n    }\n    utils.log.detail('files triggering change check: ' + files.map(file => {\n      const res = path.relative(cwd, file);\n      return res;\n    }).join(', '));\n\n    // make sure the path is right and drop an empty\n    // filenames (sometimes on windows)\n    files = files.filter(Boolean).map(file => {\n      return path.relative(process.cwd(), path.relative(cwd, file));\n    });\n    if (utils.isWindows) {\n      // ensure the drive letter is in uppercase (c:\\foo -> C:\\foo)\n      files = files.map(f => {\n        if (f.indexOf(':') === -1) {\n          return f;\n        }\n        return f[0].toUpperCase() + f.slice(1);\n      });\n    }\n    debug('filterAndRestart on', files);\n    var matched = match(files, config.options.monitor, undefsafe(config, 'options.execOptions.ext'));\n    debug('matched?', JSON.stringify(matched));\n\n    // if there's no matches, then test to see if the changed file is the\n    // running script, if so, let's allow a restart\n    if (config.options.execOptions && config.options.execOptions.script) {\n      const script = path.resolve(config.options.execOptions.script);\n      if (matched.result.length === 0 && script) {\n        const length = script.length;\n        files.find(file => {\n          if (file.substr(-length, length) === script) {\n            matched = {\n              result: [file],\n              total: 1\n            };\n            return true;\n          }\n        });\n      }\n    }\n    utils.log.detail('changes after filters (before/after): ' + [files.length, matched.result.length].join('/'));\n\n    // reset the last check so we're only looking at recently modified files\n    config.lastStarted = Date.now();\n    if (matched.result.length) {\n      if (config.options.delay > 0) {\n        utils.log.detail('delaying restart for ' + config.options.delay + 'ms');\n        if (debouncedBus === undefined) {\n          debouncedBus = debounce(restartBus, config.options.delay);\n        }\n        debouncedBus(matched);\n      } else {\n        return restartBus(matched);\n      }\n    }\n  }\n}\nfunction restartBus(matched) {\n  utils.log.status('restarting due to changes...');\n  matched.result.map(file => {\n    utils.log.detail(path.relative(process.cwd(), file));\n  });\n  if (config.options.verbose) {\n    utils.log._log('');\n  }\n  bus.emit('restart', matched.result);\n}\nfunction debounce(fn, delay) {\n  var timer = null;\n  return function () {\n    const context = this;\n    const args = arguments;\n    clearTimeout(timer);\n    timer = setTimeout(() => fn.apply(context, args), delay);\n  };\n}","map":{"version":3,"names":["module","exports","watch","resetWatchers","debug","require","debugRoot","chokidar","undefsafe","config","path","utils","bus","match","watchers","debouncedBus","on","forEach","watcher","close","length","dirs","slice","call","join","rootIgnored","options","ignore","watchedFiles","promise","Promise","resolve","dotFilePattern","ignored","rulesToMonitor","Array","from","map","pattern","addDotFile","filter","dir","push","watchOptions","ignorePermissionErrors","persistent","usePolling","legacyWatch","interval","pollingInterval","isWindows","disableGlobbing","isIBMi","process","env","TEST","useFsEvents","Object","assign","ready","total","filterAndRestart","file","emit","Set","error","code","log","message","exit","catch","e","setTimeout","then","detail","files","isArray","cwd","res","relative","Boolean","f","indexOf","toUpperCase","matched","monitor","JSON","stringify","execOptions","script","result","find","substr","lastStarted","Date","now","delay","undefined","debounce","restartBus","status","verbose","_log","fn","timer","context","args","arguments","clearTimeout","apply"],"sources":["/home/chlohest/work/website/my_web/node_modules/nodemon/lib/monitor/watch.js"],"sourcesContent":["module.exports.watch = watch;\nmodule.exports.resetWatchers = resetWatchers;\n\nvar debug = require('debug')('nodemon:watch');\nvar debugRoot = require('debug')('nodemon');\nvar chokidar = require('chokidar');\nvar undefsafe = require('undefsafe');\nvar config = require('../config');\nvar path = require('path');\nvar utils = require('../utils');\nvar bus = utils.bus;\nvar match = require('./match');\nvar watchers = [];\nvar debouncedBus;\n\nbus.on('reset', resetWatchers);\n\nfunction resetWatchers() {\n  debugRoot('resetting watchers');\n  watchers.forEach(function (watcher) {\n    watcher.close();\n  });\n  watchers = [];\n}\n\nfunction watch() {\n  if (watchers.length) {\n    debug('early exit on watch, still watching (%s)', watchers.length);\n    return;\n  }\n\n  var dirs = [].slice.call(config.dirs);\n\n  debugRoot('start watch on: %s', dirs.join(', '));\n  const rootIgnored = config.options.ignore;\n  debugRoot('ignored', rootIgnored);\n\n  var watchedFiles = [];\n\n  const promise = new Promise(function (resolve) {\n    const dotFilePattern = /[/\\\\]\\./;\n    var ignored = match.rulesToMonitor(\n      [], // not needed\n      Array.from(rootIgnored),\n      config\n    ).map(pattern => pattern.slice(1));\n\n    const addDotFile = dirs.filter(dir => dir.match(dotFilePattern));\n\n    // don't ignore dotfiles if explicitly watched.\n    if (addDotFile.length === 0) {\n      ignored.push(dotFilePattern);\n    }\n\n    var watchOptions = {\n      ignorePermissionErrors: true,\n      ignored: ignored,\n      persistent: true,\n      usePolling: config.options.legacyWatch || false,\n      interval: config.options.pollingInterval,\n      // note to future developer: I've gone back and forth on adding `cwd`\n      // to the props and in some cases it fixes bugs but typically it causes\n      // bugs elsewhere (since nodemon is used is so many ways). the final\n      // decision is to *not* use it at all and work around it\n      // cwd: ...\n    };\n\n    if (utils.isWindows) {\n      watchOptions.disableGlobbing = true;\n    }\n\n    if (utils.isIBMi) {\n      watchOptions.usePolling = true;\n    }\n\n    if (process.env.TEST) {\n      watchOptions.useFsEvents = false;\n    }\n\n    var watcher = chokidar.watch(\n      dirs,\n      Object.assign({}, watchOptions, config.options.watchOptions || {})\n    );\n\n    watcher.ready = false;\n\n    var total = 0;\n\n    watcher.on('change', filterAndRestart);\n    watcher.on('add', function (file) {\n      if (watcher.ready) {\n        return filterAndRestart(file);\n      }\n\n      watchedFiles.push(file);\n      bus.emit('watching', file);\n      debug('chokidar watching: %s', file);\n    });\n    watcher.on('ready', function () {\n      watchedFiles = Array.from(new Set(watchedFiles)); // ensure no dupes\n      total = watchedFiles.length;\n      watcher.ready = true;\n      resolve(total);\n      debugRoot('watch is complete');\n    });\n\n    watcher.on('error', function (error) {\n      if (error.code === 'EINVAL') {\n        utils.log.error(\n          'Internal watch failed. Likely cause: too many ' +\n          'files being watched (perhaps from the root of a drive?\\n' +\n          'See https://github.com/paulmillr/chokidar/issues/229 for details'\n        );\n      } else {\n        utils.log.error('Internal watch failed: ' + error.message);\n        process.exit(1);\n      }\n    });\n\n    watchers.push(watcher);\n  });\n\n  return promise.catch(e => {\n    // this is a core error and it should break nodemon - so I have to break\n    // out of a promise using the setTimeout\n    setTimeout(() => {\n      throw e;\n    });\n  }).then(function () {\n    utils.log.detail(`watching ${watchedFiles.length} file${\n      watchedFiles.length === 1 ? '' : 's'}`);\n    return watchedFiles;\n  });\n}\n\nfunction filterAndRestart(files) {\n  if (!Array.isArray(files)) {\n    files = [files];\n  }\n\n  if (files.length) {\n    var cwd = process.cwd();\n    if (this.options && this.options.cwd) {\n      cwd = this.options.cwd;\n    }\n\n    utils.log.detail(\n      'files triggering change check: ' +\n      files\n        .map(file => {\n          const res = path.relative(cwd, file);\n          return res;\n        })\n        .join(', ')\n    );\n\n    // make sure the path is right and drop an empty\n    // filenames (sometimes on windows)\n    files = files.filter(Boolean).map(file => {\n      return path.relative(process.cwd(), path.relative(cwd, file));\n    });\n\n    if (utils.isWindows) {\n      // ensure the drive letter is in uppercase (c:\\foo -> C:\\foo)\n      files = files.map(f => {\n        if (f.indexOf(':') === -1) { return f; }\n        return f[0].toUpperCase() + f.slice(1);\n      });\n    }\n\n\n    debug('filterAndRestart on', files);\n\n    var matched = match(\n      files,\n      config.options.monitor,\n      undefsafe(config, 'options.execOptions.ext')\n    );\n\n    debug('matched?', JSON.stringify(matched));\n\n    // if there's no matches, then test to see if the changed file is the\n    // running script, if so, let's allow a restart\n    if (config.options.execOptions && config.options.execOptions.script) {\n      const script = path.resolve(config.options.execOptions.script);\n      if (matched.result.length === 0 && script) {\n        const length = script.length;\n        files.find(file => {\n          if (file.substr(-length, length) === script) {\n            matched = {\n              result: [file],\n              total: 1,\n            };\n            return true;\n          }\n        });\n      }\n    }\n\n    utils.log.detail(\n      'changes after filters (before/after): ' +\n      [files.length, matched.result.length].join('/')\n    );\n\n    // reset the last check so we're only looking at recently modified files\n    config.lastStarted = Date.now();\n\n    if (matched.result.length) {\n      if (config.options.delay > 0) {\n        utils.log.detail('delaying restart for ' + config.options.delay + 'ms');\n        if (debouncedBus === undefined) {\n          debouncedBus = debounce(restartBus, config.options.delay);\n        }\n        debouncedBus(matched);\n      } else {\n        return restartBus(matched);\n      }\n    }\n  }\n}\n\nfunction restartBus(matched) {\n  utils.log.status('restarting due to changes...');\n  matched.result.map(file => {\n    utils.log.detail(path.relative(process.cwd(), file));\n  });\n\n  if (config.options.verbose) {\n    utils.log._log('');\n  }\n\n  bus.emit('restart', matched.result);\n}\n\nfunction debounce(fn, delay) {\n  var timer = null;\n  return function () {\n    const context = this;\n    const args = arguments;\n    clearTimeout(timer);\n    timer = setTimeout(() =>fn.apply(context, args), delay);\n  };\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}