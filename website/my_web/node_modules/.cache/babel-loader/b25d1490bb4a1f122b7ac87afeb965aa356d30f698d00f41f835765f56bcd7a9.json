{"ast":null,"code":"/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\nimport { DataTransfers } from '../../base/browser/dnd.js';\nimport { createFileDataTransferItem, createStringDataTransferItem, UriList, VSDataTransfer } from '../../base/common/dataTransfer.js';\nimport { Mimes } from '../../base/common/mime.js';\nimport { URI } from '../../base/common/uri.js';\nimport { CodeDataTransfers } from '../../platform/dnd/browser/dnd.js';\nexport function toVSDataTransfer(dataTransfer) {\n  const vsDataTransfer = new VSDataTransfer();\n  for (const item of dataTransfer.items) {\n    const type = item.type;\n    if (item.kind === 'string') {\n      const asStringValue = new Promise(resolve => item.getAsString(resolve));\n      vsDataTransfer.append(type, createStringDataTransferItem(asStringValue));\n    } else if (item.kind === 'file') {\n      const file = item.getAsFile();\n      if (file) {\n        vsDataTransfer.append(type, createFileDataTransferItemFromFile(file));\n      }\n    }\n  }\n  return vsDataTransfer;\n}\nfunction createFileDataTransferItemFromFile(file) {\n  const uri = file.path ? URI.parse(file.path) : undefined;\n  return createFileDataTransferItem(file.name, uri, () => __awaiter(this, void 0, void 0, function* () {\n    return new Uint8Array(yield file.arrayBuffer());\n  }));\n}\nconst INTERNAL_DND_MIME_TYPES = Object.freeze([CodeDataTransfers.EDITORS, CodeDataTransfers.FILES, DataTransfers.RESOURCES, DataTransfers.INTERNAL_URI_LIST]);\nexport function toExternalVSDataTransfer(sourceDataTransfer, overwriteUriList = false) {\n  const vsDataTransfer = toVSDataTransfer(sourceDataTransfer);\n  // Try to expose the internal uri-list type as the standard type\n  const uriList = vsDataTransfer.get(DataTransfers.INTERNAL_URI_LIST);\n  if (uriList) {\n    vsDataTransfer.replace(Mimes.uriList, uriList);\n  } else {\n    if (overwriteUriList || !vsDataTransfer.has(Mimes.uriList)) {\n      // Otherwise, fallback to adding dragged resources to the uri list\n      const editorData = [];\n      for (const item of sourceDataTransfer.items) {\n        const file = item.getAsFile();\n        if (file) {\n          const path = file.path;\n          try {\n            if (path) {\n              editorData.push(URI.file(path).toString());\n            } else {\n              editorData.push(URI.parse(file.name, true).toString());\n            }\n          } catch (_a) {\n            // Parsing failed. Leave out from list\n          }\n        }\n      }\n      if (editorData.length) {\n        vsDataTransfer.replace(Mimes.uriList, createStringDataTransferItem(UriList.create(editorData)));\n      }\n    }\n  }\n  for (const internal of INTERNAL_DND_MIME_TYPES) {\n    vsDataTransfer.delete(internal);\n  }\n  return vsDataTransfer;\n}","map":{"version":3,"names":["__awaiter","thisArg","_arguments","P","generator","adopt","value","resolve","Promise","reject","fulfilled","step","next","e","rejected","result","done","then","apply","DataTransfers","createFileDataTransferItem","createStringDataTransferItem","UriList","VSDataTransfer","Mimes","URI","CodeDataTransfers","toVSDataTransfer","dataTransfer","vsDataTransfer","item","items","type","kind","asStringValue","getAsString","append","file","getAsFile","createFileDataTransferItemFromFile","uri","path","parse","undefined","name","Uint8Array","arrayBuffer","INTERNAL_DND_MIME_TYPES","Object","freeze","EDITORS","FILES","RESOURCES","INTERNAL_URI_LIST","toExternalVSDataTransfer","sourceDataTransfer","overwriteUriList","uriList","get","replace","has","editorData","push","toString","_a","length","create","internal","delete"],"sources":["/home/chlohest/work/website/my_web/node_modules/monaco-editor/esm/vs/editor/browser/dnd.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { DataTransfers } from '../../base/browser/dnd.js';\nimport { createFileDataTransferItem, createStringDataTransferItem, UriList, VSDataTransfer } from '../../base/common/dataTransfer.js';\nimport { Mimes } from '../../base/common/mime.js';\nimport { URI } from '../../base/common/uri.js';\nimport { CodeDataTransfers } from '../../platform/dnd/browser/dnd.js';\nexport function toVSDataTransfer(dataTransfer) {\n    const vsDataTransfer = new VSDataTransfer();\n    for (const item of dataTransfer.items) {\n        const type = item.type;\n        if (item.kind === 'string') {\n            const asStringValue = new Promise(resolve => item.getAsString(resolve));\n            vsDataTransfer.append(type, createStringDataTransferItem(asStringValue));\n        }\n        else if (item.kind === 'file') {\n            const file = item.getAsFile();\n            if (file) {\n                vsDataTransfer.append(type, createFileDataTransferItemFromFile(file));\n            }\n        }\n    }\n    return vsDataTransfer;\n}\nfunction createFileDataTransferItemFromFile(file) {\n    const uri = file.path ? URI.parse(file.path) : undefined;\n    return createFileDataTransferItem(file.name, uri, () => __awaiter(this, void 0, void 0, function* () {\n        return new Uint8Array(yield file.arrayBuffer());\n    }));\n}\nconst INTERNAL_DND_MIME_TYPES = Object.freeze([\n    CodeDataTransfers.EDITORS,\n    CodeDataTransfers.FILES,\n    DataTransfers.RESOURCES,\n    DataTransfers.INTERNAL_URI_LIST,\n]);\nexport function toExternalVSDataTransfer(sourceDataTransfer, overwriteUriList = false) {\n    const vsDataTransfer = toVSDataTransfer(sourceDataTransfer);\n    // Try to expose the internal uri-list type as the standard type\n    const uriList = vsDataTransfer.get(DataTransfers.INTERNAL_URI_LIST);\n    if (uriList) {\n        vsDataTransfer.replace(Mimes.uriList, uriList);\n    }\n    else {\n        if (overwriteUriList || !vsDataTransfer.has(Mimes.uriList)) {\n            // Otherwise, fallback to adding dragged resources to the uri list\n            const editorData = [];\n            for (const item of sourceDataTransfer.items) {\n                const file = item.getAsFile();\n                if (file) {\n                    const path = file.path;\n                    try {\n                        if (path) {\n                            editorData.push(URI.file(path).toString());\n                        }\n                        else {\n                            editorData.push(URI.parse(file.name, true).toString());\n                        }\n                    }\n                    catch (_a) {\n                        // Parsing failed. Leave out from list\n                    }\n                }\n            }\n            if (editorData.length) {\n                vsDataTransfer.replace(Mimes.uriList, createStringDataTransferItem(UriList.create(editorData)));\n            }\n        }\n    }\n    for (const internal of INTERNAL_DND_MIME_TYPES) {\n        vsDataTransfer.delete(internal);\n    }\n    return vsDataTransfer;\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}