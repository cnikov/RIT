{"ast":null,"code":"/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n    r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n    d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = this && this.__param || function (paramIndex, decorator) {\n  return function (target, key) {\n    decorator(target, key, paramIndex);\n  };\n};\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\nvar DropIntoEditorController_1;\nimport { coalesce } from '../../../../base/common/arrays.js';\nimport { createCancelablePromise, raceCancellation } from '../../../../base/common/async.js';\nimport { VSDataTransfer, matchesMimeType } from '../../../../base/common/dataTransfer.js';\nimport { Disposable } from '../../../../base/common/lifecycle.js';\nimport { toExternalVSDataTransfer } from '../../../browser/dnd.js';\nimport { Range } from '../../../common/core/range.js';\nimport { ILanguageFeaturesService } from '../../../common/services/languageFeatures.js';\nimport { DraggedTreeItemsIdentifier } from '../../../common/services/treeViewsDnd.js';\nimport { ITreeViewsDnDService } from '../../../common/services/treeViewsDndService.js';\nimport { EditorStateCancellationTokenSource } from '../../editorState/browser/editorState.js';\nimport { InlineProgressManager } from '../../inlineProgress/browser/inlineProgress.js';\nimport { localize } from '../../../../nls.js';\nimport { IConfigurationService } from '../../../../platform/configuration/common/configuration.js';\nimport { RawContextKey } from '../../../../platform/contextkey/common/contextkey.js';\nimport { LocalSelectionTransfer } from '../../../../platform/dnd/browser/dnd.js';\nimport { IInstantiationService } from '../../../../platform/instantiation/common/instantiation.js';\nimport { sortEditsByYieldTo } from './edit.js';\nimport { PostEditWidgetManager } from './postEditWidget.js';\nexport const defaultProviderConfig = 'editor.experimental.dropIntoEditor.defaultProvider';\nexport const changeDropTypeCommandId = 'editor.changeDropType';\nexport const dropWidgetVisibleCtx = new RawContextKey('dropWidgetVisible', false, localize('dropWidgetVisible', \"Whether the drop widget is showing\"));\nlet DropIntoEditorController = DropIntoEditorController_1 = class DropIntoEditorController extends Disposable {\n  static get(editor) {\n    return editor.getContribution(DropIntoEditorController_1.ID);\n  }\n  constructor(editor, instantiationService, _configService, _languageFeaturesService, _treeViewsDragAndDropService) {\n    super();\n    this._configService = _configService;\n    this._languageFeaturesService = _languageFeaturesService;\n    this._treeViewsDragAndDropService = _treeViewsDragAndDropService;\n    this.treeItemsTransfer = LocalSelectionTransfer.getInstance();\n    this._dropProgressManager = this._register(instantiationService.createInstance(InlineProgressManager, 'dropIntoEditor', editor));\n    this._postDropWidgetManager = this._register(instantiationService.createInstance(PostEditWidgetManager, 'dropIntoEditor', editor, dropWidgetVisibleCtx, {\n      id: changeDropTypeCommandId,\n      label: localize('postDropWidgetTitle', \"Show drop options...\")\n    }));\n    this._register(editor.onDropIntoEditor(e => this.onDropIntoEditor(editor, e.position, e.event)));\n  }\n  changeDropType() {\n    this._postDropWidgetManager.tryShowSelector();\n  }\n  onDropIntoEditor(editor, position, dragEvent) {\n    var _a;\n    return __awaiter(this, void 0, void 0, function* () {\n      if (!dragEvent.dataTransfer || !editor.hasModel()) {\n        return;\n      }\n      (_a = this._currentOperation) === null || _a === void 0 ? void 0 : _a.cancel();\n      editor.focus();\n      editor.setPosition(position);\n      const p = createCancelablePromise(token => __awaiter(this, void 0, void 0, function* () {\n        const tokenSource = new EditorStateCancellationTokenSource(editor, 1 /* CodeEditorStateFlag.Value */, undefined, token);\n        try {\n          const ourDataTransfer = yield this.extractDataTransferData(dragEvent);\n          if (ourDataTransfer.size === 0 || tokenSource.token.isCancellationRequested) {\n            return;\n          }\n          const model = editor.getModel();\n          if (!model) {\n            return;\n          }\n          const providers = this._languageFeaturesService.documentOnDropEditProvider.ordered(model).filter(provider => {\n            if (!provider.dropMimeTypes) {\n              // Keep all providers that don't specify mime types\n              return true;\n            }\n            return provider.dropMimeTypes.some(mime => ourDataTransfer.matches(mime));\n          });\n          const edits = yield this.getDropEdits(providers, model, position, ourDataTransfer, tokenSource);\n          if (tokenSource.token.isCancellationRequested) {\n            return;\n          }\n          if (edits.length) {\n            const activeEditIndex = this.getInitialActiveEditIndex(model, edits);\n            const canShowWidget = editor.getOption(36 /* EditorOption.dropIntoEditor */).showDropSelector === 'afterDrop';\n            // Pass in the parent token here as it tracks cancelling the entire drop operation\n            yield this._postDropWidgetManager.applyEditAndShowIfNeeded([Range.fromPositions(position)], {\n              activeEditIndex,\n              allEdits: edits\n            }, canShowWidget, token);\n          }\n        } finally {\n          tokenSource.dispose();\n          if (this._currentOperation === p) {\n            this._currentOperation = undefined;\n          }\n        }\n      }));\n      this._dropProgressManager.showWhile(position, localize('dropIntoEditorProgress', \"Running drop handlers. Click to cancel\"), p);\n      this._currentOperation = p;\n    });\n  }\n  getDropEdits(providers, model, position, dataTransfer, tokenSource) {\n    return __awaiter(this, void 0, void 0, function* () {\n      const results = yield raceCancellation(Promise.all(providers.map(provider => __awaiter(this, void 0, void 0, function* () {\n        try {\n          const edit = yield provider.provideDocumentOnDropEdits(model, position, dataTransfer, tokenSource.token);\n          if (edit) {\n            return Object.assign(Object.assign({}, edit), {\n              providerId: provider.id\n            });\n          }\n        } catch (err) {\n          console.error(err);\n        }\n        return undefined;\n      }))), tokenSource.token);\n      const edits = coalesce(results !== null && results !== void 0 ? results : []);\n      return sortEditsByYieldTo(edits);\n    });\n  }\n  getInitialActiveEditIndex(model, edits) {\n    const preferredProviders = this._configService.getValue(defaultProviderConfig, {\n      resource: model.uri\n    });\n    for (const [configMime, desiredId] of Object.entries(preferredProviders)) {\n      const editIndex = edits.findIndex(edit => desiredId === edit.providerId && edit.handledMimeType && matchesMimeType(configMime, [edit.handledMimeType]));\n      if (editIndex >= 0) {\n        return editIndex;\n      }\n    }\n    return 0;\n  }\n  extractDataTransferData(dragEvent) {\n    return __awaiter(this, void 0, void 0, function* () {\n      if (!dragEvent.dataTransfer) {\n        return new VSDataTransfer();\n      }\n      const dataTransfer = toExternalVSDataTransfer(dragEvent.dataTransfer);\n      if (this.treeItemsTransfer.hasData(DraggedTreeItemsIdentifier.prototype)) {\n        const data = this.treeItemsTransfer.getData(DraggedTreeItemsIdentifier.prototype);\n        if (Array.isArray(data)) {\n          for (const id of data) {\n            const treeDataTransfer = yield this._treeViewsDragAndDropService.removeDragOperationTransfer(id.identifier);\n            if (treeDataTransfer) {\n              for (const [type, value] of treeDataTransfer) {\n                dataTransfer.replace(type, value);\n              }\n            }\n          }\n        }\n      }\n      return dataTransfer;\n    });\n  }\n};\nDropIntoEditorController.ID = 'editor.contrib.dropIntoEditorController';\nDropIntoEditorController = DropIntoEditorController_1 = __decorate([__param(1, IInstantiationService), __param(2, IConfigurationService), __param(3, ILanguageFeaturesService), __param(4, ITreeViewsDnDService)], DropIntoEditorController);\nexport { DropIntoEditorController };","map":{"version":3,"names":["__decorate","decorators","target","key","desc","c","arguments","length","r","Object","getOwnPropertyDescriptor","d","Reflect","decorate","i","defineProperty","__param","paramIndex","decorator","__awaiter","thisArg","_arguments","P","generator","adopt","value","resolve","Promise","reject","fulfilled","step","next","e","rejected","result","done","then","apply","DropIntoEditorController_1","coalesce","createCancelablePromise","raceCancellation","VSDataTransfer","matchesMimeType","Disposable","toExternalVSDataTransfer","Range","ILanguageFeaturesService","DraggedTreeItemsIdentifier","ITreeViewsDnDService","EditorStateCancellationTokenSource","InlineProgressManager","localize","IConfigurationService","RawContextKey","LocalSelectionTransfer","IInstantiationService","sortEditsByYieldTo","PostEditWidgetManager","defaultProviderConfig","changeDropTypeCommandId","dropWidgetVisibleCtx","DropIntoEditorController","get","editor","getContribution","ID","constructor","instantiationService","_configService","_languageFeaturesService","_treeViewsDragAndDropService","treeItemsTransfer","getInstance","_dropProgressManager","_register","createInstance","_postDropWidgetManager","id","label","onDropIntoEditor","position","event","changeDropType","tryShowSelector","dragEvent","_a","dataTransfer","hasModel","_currentOperation","cancel","focus","setPosition","p","token","tokenSource","undefined","ourDataTransfer","extractDataTransferData","size","isCancellationRequested","model","getModel","providers","documentOnDropEditProvider","ordered","filter","provider","dropMimeTypes","some","mime","matches","edits","getDropEdits","activeEditIndex","getInitialActiveEditIndex","canShowWidget","getOption","showDropSelector","applyEditAndShowIfNeeded","fromPositions","allEdits","dispose","showWhile","results","all","map","edit","provideDocumentOnDropEdits","assign","providerId","err","console","error","preferredProviders","getValue","resource","uri","configMime","desiredId","entries","editIndex","findIndex","handledMimeType","hasData","prototype","data","getData","Array","isArray","treeDataTransfer","removeDragOperationTransfer","identifier","type","replace"],"sources":["/home/chlohest/work/website/my_web/node_modules/monaco-editor/esm/vs/editor/contrib/dropOrPasteInto/browser/dropIntoEditorController.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar DropIntoEditorController_1;\nimport { coalesce } from '../../../../base/common/arrays.js';\nimport { createCancelablePromise, raceCancellation } from '../../../../base/common/async.js';\nimport { VSDataTransfer, matchesMimeType } from '../../../../base/common/dataTransfer.js';\nimport { Disposable } from '../../../../base/common/lifecycle.js';\nimport { toExternalVSDataTransfer } from '../../../browser/dnd.js';\nimport { Range } from '../../../common/core/range.js';\nimport { ILanguageFeaturesService } from '../../../common/services/languageFeatures.js';\nimport { DraggedTreeItemsIdentifier } from '../../../common/services/treeViewsDnd.js';\nimport { ITreeViewsDnDService } from '../../../common/services/treeViewsDndService.js';\nimport { EditorStateCancellationTokenSource } from '../../editorState/browser/editorState.js';\nimport { InlineProgressManager } from '../../inlineProgress/browser/inlineProgress.js';\nimport { localize } from '../../../../nls.js';\nimport { IConfigurationService } from '../../../../platform/configuration/common/configuration.js';\nimport { RawContextKey } from '../../../../platform/contextkey/common/contextkey.js';\nimport { LocalSelectionTransfer } from '../../../../platform/dnd/browser/dnd.js';\nimport { IInstantiationService } from '../../../../platform/instantiation/common/instantiation.js';\nimport { sortEditsByYieldTo } from './edit.js';\nimport { PostEditWidgetManager } from './postEditWidget.js';\nexport const defaultProviderConfig = 'editor.experimental.dropIntoEditor.defaultProvider';\nexport const changeDropTypeCommandId = 'editor.changeDropType';\nexport const dropWidgetVisibleCtx = new RawContextKey('dropWidgetVisible', false, localize('dropWidgetVisible', \"Whether the drop widget is showing\"));\nlet DropIntoEditorController = DropIntoEditorController_1 = class DropIntoEditorController extends Disposable {\n    static get(editor) {\n        return editor.getContribution(DropIntoEditorController_1.ID);\n    }\n    constructor(editor, instantiationService, _configService, _languageFeaturesService, _treeViewsDragAndDropService) {\n        super();\n        this._configService = _configService;\n        this._languageFeaturesService = _languageFeaturesService;\n        this._treeViewsDragAndDropService = _treeViewsDragAndDropService;\n        this.treeItemsTransfer = LocalSelectionTransfer.getInstance();\n        this._dropProgressManager = this._register(instantiationService.createInstance(InlineProgressManager, 'dropIntoEditor', editor));\n        this._postDropWidgetManager = this._register(instantiationService.createInstance(PostEditWidgetManager, 'dropIntoEditor', editor, dropWidgetVisibleCtx, { id: changeDropTypeCommandId, label: localize('postDropWidgetTitle', \"Show drop options...\") }));\n        this._register(editor.onDropIntoEditor(e => this.onDropIntoEditor(editor, e.position, e.event)));\n    }\n    changeDropType() {\n        this._postDropWidgetManager.tryShowSelector();\n    }\n    onDropIntoEditor(editor, position, dragEvent) {\n        var _a;\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!dragEvent.dataTransfer || !editor.hasModel()) {\n                return;\n            }\n            (_a = this._currentOperation) === null || _a === void 0 ? void 0 : _a.cancel();\n            editor.focus();\n            editor.setPosition(position);\n            const p = createCancelablePromise((token) => __awaiter(this, void 0, void 0, function* () {\n                const tokenSource = new EditorStateCancellationTokenSource(editor, 1 /* CodeEditorStateFlag.Value */, undefined, token);\n                try {\n                    const ourDataTransfer = yield this.extractDataTransferData(dragEvent);\n                    if (ourDataTransfer.size === 0 || tokenSource.token.isCancellationRequested) {\n                        return;\n                    }\n                    const model = editor.getModel();\n                    if (!model) {\n                        return;\n                    }\n                    const providers = this._languageFeaturesService.documentOnDropEditProvider\n                        .ordered(model)\n                        .filter(provider => {\n                        if (!provider.dropMimeTypes) {\n                            // Keep all providers that don't specify mime types\n                            return true;\n                        }\n                        return provider.dropMimeTypes.some(mime => ourDataTransfer.matches(mime));\n                    });\n                    const edits = yield this.getDropEdits(providers, model, position, ourDataTransfer, tokenSource);\n                    if (tokenSource.token.isCancellationRequested) {\n                        return;\n                    }\n                    if (edits.length) {\n                        const activeEditIndex = this.getInitialActiveEditIndex(model, edits);\n                        const canShowWidget = editor.getOption(36 /* EditorOption.dropIntoEditor */).showDropSelector === 'afterDrop';\n                        // Pass in the parent token here as it tracks cancelling the entire drop operation\n                        yield this._postDropWidgetManager.applyEditAndShowIfNeeded([Range.fromPositions(position)], { activeEditIndex, allEdits: edits }, canShowWidget, token);\n                    }\n                }\n                finally {\n                    tokenSource.dispose();\n                    if (this._currentOperation === p) {\n                        this._currentOperation = undefined;\n                    }\n                }\n            }));\n            this._dropProgressManager.showWhile(position, localize('dropIntoEditorProgress', \"Running drop handlers. Click to cancel\"), p);\n            this._currentOperation = p;\n        });\n    }\n    getDropEdits(providers, model, position, dataTransfer, tokenSource) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const results = yield raceCancellation(Promise.all(providers.map((provider) => __awaiter(this, void 0, void 0, function* () {\n                try {\n                    const edit = yield provider.provideDocumentOnDropEdits(model, position, dataTransfer, tokenSource.token);\n                    if (edit) {\n                        return Object.assign(Object.assign({}, edit), { providerId: provider.id });\n                    }\n                }\n                catch (err) {\n                    console.error(err);\n                }\n                return undefined;\n            }))), tokenSource.token);\n            const edits = coalesce(results !== null && results !== void 0 ? results : []);\n            return sortEditsByYieldTo(edits);\n        });\n    }\n    getInitialActiveEditIndex(model, edits) {\n        const preferredProviders = this._configService.getValue(defaultProviderConfig, { resource: model.uri });\n        for (const [configMime, desiredId] of Object.entries(preferredProviders)) {\n            const editIndex = edits.findIndex(edit => desiredId === edit.providerId\n                && edit.handledMimeType && matchesMimeType(configMime, [edit.handledMimeType]));\n            if (editIndex >= 0) {\n                return editIndex;\n            }\n        }\n        return 0;\n    }\n    extractDataTransferData(dragEvent) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!dragEvent.dataTransfer) {\n                return new VSDataTransfer();\n            }\n            const dataTransfer = toExternalVSDataTransfer(dragEvent.dataTransfer);\n            if (this.treeItemsTransfer.hasData(DraggedTreeItemsIdentifier.prototype)) {\n                const data = this.treeItemsTransfer.getData(DraggedTreeItemsIdentifier.prototype);\n                if (Array.isArray(data)) {\n                    for (const id of data) {\n                        const treeDataTransfer = yield this._treeViewsDragAndDropService.removeDragOperationTransfer(id.identifier);\n                        if (treeDataTransfer) {\n                            for (const [type, value] of treeDataTransfer) {\n                                dataTransfer.replace(type, value);\n                            }\n                        }\n                    }\n                }\n            }\n            return dataTransfer;\n        });\n    }\n};\nDropIntoEditorController.ID = 'editor.contrib.dropIntoEditorController';\nDropIntoEditorController = DropIntoEditorController_1 = __decorate([\n    __param(1, IInstantiationService),\n    __param(2, IConfigurationService),\n    __param(3, ILanguageFeaturesService),\n    __param(4, ITreeViewsDnDService)\n], DropIntoEditorController);\nexport { DropIntoEditorController };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}