{"ast":null,"code":"/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n    r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n    d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = this && this.__param || function (paramIndex, decorator) {\n  return function (target, key) {\n    decorator(target, key, paramIndex);\n  };\n};\nimport { runWhenIdle } from '../../../../base/common/async.js';\nimport { Event } from '../../../../base/common/event.js';\nimport { LRUCache } from '../../../../base/common/map.js';\nimport { Range } from '../../../common/core/range.js';\nimport { CodeLensModel } from './codelens.js';\nimport { registerSingleton } from '../../../../platform/instantiation/common/extensions.js';\nimport { createDecorator } from '../../../../platform/instantiation/common/instantiation.js';\nimport { IStorageService, WillSaveStateReason } from '../../../../platform/storage/common/storage.js';\nexport const ICodeLensCache = createDecorator('ICodeLensCache');\nclass CacheItem {\n  constructor(lineCount, data) {\n    this.lineCount = lineCount;\n    this.data = data;\n  }\n}\nlet CodeLensCache = class CodeLensCache {\n  constructor(storageService) {\n    this._fakeProvider = new class {\n      provideCodeLenses() {\n        throw new Error('not supported');\n      }\n    }();\n    this._cache = new LRUCache(20, 0.75);\n    // remove old data\n    const oldkey = 'codelens/cache';\n    runWhenIdle(() => storageService.remove(oldkey, 1 /* StorageScope.WORKSPACE */));\n    // restore lens data on start\n    const key = 'codelens/cache2';\n    const raw = storageService.get(key, 1 /* StorageScope.WORKSPACE */, '{}');\n    this._deserialize(raw);\n    // store lens data on shutdown\n    Event.once(storageService.onWillSaveState)(e => {\n      if (e.reason === WillSaveStateReason.SHUTDOWN) {\n        storageService.store(key, this._serialize(), 1 /* StorageScope.WORKSPACE */, 1 /* StorageTarget.MACHINE */);\n      }\n    });\n  }\n\n  put(model, data) {\n    // create a copy of the model that is without command-ids\n    // but with comand-labels\n    const copyItems = data.lenses.map(item => {\n      var _a;\n      return {\n        range: item.symbol.range,\n        command: item.symbol.command && {\n          id: '',\n          title: (_a = item.symbol.command) === null || _a === void 0 ? void 0 : _a.title\n        }\n      };\n    });\n    const copyModel = new CodeLensModel();\n    copyModel.add({\n      lenses: copyItems,\n      dispose: () => {}\n    }, this._fakeProvider);\n    const item = new CacheItem(model.getLineCount(), copyModel);\n    this._cache.set(model.uri.toString(), item);\n  }\n  get(model) {\n    const item = this._cache.get(model.uri.toString());\n    return item && item.lineCount === model.getLineCount() ? item.data : undefined;\n  }\n  delete(model) {\n    this._cache.delete(model.uri.toString());\n  }\n  // --- persistence\n  _serialize() {\n    const data = Object.create(null);\n    for (const [key, value] of this._cache) {\n      const lines = new Set();\n      for (const d of value.data.lenses) {\n        lines.add(d.symbol.range.startLineNumber);\n      }\n      data[key] = {\n        lineCount: value.lineCount,\n        lines: [...lines.values()]\n      };\n    }\n    return JSON.stringify(data);\n  }\n  _deserialize(raw) {\n    try {\n      const data = JSON.parse(raw);\n      for (const key in data) {\n        const element = data[key];\n        const lenses = [];\n        for (const line of element.lines) {\n          lenses.push({\n            range: new Range(line, 1, line, 11)\n          });\n        }\n        const model = new CodeLensModel();\n        model.add({\n          lenses,\n          dispose() {}\n        }, this._fakeProvider);\n        this._cache.set(key, new CacheItem(element.lineCount, model));\n      }\n    } catch (_a) {\n      // ignore...\n    }\n  }\n};\nCodeLensCache = __decorate([__param(0, IStorageService)], CodeLensCache);\nexport { CodeLensCache };\nregisterSingleton(ICodeLensCache, CodeLensCache, 1 /* InstantiationType.Delayed */);","map":{"version":3,"names":["__decorate","decorators","target","key","desc","c","arguments","length","r","Object","getOwnPropertyDescriptor","d","Reflect","decorate","i","defineProperty","__param","paramIndex","decorator","runWhenIdle","Event","LRUCache","Range","CodeLensModel","registerSingleton","createDecorator","IStorageService","WillSaveStateReason","ICodeLensCache","CacheItem","constructor","lineCount","data","CodeLensCache","storageService","_fakeProvider","provideCodeLenses","Error","_cache","oldkey","remove","raw","get","_deserialize","once","onWillSaveState","e","reason","SHUTDOWN","store","_serialize","put","model","copyItems","lenses","map","item","_a","range","symbol","command","id","title","copyModel","add","dispose","getLineCount","set","uri","toString","undefined","delete","create","value","lines","Set","startLineNumber","values","JSON","stringify","parse","element","line","push"],"sources":["/home/chlohest/work/website/my_web/node_modules/monaco-editor/esm/vs/editor/contrib/codelens/browser/codeLensCache.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nimport { runWhenIdle } from '../../../../base/common/async.js';\nimport { Event } from '../../../../base/common/event.js';\nimport { LRUCache } from '../../../../base/common/map.js';\nimport { Range } from '../../../common/core/range.js';\nimport { CodeLensModel } from './codelens.js';\nimport { registerSingleton } from '../../../../platform/instantiation/common/extensions.js';\nimport { createDecorator } from '../../../../platform/instantiation/common/instantiation.js';\nimport { IStorageService, WillSaveStateReason } from '../../../../platform/storage/common/storage.js';\nexport const ICodeLensCache = createDecorator('ICodeLensCache');\nclass CacheItem {\n    constructor(lineCount, data) {\n        this.lineCount = lineCount;\n        this.data = data;\n    }\n}\nlet CodeLensCache = class CodeLensCache {\n    constructor(storageService) {\n        this._fakeProvider = new class {\n            provideCodeLenses() {\n                throw new Error('not supported');\n            }\n        };\n        this._cache = new LRUCache(20, 0.75);\n        // remove old data\n        const oldkey = 'codelens/cache';\n        runWhenIdle(() => storageService.remove(oldkey, 1 /* StorageScope.WORKSPACE */));\n        // restore lens data on start\n        const key = 'codelens/cache2';\n        const raw = storageService.get(key, 1 /* StorageScope.WORKSPACE */, '{}');\n        this._deserialize(raw);\n        // store lens data on shutdown\n        Event.once(storageService.onWillSaveState)(e => {\n            if (e.reason === WillSaveStateReason.SHUTDOWN) {\n                storageService.store(key, this._serialize(), 1 /* StorageScope.WORKSPACE */, 1 /* StorageTarget.MACHINE */);\n            }\n        });\n    }\n    put(model, data) {\n        // create a copy of the model that is without command-ids\n        // but with comand-labels\n        const copyItems = data.lenses.map(item => {\n            var _a;\n            return {\n                range: item.symbol.range,\n                command: item.symbol.command && { id: '', title: (_a = item.symbol.command) === null || _a === void 0 ? void 0 : _a.title },\n            };\n        });\n        const copyModel = new CodeLensModel();\n        copyModel.add({ lenses: copyItems, dispose: () => { } }, this._fakeProvider);\n        const item = new CacheItem(model.getLineCount(), copyModel);\n        this._cache.set(model.uri.toString(), item);\n    }\n    get(model) {\n        const item = this._cache.get(model.uri.toString());\n        return item && item.lineCount === model.getLineCount() ? item.data : undefined;\n    }\n    delete(model) {\n        this._cache.delete(model.uri.toString());\n    }\n    // --- persistence\n    _serialize() {\n        const data = Object.create(null);\n        for (const [key, value] of this._cache) {\n            const lines = new Set();\n            for (const d of value.data.lenses) {\n                lines.add(d.symbol.range.startLineNumber);\n            }\n            data[key] = {\n                lineCount: value.lineCount,\n                lines: [...lines.values()]\n            };\n        }\n        return JSON.stringify(data);\n    }\n    _deserialize(raw) {\n        try {\n            const data = JSON.parse(raw);\n            for (const key in data) {\n                const element = data[key];\n                const lenses = [];\n                for (const line of element.lines) {\n                    lenses.push({ range: new Range(line, 1, line, 11) });\n                }\n                const model = new CodeLensModel();\n                model.add({ lenses, dispose() { } }, this._fakeProvider);\n                this._cache.set(key, new CacheItem(element.lineCount, model));\n            }\n        }\n        catch (_a) {\n            // ignore...\n        }\n    }\n};\nCodeLensCache = __decorate([\n    __param(0, IStorageService)\n], CodeLensCache);\nexport { CodeLensCache };\nregisterSingleton(ICodeLensCache, CodeLensCache, 1 /* InstantiationType.Delayed */);\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}