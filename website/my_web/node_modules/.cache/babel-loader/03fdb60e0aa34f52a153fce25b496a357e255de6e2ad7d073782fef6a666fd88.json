{"ast":null,"code":"/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\nimport { createCancelablePromise, TimeoutTimer } from '../../../../base/common/async.js';\nimport { isCancellationError } from '../../../../base/common/errors.js';\nimport { Emitter } from '../../../../base/common/event.js';\nimport { Disposable, MutableDisposable } from '../../../../base/common/lifecycle.js';\nimport { isEqual } from '../../../../base/common/resources.js';\nimport { Position } from '../../../common/core/position.js';\nimport { Selection } from '../../../common/core/selection.js';\nimport { RawContextKey } from '../../../../platform/contextkey/common/contextkey.js';\nimport { Progress } from '../../../../platform/progress/common/progress.js';\nimport { CodeActionKind, CodeActionTriggerSource } from '../common/types.js';\nimport { getCodeActions } from './codeAction.js';\nexport const SUPPORTED_CODE_ACTIONS = new RawContextKey('supportedCodeAction', '');\nclass CodeActionOracle extends Disposable {\n  constructor(_editor, _markerService, _signalChange, _delay = 250) {\n    super();\n    this._editor = _editor;\n    this._markerService = _markerService;\n    this._signalChange = _signalChange;\n    this._delay = _delay;\n    this._autoTriggerTimer = this._register(new TimeoutTimer());\n    this._register(this._markerService.onMarkerChanged(e => this._onMarkerChanges(e)));\n    this._register(this._editor.onDidChangeCursorPosition(() => this._tryAutoTrigger()));\n  }\n  trigger(trigger) {\n    const selection = this._getRangeOfSelectionUnlessWhitespaceEnclosed(trigger);\n    this._signalChange(selection ? {\n      trigger,\n      selection\n    } : undefined);\n  }\n  _onMarkerChanges(resources) {\n    const model = this._editor.getModel();\n    if (model && resources.some(resource => isEqual(resource, model.uri))) {\n      this._tryAutoTrigger();\n    }\n  }\n  _tryAutoTrigger() {\n    this._autoTriggerTimer.cancelAndSet(() => {\n      this.trigger({\n        type: 2 /* CodeActionTriggerType.Auto */,\n        triggerAction: CodeActionTriggerSource.Default\n      });\n    }, this._delay);\n  }\n  _getRangeOfSelectionUnlessWhitespaceEnclosed(trigger) {\n    if (!this._editor.hasModel()) {\n      return undefined;\n    }\n    const model = this._editor.getModel();\n    const selection = this._editor.getSelection();\n    if (selection.isEmpty() && trigger.type === 2 /* CodeActionTriggerType.Auto */) {\n      const {\n        lineNumber,\n        column\n      } = selection.getPosition();\n      const line = model.getLineContent(lineNumber);\n      if (line.length === 0) {\n        // empty line\n        return undefined;\n      } else if (column === 1) {\n        // look only right\n        if (/\\s/.test(line[0])) {\n          return undefined;\n        }\n      } else if (column === model.getLineMaxColumn(lineNumber)) {\n        // look only left\n        if (/\\s/.test(line[line.length - 1])) {\n          return undefined;\n        }\n      } else {\n        // look left and right\n        if (/\\s/.test(line[column - 2]) && /\\s/.test(line[column - 1])) {\n          return undefined;\n        }\n      }\n    }\n    return selection;\n  }\n}\nexport var CodeActionsState;\n(function (CodeActionsState) {\n  CodeActionsState.Empty = {\n    type: 0 /* Type.Empty */\n  };\n  class Triggered {\n    constructor(trigger, position, _cancellablePromise) {\n      this.trigger = trigger;\n      this.position = position;\n      this._cancellablePromise = _cancellablePromise;\n      this.type = 1 /* Type.Triggered */;\n      this.actions = _cancellablePromise.catch(e => {\n        if (isCancellationError(e)) {\n          return emptyCodeActionSet;\n        }\n        throw e;\n      });\n    }\n    cancel() {\n      this._cancellablePromise.cancel();\n    }\n  }\n  CodeActionsState.Triggered = Triggered;\n})(CodeActionsState || (CodeActionsState = {}));\nconst emptyCodeActionSet = Object.freeze({\n  allActions: [],\n  validActions: [],\n  dispose: () => {},\n  documentation: [],\n  hasAutoFix: false\n});\nexport class CodeActionModel extends Disposable {\n  constructor(_editor, _registry, _markerService, contextKeyService, _progressService, _configurationService) {\n    super();\n    this._editor = _editor;\n    this._registry = _registry;\n    this._markerService = _markerService;\n    this._progressService = _progressService;\n    this._configurationService = _configurationService;\n    this._codeActionOracle = this._register(new MutableDisposable());\n    this._state = CodeActionsState.Empty;\n    this._onDidChangeState = this._register(new Emitter());\n    this.onDidChangeState = this._onDidChangeState.event;\n    this._disposed = false;\n    this._supportedCodeActions = SUPPORTED_CODE_ACTIONS.bindTo(contextKeyService);\n    this._register(this._editor.onDidChangeModel(() => this._update()));\n    this._register(this._editor.onDidChangeModelLanguage(() => this._update()));\n    this._register(this._registry.onDidChange(() => this._update()));\n    this._update();\n  }\n  dispose() {\n    if (this._disposed) {\n      return;\n    }\n    this._disposed = true;\n    super.dispose();\n    this.setState(CodeActionsState.Empty, true);\n  }\n  _settingEnabledNearbyQuickfixes() {\n    var _a;\n    const model = (_a = this._editor) === null || _a === void 0 ? void 0 : _a.getModel();\n    return this._configurationService ? this._configurationService.getValue('editor.codeActionWidget.includeNearbyQuickfixes', {\n      resource: model === null || model === void 0 ? void 0 : model.uri\n    }) : false;\n  }\n  _update() {\n    if (this._disposed) {\n      return;\n    }\n    this._codeActionOracle.value = undefined;\n    this.setState(CodeActionsState.Empty);\n    const model = this._editor.getModel();\n    if (model && this._registry.has(model) && !this._editor.getOption(90 /* EditorOption.readOnly */)) {\n      const supportedActions = this._registry.all(model).flatMap(provider => {\n        var _a;\n        return (_a = provider.providedCodeActionKinds) !== null && _a !== void 0 ? _a : [];\n      });\n      this._supportedCodeActions.set(supportedActions.join(' '));\n      this._codeActionOracle.value = new CodeActionOracle(this._editor, this._markerService, trigger => {\n        var _a;\n        if (!trigger) {\n          this.setState(CodeActionsState.Empty);\n          return;\n        }\n        const startPosition = trigger.selection.getStartPosition();\n        const actions = createCancelablePromise(token => __awaiter(this, void 0, void 0, function* () {\n          var _b, _c, _d, _e, _f, _g;\n          if (this._settingEnabledNearbyQuickfixes() && trigger.trigger.type === 1 /* CodeActionTriggerType.Invoke */ && (trigger.trigger.triggerAction === CodeActionTriggerSource.QuickFix || ((_c = (_b = trigger.trigger.filter) === null || _b === void 0 ? void 0 : _b.include) === null || _c === void 0 ? void 0 : _c.contains(CodeActionKind.QuickFix)))) {\n            const codeActionSet = yield getCodeActions(this._registry, model, trigger.selection, trigger.trigger, Progress.None, token);\n            if (token.isCancellationRequested) {\n              return emptyCodeActionSet;\n            }\n            // Search for quickfixes in the curret code action set.\n            const foundQuickfix = (_d = codeActionSet.validActions) === null || _d === void 0 ? void 0 : _d.some(action => action.action.kind ? CodeActionKind.QuickFix.contains(new CodeActionKind(action.action.kind)) : false);\n            if (!foundQuickfix) {\n              const allMarkers = this._markerService.read({\n                resource: model.uri\n              });\n              // If markers exists, and there are no quickfixes found or length is zero, check for quickfixes on that line.\n              if (allMarkers.length > 0) {\n                const currPosition = trigger.selection.getPosition();\n                let trackedPosition = currPosition;\n                let distance = Number.MAX_VALUE;\n                let toBeModified = false;\n                for (const marker of allMarkers) {\n                  const col = marker.endColumn;\n                  const row = marker.endLineNumber;\n                  const startRow = marker.startLineNumber;\n                  // Found quickfix on the same line and check relative distance to other markers\n                  if ((row === currPosition.lineNumber || startRow === currPosition.lineNumber) && Math.abs(currPosition.column - col) < distance) {\n                    distance = Math.abs(currPosition.column - col);\n                    toBeModified = true;\n                    trackedPosition = new Position(row, col);\n                  }\n                }\n                // Only retriggers if actually found quickfix on the same line as cursor\n                if (toBeModified) {\n                  const newCodeActionTrigger = {\n                    type: trigger.trigger.type,\n                    triggerAction: trigger.trigger.triggerAction,\n                    filter: {\n                      include: ((_e = trigger.trigger.filter) === null || _e === void 0 ? void 0 : _e.include) ? (_f = trigger.trigger.filter) === null || _f === void 0 ? void 0 : _f.include : CodeActionKind.QuickFix\n                    },\n                    autoApply: trigger.trigger.autoApply,\n                    context: {\n                      notAvailableMessage: ((_g = trigger.trigger.context) === null || _g === void 0 ? void 0 : _g.notAvailableMessage) || '',\n                      position: trackedPosition\n                    }\n                  };\n                  const selectionAsPosition = new Selection(trackedPosition.lineNumber, trackedPosition.column, trackedPosition.lineNumber, trackedPosition.column);\n                  const actionsAtMarker = yield getCodeActions(this._registry, model, selectionAsPosition, newCodeActionTrigger, Progress.None, token);\n                  const currentActions = [...codeActionSet.validActions];\n                  if (actionsAtMarker.validActions.length !== 0) {\n                    actionsAtMarker.validActions.forEach(action => {\n                      action.highlightRange = action.action.isPreferred;\n                    });\n                    // Already filtered through to only get quickfixes, so no need to filter again.\n                    currentActions.push(...actionsAtMarker.validActions);\n                  }\n                  return {\n                    validActions: currentActions,\n                    allActions: codeActionSet.allActions,\n                    documentation: codeActionSet.documentation,\n                    hasAutoFix: codeActionSet.hasAutoFix,\n                    dispose: () => {\n                      codeActionSet.dispose();\n                    }\n                  };\n                }\n              }\n            }\n          }\n          // temporarilly hiding here as this is enabled/disabled behind a setting.\n          return getCodeActions(this._registry, model, trigger.selection, trigger.trigger, Progress.None, token);\n        }));\n        if (trigger.trigger.type === 1 /* CodeActionTriggerType.Invoke */) {\n          (_a = this._progressService) === null || _a === void 0 ? void 0 : _a.showWhile(actions, 250);\n        }\n        this.setState(new CodeActionsState.Triggered(trigger.trigger, startPosition, actions));\n      }, undefined);\n      this._codeActionOracle.value.trigger({\n        type: 2 /* CodeActionTriggerType.Auto */,\n        triggerAction: CodeActionTriggerSource.Default\n      });\n    } else {\n      this._supportedCodeActions.reset();\n    }\n  }\n  trigger(trigger) {\n    var _a;\n    (_a = this._codeActionOracle.value) === null || _a === void 0 ? void 0 : _a.trigger(trigger);\n  }\n  setState(newState, skipNotify) {\n    if (newState === this._state) {\n      return;\n    }\n    // Cancel old request\n    if (this._state.type === 1 /* CodeActionsState.Type.Triggered */) {\n      this._state.cancel();\n    }\n    this._state = newState;\n    if (!skipNotify && !this._disposed) {\n      this._onDidChangeState.fire(newState);\n    }\n  }\n}","map":{"version":3,"names":["__awaiter","thisArg","_arguments","P","generator","adopt","value","resolve","Promise","reject","fulfilled","step","next","e","rejected","result","done","then","apply","createCancelablePromise","TimeoutTimer","isCancellationError","Emitter","Disposable","MutableDisposable","isEqual","Position","Selection","RawContextKey","Progress","CodeActionKind","CodeActionTriggerSource","getCodeActions","SUPPORTED_CODE_ACTIONS","CodeActionOracle","constructor","_editor","_markerService","_signalChange","_delay","_autoTriggerTimer","_register","onMarkerChanged","_onMarkerChanges","onDidChangeCursorPosition","_tryAutoTrigger","trigger","selection","_getRangeOfSelectionUnlessWhitespaceEnclosed","undefined","resources","model","getModel","some","resource","uri","cancelAndSet","type","triggerAction","Default","hasModel","getSelection","isEmpty","lineNumber","column","getPosition","line","getLineContent","length","test","getLineMaxColumn","CodeActionsState","Empty","Triggered","position","_cancellablePromise","actions","catch","emptyCodeActionSet","cancel","Object","freeze","allActions","validActions","dispose","documentation","hasAutoFix","CodeActionModel","_registry","contextKeyService","_progressService","_configurationService","_codeActionOracle","_state","_onDidChangeState","onDidChangeState","event","_disposed","_supportedCodeActions","bindTo","onDidChangeModel","_update","onDidChangeModelLanguage","onDidChange","setState","_settingEnabledNearbyQuickfixes","_a","getValue","has","getOption","supportedActions","all","flatMap","provider","providedCodeActionKinds","set","join","startPosition","getStartPosition","token","_b","_c","_d","_e","_f","_g","QuickFix","filter","include","contains","codeActionSet","None","isCancellationRequested","foundQuickfix","action","kind","allMarkers","read","currPosition","trackedPosition","distance","Number","MAX_VALUE","toBeModified","marker","col","endColumn","row","endLineNumber","startRow","startLineNumber","Math","abs","newCodeActionTrigger","autoApply","context","notAvailableMessage","selectionAsPosition","actionsAtMarker","currentActions","forEach","highlightRange","isPreferred","push","showWhile","reset","newState","skipNotify","fire"],"sources":["/home/chlohest/work/website/my_web/node_modules/monaco-editor/esm/vs/editor/contrib/codeAction/browser/codeActionModel.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { createCancelablePromise, TimeoutTimer } from '../../../../base/common/async.js';\nimport { isCancellationError } from '../../../../base/common/errors.js';\nimport { Emitter } from '../../../../base/common/event.js';\nimport { Disposable, MutableDisposable } from '../../../../base/common/lifecycle.js';\nimport { isEqual } from '../../../../base/common/resources.js';\nimport { Position } from '../../../common/core/position.js';\nimport { Selection } from '../../../common/core/selection.js';\nimport { RawContextKey } from '../../../../platform/contextkey/common/contextkey.js';\nimport { Progress } from '../../../../platform/progress/common/progress.js';\nimport { CodeActionKind, CodeActionTriggerSource } from '../common/types.js';\nimport { getCodeActions } from './codeAction.js';\nexport const SUPPORTED_CODE_ACTIONS = new RawContextKey('supportedCodeAction', '');\nclass CodeActionOracle extends Disposable {\n    constructor(_editor, _markerService, _signalChange, _delay = 250) {\n        super();\n        this._editor = _editor;\n        this._markerService = _markerService;\n        this._signalChange = _signalChange;\n        this._delay = _delay;\n        this._autoTriggerTimer = this._register(new TimeoutTimer());\n        this._register(this._markerService.onMarkerChanged(e => this._onMarkerChanges(e)));\n        this._register(this._editor.onDidChangeCursorPosition(() => this._tryAutoTrigger()));\n    }\n    trigger(trigger) {\n        const selection = this._getRangeOfSelectionUnlessWhitespaceEnclosed(trigger);\n        this._signalChange(selection ? { trigger, selection } : undefined);\n    }\n    _onMarkerChanges(resources) {\n        const model = this._editor.getModel();\n        if (model && resources.some(resource => isEqual(resource, model.uri))) {\n            this._tryAutoTrigger();\n        }\n    }\n    _tryAutoTrigger() {\n        this._autoTriggerTimer.cancelAndSet(() => {\n            this.trigger({ type: 2 /* CodeActionTriggerType.Auto */, triggerAction: CodeActionTriggerSource.Default });\n        }, this._delay);\n    }\n    _getRangeOfSelectionUnlessWhitespaceEnclosed(trigger) {\n        if (!this._editor.hasModel()) {\n            return undefined;\n        }\n        const model = this._editor.getModel();\n        const selection = this._editor.getSelection();\n        if (selection.isEmpty() && trigger.type === 2 /* CodeActionTriggerType.Auto */) {\n            const { lineNumber, column } = selection.getPosition();\n            const line = model.getLineContent(lineNumber);\n            if (line.length === 0) {\n                // empty line\n                return undefined;\n            }\n            else if (column === 1) {\n                // look only right\n                if (/\\s/.test(line[0])) {\n                    return undefined;\n                }\n            }\n            else if (column === model.getLineMaxColumn(lineNumber)) {\n                // look only left\n                if (/\\s/.test(line[line.length - 1])) {\n                    return undefined;\n                }\n            }\n            else {\n                // look left and right\n                if (/\\s/.test(line[column - 2]) && /\\s/.test(line[column - 1])) {\n                    return undefined;\n                }\n            }\n        }\n        return selection;\n    }\n}\nexport var CodeActionsState;\n(function (CodeActionsState) {\n    CodeActionsState.Empty = { type: 0 /* Type.Empty */ };\n    class Triggered {\n        constructor(trigger, position, _cancellablePromise) {\n            this.trigger = trigger;\n            this.position = position;\n            this._cancellablePromise = _cancellablePromise;\n            this.type = 1 /* Type.Triggered */;\n            this.actions = _cancellablePromise.catch((e) => {\n                if (isCancellationError(e)) {\n                    return emptyCodeActionSet;\n                }\n                throw e;\n            });\n        }\n        cancel() {\n            this._cancellablePromise.cancel();\n        }\n    }\n    CodeActionsState.Triggered = Triggered;\n})(CodeActionsState || (CodeActionsState = {}));\nconst emptyCodeActionSet = Object.freeze({\n    allActions: [],\n    validActions: [],\n    dispose: () => { },\n    documentation: [],\n    hasAutoFix: false\n});\nexport class CodeActionModel extends Disposable {\n    constructor(_editor, _registry, _markerService, contextKeyService, _progressService, _configurationService) {\n        super();\n        this._editor = _editor;\n        this._registry = _registry;\n        this._markerService = _markerService;\n        this._progressService = _progressService;\n        this._configurationService = _configurationService;\n        this._codeActionOracle = this._register(new MutableDisposable());\n        this._state = CodeActionsState.Empty;\n        this._onDidChangeState = this._register(new Emitter());\n        this.onDidChangeState = this._onDidChangeState.event;\n        this._disposed = false;\n        this._supportedCodeActions = SUPPORTED_CODE_ACTIONS.bindTo(contextKeyService);\n        this._register(this._editor.onDidChangeModel(() => this._update()));\n        this._register(this._editor.onDidChangeModelLanguage(() => this._update()));\n        this._register(this._registry.onDidChange(() => this._update()));\n        this._update();\n    }\n    dispose() {\n        if (this._disposed) {\n            return;\n        }\n        this._disposed = true;\n        super.dispose();\n        this.setState(CodeActionsState.Empty, true);\n    }\n    _settingEnabledNearbyQuickfixes() {\n        var _a;\n        const model = (_a = this._editor) === null || _a === void 0 ? void 0 : _a.getModel();\n        return this._configurationService ? this._configurationService.getValue('editor.codeActionWidget.includeNearbyQuickfixes', { resource: model === null || model === void 0 ? void 0 : model.uri }) : false;\n    }\n    _update() {\n        if (this._disposed) {\n            return;\n        }\n        this._codeActionOracle.value = undefined;\n        this.setState(CodeActionsState.Empty);\n        const model = this._editor.getModel();\n        if (model\n            && this._registry.has(model)\n            && !this._editor.getOption(90 /* EditorOption.readOnly */)) {\n            const supportedActions = this._registry.all(model).flatMap(provider => { var _a; return (_a = provider.providedCodeActionKinds) !== null && _a !== void 0 ? _a : []; });\n            this._supportedCodeActions.set(supportedActions.join(' '));\n            this._codeActionOracle.value = new CodeActionOracle(this._editor, this._markerService, trigger => {\n                var _a;\n                if (!trigger) {\n                    this.setState(CodeActionsState.Empty);\n                    return;\n                }\n                const startPosition = trigger.selection.getStartPosition();\n                const actions = createCancelablePromise((token) => __awaiter(this, void 0, void 0, function* () {\n                    var _b, _c, _d, _e, _f, _g;\n                    if (this._settingEnabledNearbyQuickfixes() && trigger.trigger.type === 1 /* CodeActionTriggerType.Invoke */ && (trigger.trigger.triggerAction === CodeActionTriggerSource.QuickFix || ((_c = (_b = trigger.trigger.filter) === null || _b === void 0 ? void 0 : _b.include) === null || _c === void 0 ? void 0 : _c.contains(CodeActionKind.QuickFix)))) {\n                        const codeActionSet = yield getCodeActions(this._registry, model, trigger.selection, trigger.trigger, Progress.None, token);\n                        if (token.isCancellationRequested) {\n                            return emptyCodeActionSet;\n                        }\n                        // Search for quickfixes in the curret code action set.\n                        const foundQuickfix = (_d = codeActionSet.validActions) === null || _d === void 0 ? void 0 : _d.some(action => action.action.kind ? CodeActionKind.QuickFix.contains(new CodeActionKind(action.action.kind)) : false);\n                        if (!foundQuickfix) {\n                            const allMarkers = this._markerService.read({ resource: model.uri });\n                            // If markers exists, and there are no quickfixes found or length is zero, check for quickfixes on that line.\n                            if (allMarkers.length > 0) {\n                                const currPosition = trigger.selection.getPosition();\n                                let trackedPosition = currPosition;\n                                let distance = Number.MAX_VALUE;\n                                let toBeModified = false;\n                                for (const marker of allMarkers) {\n                                    const col = marker.endColumn;\n                                    const row = marker.endLineNumber;\n                                    const startRow = marker.startLineNumber;\n                                    // Found quickfix on the same line and check relative distance to other markers\n                                    if ((row === currPosition.lineNumber || startRow === currPosition.lineNumber) && Math.abs(currPosition.column - col) < distance) {\n                                        distance = Math.abs(currPosition.column - col);\n                                        toBeModified = true;\n                                        trackedPosition = new Position(row, col);\n                                    }\n                                }\n                                // Only retriggers if actually found quickfix on the same line as cursor\n                                if (toBeModified) {\n                                    const newCodeActionTrigger = {\n                                        type: trigger.trigger.type,\n                                        triggerAction: trigger.trigger.triggerAction,\n                                        filter: { include: ((_e = trigger.trigger.filter) === null || _e === void 0 ? void 0 : _e.include) ? (_f = trigger.trigger.filter) === null || _f === void 0 ? void 0 : _f.include : CodeActionKind.QuickFix },\n                                        autoApply: trigger.trigger.autoApply,\n                                        context: { notAvailableMessage: ((_g = trigger.trigger.context) === null || _g === void 0 ? void 0 : _g.notAvailableMessage) || '', position: trackedPosition }\n                                    };\n                                    const selectionAsPosition = new Selection(trackedPosition.lineNumber, trackedPosition.column, trackedPosition.lineNumber, trackedPosition.column);\n                                    const actionsAtMarker = yield getCodeActions(this._registry, model, selectionAsPosition, newCodeActionTrigger, Progress.None, token);\n                                    const currentActions = [...codeActionSet.validActions];\n                                    if (actionsAtMarker.validActions.length !== 0) {\n                                        actionsAtMarker.validActions.forEach(action => {\n                                            action.highlightRange = action.action.isPreferred;\n                                        });\n                                        // Already filtered through to only get quickfixes, so no need to filter again.\n                                        currentActions.push(...actionsAtMarker.validActions);\n                                    }\n                                    return { validActions: currentActions, allActions: codeActionSet.allActions, documentation: codeActionSet.documentation, hasAutoFix: codeActionSet.hasAutoFix, dispose: () => { codeActionSet.dispose(); } };\n                                }\n                            }\n                        }\n                    }\n                    // temporarilly hiding here as this is enabled/disabled behind a setting.\n                    return getCodeActions(this._registry, model, trigger.selection, trigger.trigger, Progress.None, token);\n                }));\n                if (trigger.trigger.type === 1 /* CodeActionTriggerType.Invoke */) {\n                    (_a = this._progressService) === null || _a === void 0 ? void 0 : _a.showWhile(actions, 250);\n                }\n                this.setState(new CodeActionsState.Triggered(trigger.trigger, startPosition, actions));\n            }, undefined);\n            this._codeActionOracle.value.trigger({ type: 2 /* CodeActionTriggerType.Auto */, triggerAction: CodeActionTriggerSource.Default });\n        }\n        else {\n            this._supportedCodeActions.reset();\n        }\n    }\n    trigger(trigger) {\n        var _a;\n        (_a = this._codeActionOracle.value) === null || _a === void 0 ? void 0 : _a.trigger(trigger);\n    }\n    setState(newState, skipNotify) {\n        if (newState === this._state) {\n            return;\n        }\n        // Cancel old request\n        if (this._state.type === 1 /* CodeActionsState.Type.Triggered */) {\n            this._state.cancel();\n        }\n        this._state = newState;\n        if (!skipNotify && !this._disposed) {\n            this._onDidChangeState.fire(newState);\n        }\n    }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}