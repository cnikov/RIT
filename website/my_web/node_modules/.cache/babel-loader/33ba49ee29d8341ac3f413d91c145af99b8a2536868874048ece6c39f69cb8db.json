{"ast":null,"code":"/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n    r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n    d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = this && this.__param || function (paramIndex, decorator) {\n  return function (target, key) {\n    decorator(target, key, paramIndex);\n  };\n};\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\nimport { CancellationTokenSource } from '../../../../base/common/cancellation.js';\nimport { matchesSubString } from '../../../../base/common/filters.js';\nimport { Disposable, MutableDisposable } from '../../../../base/common/lifecycle.js';\nimport { derived, disposableObservableValue, transaction } from '../../../../base/common/observable.js';\nimport { Position } from '../../../common/core/position.js';\nimport { InlineCompletionTriggerKind } from '../../../common/languages.js';\nimport { ILanguageConfigurationService } from '../../../common/languages/languageConfigurationRegistry.js';\nimport { ILanguageFeaturesService } from '../../../common/services/languageFeatures.js';\nimport { provideInlineCompletions } from './provideInlineCompletions.js';\nimport { SingleTextEdit } from './singleTextEdit.js';\nlet InlineCompletionsSource = class InlineCompletionsSource extends Disposable {\n  constructor(textModel, versionId, _debounceValue, languageFeaturesService, languageConfigurationService) {\n    super();\n    this.textModel = textModel;\n    this.versionId = versionId;\n    this._debounceValue = _debounceValue;\n    this.languageFeaturesService = languageFeaturesService;\n    this.languageConfigurationService = languageConfigurationService;\n    this._updateOperation = this._register(new MutableDisposable());\n    this.inlineCompletions = disposableObservableValue('inlineCompletions', undefined);\n    this.suggestWidgetInlineCompletions = disposableObservableValue('suggestWidgetInlineCompletions', undefined);\n    this._register(this.textModel.onDidChangeContent(() => {\n      this._updateOperation.clear();\n    }));\n  }\n  fetch(position, context, activeInlineCompletion) {\n    var _a, _b;\n    const request = new UpdateRequest(position, context, this.textModel.getVersionId());\n    const target = context.selectedSuggestionInfo ? this.suggestWidgetInlineCompletions : this.inlineCompletions;\n    if ((_a = this._updateOperation.value) === null || _a === void 0 ? void 0 : _a.request.satisfies(request)) {\n      return this._updateOperation.value.promise;\n    } else if ((_b = target.get()) === null || _b === void 0 ? void 0 : _b.request.satisfies(request)) {\n      return Promise.resolve(true);\n    }\n    const updateOngoing = !!this._updateOperation.value;\n    this._updateOperation.clear();\n    const source = new CancellationTokenSource();\n    const promise = (() => __awaiter(this, void 0, void 0, function* () {\n      const shouldDebounce = updateOngoing || context.triggerKind === InlineCompletionTriggerKind.Automatic;\n      if (shouldDebounce) {\n        // This debounces the operation\n        yield wait(this._debounceValue.get(this.textModel));\n      }\n      if (source.token.isCancellationRequested || this.textModel.getVersionId() !== request.versionId) {\n        return false;\n      }\n      const startTime = new Date();\n      const updatedCompletions = yield provideInlineCompletions(this.languageFeaturesService.inlineCompletionsProvider, position, this.textModel, context, source.token, this.languageConfigurationService);\n      if (source.token.isCancellationRequested || this.textModel.getVersionId() !== request.versionId) {\n        return false;\n      }\n      const endTime = new Date();\n      this._debounceValue.update(this.textModel, endTime.getTime() - startTime.getTime());\n      const completions = new UpToDateInlineCompletions(updatedCompletions, request, this.textModel, this.versionId);\n      if (activeInlineCompletion) {\n        const asInlineCompletion = activeInlineCompletion.toInlineCompletion(undefined);\n        if (activeInlineCompletion.canBeReused(this.textModel, position) && !updatedCompletions.has(asInlineCompletion)) {\n          completions.prepend(activeInlineCompletion.inlineCompletion, asInlineCompletion.range, true);\n        }\n      }\n      this._updateOperation.clear();\n      transaction(tx => {\n        /** @description Update completions with provider result */\n        target.set(completions, tx);\n      });\n      return true;\n    }))();\n    const updateOperation = new UpdateOperation(request, source, promise);\n    this._updateOperation.value = updateOperation;\n    return promise;\n  }\n  clear(tx) {\n    this._updateOperation.clear();\n    this.inlineCompletions.set(undefined, tx);\n    this.suggestWidgetInlineCompletions.set(undefined, tx);\n  }\n  clearSuggestWidgetInlineCompletions(tx) {\n    var _a;\n    if ((_a = this._updateOperation.value) === null || _a === void 0 ? void 0 : _a.request.context.selectedSuggestionInfo) {\n      this._updateOperation.clear();\n    }\n    this.suggestWidgetInlineCompletions.set(undefined, tx);\n  }\n  cancelUpdate() {\n    this._updateOperation.clear();\n  }\n};\nInlineCompletionsSource = __decorate([__param(3, ILanguageFeaturesService), __param(4, ILanguageConfigurationService)], InlineCompletionsSource);\nexport { InlineCompletionsSource };\nfunction wait(ms, cancellationToken) {\n  return new Promise(resolve => {\n    let d = undefined;\n    const handle = setTimeout(() => {\n      if (d) {\n        d.dispose();\n      }\n      resolve();\n    }, ms);\n    if (cancellationToken) {\n      d = cancellationToken.onCancellationRequested(() => {\n        clearTimeout(handle);\n        if (d) {\n          d.dispose();\n        }\n        resolve();\n      });\n    }\n  });\n}\nclass UpdateRequest {\n  constructor(position, context, versionId) {\n    this.position = position;\n    this.context = context;\n    this.versionId = versionId;\n  }\n  satisfies(other) {\n    return this.position.equals(other.position) && equals(this.context.selectedSuggestionInfo, other.context.selectedSuggestionInfo, (v1, v2) => v1.equals(v2)) && (other.context.triggerKind === InlineCompletionTriggerKind.Automatic || this.context.triggerKind === InlineCompletionTriggerKind.Explicit) && this.versionId === other.versionId;\n  }\n}\nfunction equals(v1, v2, equals) {\n  if (!v1 || !v2) {\n    return v1 === v2;\n  }\n  return equals(v1, v2);\n}\nclass UpdateOperation {\n  constructor(request, cancellationTokenSource, promise) {\n    this.request = request;\n    this.cancellationTokenSource = cancellationTokenSource;\n    this.promise = promise;\n  }\n  dispose() {\n    this.cancellationTokenSource.cancel();\n  }\n}\nexport class UpToDateInlineCompletions {\n  get inlineCompletions() {\n    return this._inlineCompletions;\n  }\n  constructor(inlineCompletionProviderResult, request, textModel, versionId) {\n    this.inlineCompletionProviderResult = inlineCompletionProviderResult;\n    this.request = request;\n    this.textModel = textModel;\n    this.versionId = versionId;\n    this._refCount = 1;\n    this._prependedInlineCompletionItems = [];\n    this._rangeVersionIdValue = 0;\n    this._rangeVersionId = derived(this, reader => {\n      this.versionId.read(reader);\n      let changed = false;\n      for (const i of this._inlineCompletions) {\n        changed = changed || i._updateRange(this.textModel);\n      }\n      if (changed) {\n        this._rangeVersionIdValue++;\n      }\n      return this._rangeVersionIdValue;\n    });\n    const ids = textModel.deltaDecorations([], inlineCompletionProviderResult.completions.map(i => ({\n      range: i.range,\n      options: {\n        description: 'inline-completion-tracking-range'\n      }\n    })));\n    this._inlineCompletions = inlineCompletionProviderResult.completions.map((i, index) => new InlineCompletionWithUpdatedRange(i, ids[index], this._rangeVersionId));\n  }\n  clone() {\n    this._refCount++;\n    return this;\n  }\n  dispose() {\n    this._refCount--;\n    if (this._refCount === 0) {\n      setTimeout(() => {\n        // To fix https://github.com/microsoft/vscode/issues/188348\n        if (!this.textModel.isDisposed()) {\n          // This is just cleanup. It's ok if it happens with a delay.\n          this.textModel.deltaDecorations(this._inlineCompletions.map(i => i.decorationId), []);\n        }\n      }, 0);\n      this.inlineCompletionProviderResult.dispose();\n      for (const i of this._prependedInlineCompletionItems) {\n        i.source.removeRef();\n      }\n    }\n  }\n  prepend(inlineCompletion, range, addRefToSource) {\n    if (addRefToSource) {\n      inlineCompletion.source.addRef();\n    }\n    const id = this.textModel.deltaDecorations([], [{\n      range,\n      options: {\n        description: 'inline-completion-tracking-range'\n      }\n    }])[0];\n    this._inlineCompletions.unshift(new InlineCompletionWithUpdatedRange(inlineCompletion, id, this._rangeVersionId, range));\n    this._prependedInlineCompletionItems.push(inlineCompletion);\n  }\n}\nexport class InlineCompletionWithUpdatedRange {\n  get forwardStable() {\n    var _a;\n    return (_a = this.inlineCompletion.source.inlineCompletions.enableForwardStability) !== null && _a !== void 0 ? _a : false;\n  }\n  constructor(inlineCompletion, decorationId, rangeVersion, initialRange) {\n    this.inlineCompletion = inlineCompletion;\n    this.decorationId = decorationId;\n    this.rangeVersion = rangeVersion;\n    this.semanticId = JSON.stringify([this.inlineCompletion.filterText, this.inlineCompletion.insertText, this.inlineCompletion.range.getStartPosition().toString()]);\n    this._isValid = true;\n    this._updatedRange = initialRange !== null && initialRange !== void 0 ? initialRange : inlineCompletion.range;\n  }\n  toInlineCompletion(reader) {\n    return this.inlineCompletion.withRange(this._getUpdatedRange(reader));\n  }\n  toSingleTextEdit(reader) {\n    return new SingleTextEdit(this._getUpdatedRange(reader), this.inlineCompletion.insertText);\n  }\n  isVisible(model, cursorPosition, reader) {\n    const minimizedReplacement = this._toFilterTextReplacement(reader).removeCommonPrefix(model);\n    if (!this._isValid || !this.inlineCompletion.range.getStartPosition().equals(this._getUpdatedRange(reader).getStartPosition()) || cursorPosition.lineNumber !== minimizedReplacement.range.startLineNumber) {\n      return false;\n    }\n    const originalValue = model.getValueInRange(minimizedReplacement.range, 1 /* EndOfLinePreference.LF */).toLowerCase();\n    const filterText = minimizedReplacement.text.toLowerCase();\n    const cursorPosIndex = Math.max(0, cursorPosition.column - minimizedReplacement.range.startColumn);\n    let filterTextBefore = filterText.substring(0, cursorPosIndex);\n    let filterTextAfter = filterText.substring(cursorPosIndex);\n    let originalValueBefore = originalValue.substring(0, cursorPosIndex);\n    let originalValueAfter = originalValue.substring(cursorPosIndex);\n    const originalValueIndent = model.getLineIndentColumn(minimizedReplacement.range.startLineNumber);\n    if (minimizedReplacement.range.startColumn <= originalValueIndent) {\n      // Remove indentation\n      originalValueBefore = originalValueBefore.trimStart();\n      if (originalValueBefore.length === 0) {\n        originalValueAfter = originalValueAfter.trimStart();\n      }\n      filterTextBefore = filterTextBefore.trimStart();\n      if (filterTextBefore.length === 0) {\n        filterTextAfter = filterTextAfter.trimStart();\n      }\n    }\n    return filterTextBefore.startsWith(originalValueBefore) && !!matchesSubString(originalValueAfter, filterTextAfter);\n  }\n  canBeReused(model, position) {\n    const result = this._isValid && this._getUpdatedRange(undefined).containsPosition(position) && this.isVisible(model, position, undefined) && !this._isSmallerThanOriginal(undefined);\n    return result;\n  }\n  _toFilterTextReplacement(reader) {\n    return new SingleTextEdit(this._getUpdatedRange(reader), this.inlineCompletion.filterText);\n  }\n  _isSmallerThanOriginal(reader) {\n    return length(this._getUpdatedRange(reader)).isBefore(length(this.inlineCompletion.range));\n  }\n  _getUpdatedRange(reader) {\n    this.rangeVersion.read(reader); // This makes sure all the ranges are updated.\n    return this._updatedRange;\n  }\n  _updateRange(textModel) {\n    const range = textModel.getDecorationRange(this.decorationId);\n    if (!range) {\n      // A setValue call might flush all decorations.\n      this._isValid = false;\n      return true;\n    }\n    if (!this._updatedRange.equalsRange(range)) {\n      this._updatedRange = range;\n      return true;\n    }\n    return false;\n  }\n}\nfunction length(range) {\n  if (range.startLineNumber === range.endLineNumber) {\n    return new Position(1, 1 + range.endColumn - range.startColumn);\n  } else {\n    return new Position(1 + range.endLineNumber - range.startLineNumber, range.endColumn);\n  }\n}","map":{"version":3,"names":["__decorate","decorators","target","key","desc","c","arguments","length","r","Object","getOwnPropertyDescriptor","d","Reflect","decorate","i","defineProperty","__param","paramIndex","decorator","__awaiter","thisArg","_arguments","P","generator","adopt","value","resolve","Promise","reject","fulfilled","step","next","e","rejected","result","done","then","apply","CancellationTokenSource","matchesSubString","Disposable","MutableDisposable","derived","disposableObservableValue","transaction","Position","InlineCompletionTriggerKind","ILanguageConfigurationService","ILanguageFeaturesService","provideInlineCompletions","SingleTextEdit","InlineCompletionsSource","constructor","textModel","versionId","_debounceValue","languageFeaturesService","languageConfigurationService","_updateOperation","_register","inlineCompletions","undefined","suggestWidgetInlineCompletions","onDidChangeContent","clear","fetch","position","context","activeInlineCompletion","_a","_b","request","UpdateRequest","getVersionId","selectedSuggestionInfo","satisfies","promise","get","updateOngoing","source","shouldDebounce","triggerKind","Automatic","wait","token","isCancellationRequested","startTime","Date","updatedCompletions","inlineCompletionsProvider","endTime","update","getTime","completions","UpToDateInlineCompletions","asInlineCompletion","toInlineCompletion","canBeReused","has","prepend","inlineCompletion","range","tx","set","updateOperation","UpdateOperation","clearSuggestWidgetInlineCompletions","cancelUpdate","ms","cancellationToken","handle","setTimeout","dispose","onCancellationRequested","clearTimeout","other","equals","v1","v2","Explicit","cancellationTokenSource","cancel","_inlineCompletions","inlineCompletionProviderResult","_refCount","_prependedInlineCompletionItems","_rangeVersionIdValue","_rangeVersionId","reader","read","changed","_updateRange","ids","deltaDecorations","map","options","description","index","InlineCompletionWithUpdatedRange","clone","isDisposed","decorationId","removeRef","addRefToSource","addRef","id","unshift","push","forwardStable","enableForwardStability","rangeVersion","initialRange","semanticId","JSON","stringify","filterText","insertText","getStartPosition","toString","_isValid","_updatedRange","withRange","_getUpdatedRange","toSingleTextEdit","isVisible","model","cursorPosition","minimizedReplacement","_toFilterTextReplacement","removeCommonPrefix","lineNumber","startLineNumber","originalValue","getValueInRange","toLowerCase","text","cursorPosIndex","Math","max","column","startColumn","filterTextBefore","substring","filterTextAfter","originalValueBefore","originalValueAfter","originalValueIndent","getLineIndentColumn","trimStart","startsWith","containsPosition","_isSmallerThanOriginal","isBefore","getDecorationRange","equalsRange","endLineNumber","endColumn"],"sources":["/home/chlohest/work/website/my_web/node_modules/monaco-editor/esm/vs/editor/contrib/inlineCompletions/browser/inlineCompletionsSource.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { CancellationTokenSource } from '../../../../base/common/cancellation.js';\nimport { matchesSubString } from '../../../../base/common/filters.js';\nimport { Disposable, MutableDisposable } from '../../../../base/common/lifecycle.js';\nimport { derived, disposableObservableValue, transaction } from '../../../../base/common/observable.js';\nimport { Position } from '../../../common/core/position.js';\nimport { InlineCompletionTriggerKind } from '../../../common/languages.js';\nimport { ILanguageConfigurationService } from '../../../common/languages/languageConfigurationRegistry.js';\nimport { ILanguageFeaturesService } from '../../../common/services/languageFeatures.js';\nimport { provideInlineCompletions } from './provideInlineCompletions.js';\nimport { SingleTextEdit } from './singleTextEdit.js';\nlet InlineCompletionsSource = class InlineCompletionsSource extends Disposable {\n    constructor(textModel, versionId, _debounceValue, languageFeaturesService, languageConfigurationService) {\n        super();\n        this.textModel = textModel;\n        this.versionId = versionId;\n        this._debounceValue = _debounceValue;\n        this.languageFeaturesService = languageFeaturesService;\n        this.languageConfigurationService = languageConfigurationService;\n        this._updateOperation = this._register(new MutableDisposable());\n        this.inlineCompletions = disposableObservableValue('inlineCompletions', undefined);\n        this.suggestWidgetInlineCompletions = disposableObservableValue('suggestWidgetInlineCompletions', undefined);\n        this._register(this.textModel.onDidChangeContent(() => {\n            this._updateOperation.clear();\n        }));\n    }\n    fetch(position, context, activeInlineCompletion) {\n        var _a, _b;\n        const request = new UpdateRequest(position, context, this.textModel.getVersionId());\n        const target = context.selectedSuggestionInfo ? this.suggestWidgetInlineCompletions : this.inlineCompletions;\n        if ((_a = this._updateOperation.value) === null || _a === void 0 ? void 0 : _a.request.satisfies(request)) {\n            return this._updateOperation.value.promise;\n        }\n        else if ((_b = target.get()) === null || _b === void 0 ? void 0 : _b.request.satisfies(request)) {\n            return Promise.resolve(true);\n        }\n        const updateOngoing = !!this._updateOperation.value;\n        this._updateOperation.clear();\n        const source = new CancellationTokenSource();\n        const promise = (() => __awaiter(this, void 0, void 0, function* () {\n            const shouldDebounce = updateOngoing || context.triggerKind === InlineCompletionTriggerKind.Automatic;\n            if (shouldDebounce) {\n                // This debounces the operation\n                yield wait(this._debounceValue.get(this.textModel));\n            }\n            if (source.token.isCancellationRequested || this.textModel.getVersionId() !== request.versionId) {\n                return false;\n            }\n            const startTime = new Date();\n            const updatedCompletions = yield provideInlineCompletions(this.languageFeaturesService.inlineCompletionsProvider, position, this.textModel, context, source.token, this.languageConfigurationService);\n            if (source.token.isCancellationRequested || this.textModel.getVersionId() !== request.versionId) {\n                return false;\n            }\n            const endTime = new Date();\n            this._debounceValue.update(this.textModel, endTime.getTime() - startTime.getTime());\n            const completions = new UpToDateInlineCompletions(updatedCompletions, request, this.textModel, this.versionId);\n            if (activeInlineCompletion) {\n                const asInlineCompletion = activeInlineCompletion.toInlineCompletion(undefined);\n                if (activeInlineCompletion.canBeReused(this.textModel, position) && !updatedCompletions.has(asInlineCompletion)) {\n                    completions.prepend(activeInlineCompletion.inlineCompletion, asInlineCompletion.range, true);\n                }\n            }\n            this._updateOperation.clear();\n            transaction(tx => {\n                /** @description Update completions with provider result */\n                target.set(completions, tx);\n            });\n            return true;\n        }))();\n        const updateOperation = new UpdateOperation(request, source, promise);\n        this._updateOperation.value = updateOperation;\n        return promise;\n    }\n    clear(tx) {\n        this._updateOperation.clear();\n        this.inlineCompletions.set(undefined, tx);\n        this.suggestWidgetInlineCompletions.set(undefined, tx);\n    }\n    clearSuggestWidgetInlineCompletions(tx) {\n        var _a;\n        if ((_a = this._updateOperation.value) === null || _a === void 0 ? void 0 : _a.request.context.selectedSuggestionInfo) {\n            this._updateOperation.clear();\n        }\n        this.suggestWidgetInlineCompletions.set(undefined, tx);\n    }\n    cancelUpdate() {\n        this._updateOperation.clear();\n    }\n};\nInlineCompletionsSource = __decorate([\n    __param(3, ILanguageFeaturesService),\n    __param(4, ILanguageConfigurationService)\n], InlineCompletionsSource);\nexport { InlineCompletionsSource };\nfunction wait(ms, cancellationToken) {\n    return new Promise(resolve => {\n        let d = undefined;\n        const handle = setTimeout(() => {\n            if (d) {\n                d.dispose();\n            }\n            resolve();\n        }, ms);\n        if (cancellationToken) {\n            d = cancellationToken.onCancellationRequested(() => {\n                clearTimeout(handle);\n                if (d) {\n                    d.dispose();\n                }\n                resolve();\n            });\n        }\n    });\n}\nclass UpdateRequest {\n    constructor(position, context, versionId) {\n        this.position = position;\n        this.context = context;\n        this.versionId = versionId;\n    }\n    satisfies(other) {\n        return this.position.equals(other.position)\n            && equals(this.context.selectedSuggestionInfo, other.context.selectedSuggestionInfo, (v1, v2) => v1.equals(v2))\n            && (other.context.triggerKind === InlineCompletionTriggerKind.Automatic\n                || this.context.triggerKind === InlineCompletionTriggerKind.Explicit)\n            && this.versionId === other.versionId;\n    }\n}\nfunction equals(v1, v2, equals) {\n    if (!v1 || !v2) {\n        return v1 === v2;\n    }\n    return equals(v1, v2);\n}\nclass UpdateOperation {\n    constructor(request, cancellationTokenSource, promise) {\n        this.request = request;\n        this.cancellationTokenSource = cancellationTokenSource;\n        this.promise = promise;\n    }\n    dispose() {\n        this.cancellationTokenSource.cancel();\n    }\n}\nexport class UpToDateInlineCompletions {\n    get inlineCompletions() { return this._inlineCompletions; }\n    constructor(inlineCompletionProviderResult, request, textModel, versionId) {\n        this.inlineCompletionProviderResult = inlineCompletionProviderResult;\n        this.request = request;\n        this.textModel = textModel;\n        this.versionId = versionId;\n        this._refCount = 1;\n        this._prependedInlineCompletionItems = [];\n        this._rangeVersionIdValue = 0;\n        this._rangeVersionId = derived(this, reader => {\n            this.versionId.read(reader);\n            let changed = false;\n            for (const i of this._inlineCompletions) {\n                changed = changed || i._updateRange(this.textModel);\n            }\n            if (changed) {\n                this._rangeVersionIdValue++;\n            }\n            return this._rangeVersionIdValue;\n        });\n        const ids = textModel.deltaDecorations([], inlineCompletionProviderResult.completions.map(i => ({\n            range: i.range,\n            options: {\n                description: 'inline-completion-tracking-range'\n            },\n        })));\n        this._inlineCompletions = inlineCompletionProviderResult.completions.map((i, index) => new InlineCompletionWithUpdatedRange(i, ids[index], this._rangeVersionId));\n    }\n    clone() {\n        this._refCount++;\n        return this;\n    }\n    dispose() {\n        this._refCount--;\n        if (this._refCount === 0) {\n            setTimeout(() => {\n                // To fix https://github.com/microsoft/vscode/issues/188348\n                if (!this.textModel.isDisposed()) {\n                    // This is just cleanup. It's ok if it happens with a delay.\n                    this.textModel.deltaDecorations(this._inlineCompletions.map(i => i.decorationId), []);\n                }\n            }, 0);\n            this.inlineCompletionProviderResult.dispose();\n            for (const i of this._prependedInlineCompletionItems) {\n                i.source.removeRef();\n            }\n        }\n    }\n    prepend(inlineCompletion, range, addRefToSource) {\n        if (addRefToSource) {\n            inlineCompletion.source.addRef();\n        }\n        const id = this.textModel.deltaDecorations([], [{\n                range,\n                options: {\n                    description: 'inline-completion-tracking-range'\n                },\n            }])[0];\n        this._inlineCompletions.unshift(new InlineCompletionWithUpdatedRange(inlineCompletion, id, this._rangeVersionId, range));\n        this._prependedInlineCompletionItems.push(inlineCompletion);\n    }\n}\nexport class InlineCompletionWithUpdatedRange {\n    get forwardStable() {\n        var _a;\n        return (_a = this.inlineCompletion.source.inlineCompletions.enableForwardStability) !== null && _a !== void 0 ? _a : false;\n    }\n    constructor(inlineCompletion, decorationId, rangeVersion, initialRange) {\n        this.inlineCompletion = inlineCompletion;\n        this.decorationId = decorationId;\n        this.rangeVersion = rangeVersion;\n        this.semanticId = JSON.stringify([\n            this.inlineCompletion.filterText,\n            this.inlineCompletion.insertText,\n            this.inlineCompletion.range.getStartPosition().toString()\n        ]);\n        this._isValid = true;\n        this._updatedRange = initialRange !== null && initialRange !== void 0 ? initialRange : inlineCompletion.range;\n    }\n    toInlineCompletion(reader) {\n        return this.inlineCompletion.withRange(this._getUpdatedRange(reader));\n    }\n    toSingleTextEdit(reader) {\n        return new SingleTextEdit(this._getUpdatedRange(reader), this.inlineCompletion.insertText);\n    }\n    isVisible(model, cursorPosition, reader) {\n        const minimizedReplacement = this._toFilterTextReplacement(reader).removeCommonPrefix(model);\n        if (!this._isValid\n            || !this.inlineCompletion.range.getStartPosition().equals(this._getUpdatedRange(reader).getStartPosition())\n            || cursorPosition.lineNumber !== minimizedReplacement.range.startLineNumber) {\n            return false;\n        }\n        const originalValue = model.getValueInRange(minimizedReplacement.range, 1 /* EndOfLinePreference.LF */).toLowerCase();\n        const filterText = minimizedReplacement.text.toLowerCase();\n        const cursorPosIndex = Math.max(0, cursorPosition.column - minimizedReplacement.range.startColumn);\n        let filterTextBefore = filterText.substring(0, cursorPosIndex);\n        let filterTextAfter = filterText.substring(cursorPosIndex);\n        let originalValueBefore = originalValue.substring(0, cursorPosIndex);\n        let originalValueAfter = originalValue.substring(cursorPosIndex);\n        const originalValueIndent = model.getLineIndentColumn(minimizedReplacement.range.startLineNumber);\n        if (minimizedReplacement.range.startColumn <= originalValueIndent) {\n            // Remove indentation\n            originalValueBefore = originalValueBefore.trimStart();\n            if (originalValueBefore.length === 0) {\n                originalValueAfter = originalValueAfter.trimStart();\n            }\n            filterTextBefore = filterTextBefore.trimStart();\n            if (filterTextBefore.length === 0) {\n                filterTextAfter = filterTextAfter.trimStart();\n            }\n        }\n        return filterTextBefore.startsWith(originalValueBefore)\n            && !!matchesSubString(originalValueAfter, filterTextAfter);\n    }\n    canBeReused(model, position) {\n        const result = this._isValid\n            && this._getUpdatedRange(undefined).containsPosition(position)\n            && this.isVisible(model, position, undefined)\n            && !this._isSmallerThanOriginal(undefined);\n        return result;\n    }\n    _toFilterTextReplacement(reader) {\n        return new SingleTextEdit(this._getUpdatedRange(reader), this.inlineCompletion.filterText);\n    }\n    _isSmallerThanOriginal(reader) {\n        return length(this._getUpdatedRange(reader)).isBefore(length(this.inlineCompletion.range));\n    }\n    _getUpdatedRange(reader) {\n        this.rangeVersion.read(reader); // This makes sure all the ranges are updated.\n        return this._updatedRange;\n    }\n    _updateRange(textModel) {\n        const range = textModel.getDecorationRange(this.decorationId);\n        if (!range) {\n            // A setValue call might flush all decorations.\n            this._isValid = false;\n            return true;\n        }\n        if (!this._updatedRange.equalsRange(range)) {\n            this._updatedRange = range;\n            return true;\n        }\n        return false;\n    }\n}\nfunction length(range) {\n    if (range.startLineNumber === range.endLineNumber) {\n        return new Position(1, 1 + range.endColumn - range.startColumn);\n    }\n    else {\n        return new Position(1 + range.endLineNumber - range.startLineNumber, range.endColumn);\n    }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}