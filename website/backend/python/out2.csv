id,tree
semgrep-unverified-ssl-context-copy,AND(OR(ssl._create_unverified_context(...);ssl._create_default_https_context=ssl._create_unverified_context))
semgrep-javascript-confirm-copy,(confirm(...))
semgrep-eval-detected-copy-javascript,"AND(NOT(eval(""...""));eval(...))"
semgrep-insecure-urlopen-copy,"OR(urllib.request.urlopen(""=~/[Hh][Tt][Tt][Pp]://.*/"",...);$URL=""=~/[Hh][Tt][Tt][Pp]://.*/""\n...\nurllib.request.urlopen($URL,...)\n;def$FUNC(...,$URL=""=~/[Hh][Tt][Tt][Pp]://.*/"",...):\n...\nurllib.request.urlopen($URL,...)\n)"
semgrep-manual-defaultdict-set-create-copy,"OR($DICT={}\n...\nfor$KEY,$VALUEin$OTHERDICT.items():\n...\nif$KEYnotin$DICT:\n...\n$DICT[$KEY]=set()\n...\n$DICT[$KEY].add(...)\n;$DICT={}\n...\nfor$KEY,$VALUEin$OTHERDICT.items():\n...\n$DICT.setdefault($KEY,set()).add(...)\n)"
semgrep-open-never-closed-copy,"AND(NOT(NOT(OR($F=open(...)\n...\n$F=tempfile.SpooledTemporaryFile(...)\n...\ntry:\n...\n$F=open(...)\n...\nfinally:\n$F.close()\n\n...\n$F.close()\n;$F=open(...)\n...\n$F=tempfile.SpooledTemporaryFile(...)\n...\ntry:\n...\n$F=io.open(...)\n...\nfinally:\n$F.close()\n\n...\n$F.close()\n;$F=open(...)\n...\n$F=tempfile.SpooledTemporaryFile(...)\n...\ntry:\n...\n$F=tarfile.open(...)\n...\nfinally:\n$F.close()\n\n...\n$F.close()\n;$F=open(...)\n...\n$F=tempfile.SpooledTemporaryFile(...)\n...\ntry:\n...\n$F=ZipFile.open(...)\n...\nfinally:\n$F.close()\n\n...\n$F.close()\n;$F=open(...)\n...\n$F=tempfile.SpooledTemporaryFile(...)\n...\ntry:\n...\n$F=tempfile.TemporaryFile(...)\n...\nfinally:\n$F.close()\n\n...\n$F.close()\n;$F=open(...)\n...\n$F=tempfile.SpooledTemporaryFile(...)\n...\ntry:\n...\n$F=tempfile.NamedTemporaryFile(...)\n...\nfinally:\n$F.close()\n\n...\n$F.close()\n;$F=open(...)\n...\n$F=tempfile.SpooledTemporaryFile(...)\n...\ntry:\n...\n$F=tempfile.SpooledTemporaryFile(...)\n...\nfinally:\n$F.close()\n\n...\n$F.close()\n;$F=open(...)\n...\n$F=tempfile.SpooledTemporaryFile(...,$F=open(...),...)\n...\ntry:\n...\nfinally:\n$F.close()\n\n...\n$F.close()\n;$F=open(...)\n...\n$F=tempfile.SpooledTemporaryFile(...,$F=io.open(...),...)\n...\ntry:\n...\nfinally:\n$F.close()\n\n...\n$F.close()\n;$F=open(...)\n...\n$F=tempfile.SpooledTemporaryFile(...,$F=tarfile.open(...),...)\n...\ntry:\n...\nfinally:\n$F.close()\n\n...\n$F.close()\n;$F=open(...)\n...\n$F=tempfile.SpooledTemporaryFile(...,$F=ZipFile.open(...),...)\n...\ntry:\n...\nfinally:\n$F.close()\n\n...\n$F.close()\n;$F=open(...)\n...\n$F=tempfile.SpooledTemporaryFile(...,$F=tempfile.TemporaryFile(...),...)\n...\ntry:\n...\nfinally:\n$F.close()\n\n...\n$F.close()\n;$F=open(...)\n...\n$F=tempfile.SpooledTemporaryFile(...,$F=tempfile.NamedTemporaryFile(...),...)\n...\ntry:\n...\nfinally:\n$F.close()\n\n...\n$F.close()\n;$F=open(...)\n...\n$F=tempfile.SpooledTemporaryFile(...,$F=tempfile.SpooledTemporaryFile(...),...)\n...\ntry:\n...\nfinally:\n$F.close()\n\n...\n$F.close()\n;$F=open(...)\n...\n$F=tempfile.SpooledTemporaryFile(...)\n...\n$F=open(...)\n...\ntry:\n...\nfinally:\n$F.close()\n\n...\n$F.close()\n;$F=open(...)\n...\n$F=tempfile.SpooledTemporaryFile(...)\n...\n$F=io.open(...)\n...\ntry:\n...\nfinally:\n$F.close()\n\n...\n$F.close()\n;$F=open(...)\n...\n$F=tempfile.SpooledTemporaryFile(...)\n...\n$F=tarfile.open(...)\n...\ntry:\n...\nfinally:\n$F.close()\n\n...\n$F.close()\n;$F=open(...)\n...\n$F=tempfile.SpooledTemporaryFile(...)\n...\n$F=ZipFile.open(...)\n...\ntry:\n...\nfinally:\n$F.close()\n\n...\n$F.close()\n;$F=open(...)\n...\n$F=tempfile.SpooledTemporaryFile(...)\n...\n$F=tempfile.TemporaryFile(...)\n...\ntry:\n...\nfinally:\n$F.close()\n\n...\n$F.close()\n;$F=open(...)\n...\n$F=tempfile.SpooledTemporaryFile(...)\n...\n$F=tempfile.NamedTemporaryFile(...)\n...\ntry:\n...\nfinally:\n$F.close()\n\n...\n$F.close()\n;$F=open(...)\n...\n$F=tempfile.SpooledTemporaryFile(...)\n...\n$F=tempfile.SpooledTemporaryFile(...)\n...\ntry:\n...\nfinally:\n$F.close()\n\n...\n$F.close()\n;$F=open(...,$F=tempfile.SpooledTemporaryFile(...)\n...\ntry:\n...\n$F=open(...)\n...\nfinally:\n$F.close()\n,...)\n...\n$F.close()\n;$F=open(...,$F=tempfile.SpooledTemporaryFile(...)\n...\ntry:\n...\n$F=io.open(...)\n...\nfinally:\n$F.close()\n,...)\n...\n$F.close()\n;$F=open(...,$F=tempfile.SpooledTemporaryFile(...)\n...\ntry:\n...\n$F=tarfile.open(...)\n...\nfinally:\n$F.close()\n,...)\n...\n$F.close()\n;$F=open(...,$F=tempfile.SpooledTemporaryFile(...)\n...\ntry:\n...\n$F=ZipFile.open(...)\n...\nfinally:\n$F.close()\n,...)\n...\n$F.close()\n;$F=open(...,$F=tempfile.SpooledTemporaryFile(...)\n...\ntry:\n...\n$F=tempfile.TemporaryFile(...)\n...\nfinally:\n$F.close()\n,...)\n...\n$F.close()\n;$F=open(...,$F=tempfile.SpooledTemporaryFile(...)\n...\ntry:\n...\n$F=tempfile.NamedTemporaryFile(...)\n...\nfinally:\n$F.close()\n,...)\n...\n$F.close()\n;$F=open(...,$F=tempfile.SpooledTemporaryFile(...)\n...\ntry:\n...\n$F=tempfile.SpooledTemporaryFile(...)\n...\nfinally:\n$F.close()\n,...)\n...\n$F.close()\n;$F=open(...,$F=tempfile.SpooledTemporaryFile(...,$F=open(...),...)\n...\ntry:\n...\nfinally:\n$F.close()\n,...)\n...\n$F.close()\n;$F=open(...,$F=tempfile.SpooledTemporaryFile(...,$F=io.open(...),...)\n...\ntry:\n...\nfinally:\n$F.close()\n,...)\n...\n$F.close()\n;$F=open(...,$F=tempfile.SpooledTemporaryFile(...,$F=tarfile.open(...),...)\n...\ntry:\n...\nfinally:\n$F.close()\n,...)\n...\n$F.close()\n;$F=open(...,$F=tempfile.SpooledTemporaryFile(...,$F=ZipFile.open(...),...)\n...\ntry:\n...\nfinally:\n$F.close()\n,...)\n...\n$F.close()\n;$F=open(...,$F=tempfile.SpooledTemporaryFile(...,$F=tempfile.TemporaryFile(...),...)\n...\ntry:\n...\nfinally:\n$F.close()\n,...)\n...\n$F.close()\n;$F=open(...,$F=tempfile.SpooledTemporaryFile(...,$F=tempfile.NamedTemporaryFile(...),...)\n...\ntry:\n...\nfinally:\n$F.close()\n,...)\n...\n$F.close()\n;$F=open(...,$F=tempfile.SpooledTemporaryFile(...,$F=tempfile.SpooledTemporaryFile(...),...)\n...\ntry:\n...\nfinally:\n$F.close()\n,...)\n...\n$F.close()\n;$F=open(...,$F=tempfile.SpooledTemporaryFile(...)\n...\n$F=open(...)\n...\ntry:\n...\nfinally:\n$F.close()\n,...)\n...\n$F.close()\n;$F=open(...,$F=tempfile.SpooledTemporaryFile(...)\n...\n$F=io.open(...)\n...\ntry:\n...\nfinally:\n$F.close()\n,...)\n...\n$F.close()\n;$F=open(...,$F=tempfile.SpooledTemporaryFile(...)\n...\n$F=tarfile.open(...)\n...\ntry:\n...\nfinally:\n$F.close()\n,...)\n...\n$F.close()\n;$F=open(...,$F=tempfile.SpooledTemporaryFile(...)\n...\n$F=ZipFile.open(...)\n...\ntry:\n...\nfinally:\n$F.close()\n,...)\n...\n$F.close()\n;$F=open(...,$F=tempfile.SpooledTemporaryFile(...)\n...\n$F=tempfile.TemporaryFile(...)\n...\ntry:\n...\nfinally:\n$F.close()\n,...)\n...\n$F.close()\n;$F=open(...,$F=tempfile.SpooledTemporaryFile(...)\n...\n$F=tempfile.NamedTemporaryFile(...)\n...\ntry:\n...\nfinally:\n$F.close()\n,...)\n...\n$F.close()\n;$F=open(...,$F=tempfile.SpooledTemporaryFile(...)\n...\n$F=tempfile.SpooledTemporaryFile(...)\n...\ntry:\n...\nfinally:\n$F.close()\n,...)\n...\n$F.close()\n))))"
semgrep-hardcoded-tmp-path-copy,"(open(""=~/^\/tmp.*/"",...))"
semgrep-avoid-v-html-copy,(r:<[^<>]*v-html=)
semgrep-pass-body-range-copy,(for$Xin$Y:\npass\n)
semgrep-insecure-request-object-ftp-copy,"OR(urllib.request.Request(""=~/^[Ff][Tt][Pp]://.*/"",...);$URL=""=~/^[Ff][Tt][Pp]://.*/""\n...\nurllib.request.Request($URL,...)\n;def$FUNC(...,$URL=""=~/^[Ff][Tt][Pp]://.*/"",...):\n...\nurllib.request.Request($URL,...))"
semgrep-detect-replaceall-sanitization-copy,"AND(OR($STR.(replace|replaceAll)('<';'&lt;');$STR.(replace|replaceAll)('>';'&gt;');$STR.(replace|replaceAll)('""';'&quot;');$STR.(replace|replaceAll)(""'"",'&apos;');$STR.(replace|replaceAll)('&';'&amp;')))"
semgrep-dom-based-xss-copy,OR(document.write(<...document.location.$W...>);document.write(<...location.$W...>))
semgrep-insecure-urlopener-open-ftp-copy,"OR(urllib.request.URLopener(...).open(""=~/[Ff][Tt][Pp]://.*/"",...);AND(OR($OPENERDIRECTOR=urllib.request.URLopener(...)\n...\n$OPENERDIRECTOR.open(""=~/[Ff][Tt][Pp]://.*/"",...)\n...\n;$OPENERDIRECTOR=urllib.request.URLopener(...,$OPENERDIRECTOR.open(""=~/[Ff][Tt][Pp]://.*/"",...),...)\n...\n);AND(OR($OPENERDIRECTOR=urllib.request.URLopener(...)\n...\n$URL=""=~/[Ff][Tt][Pp]://.*/""\n...\n$OPENERDIRECTOR.open($URL,...)\n\n...\n;$OPENERDIRECTOR=urllib.request.URLopener(...,$URL=""=~/[Ff][Tt][Pp]://.*/""\n...\n$OPENERDIRECTOR.open($URL,...)\n,...)\n...\n);$URL=""=~/[Ff][Tt][Pp]://.*/""\n...\nurllib.request.URLopener(...).open($URL,...)\n;AND(OR(def$FUNC(...,$URL=""=~/[Ff][Tt][Pp]://.*/"",...):\n...\nurllib.request.URLopener(...).open($URL,...)\n...\n;def$FUNC(...,$URL=""=~/[Ff][Tt][Pp]://.*/"",...):\n...\n$OPENERDIRECTOR=urllib.request.URLopener(...)\n...\n\n...\n;def$FUNC(...,$URL=""=~/[Ff][Tt][Pp]://.*/"",...):\n...\n$OPENERDIRECTOR.open($URL,...)\n...\n;def$FUNC(...\nurllib.request.URLopener(...).open($URL,...)\n...,$URL=""=~/[Ff][Tt][Pp]://.*/"",...):\n...\n;def$FUNC(...\n$OPENERDIRECTOR=urllib.request.URLopener(...)\n...\n\n...,$URL=""=~/[Ff][Tt][Pp]://.*/"",...):\n...\n;def$FUNC(...\n$OPENERDIRECTOR.open($URL,...)\n...,$URL=""=~/[Ff][Tt][Pp]://.*/"",...):\n...\n;def$FUNC(...,$URL=""=~/[Ff][Tt][Pp]://.*/"",...\nurllib.request.URLopener(...).open($URL,...)\n...):\n...\n;def$FUNC(...,$URL=""=~/[Ff][Tt][Pp]://.*/"",...\n$OPENERDIRECTOR=urllib.request.URLopener(...)\n...\n\n...):\n...\n;def$FUNC(...,$URL=""=~/[Ff][Tt][Pp]://.*/"",...\n$OPENERDIRECTOR.open($URL,...)\n...):\n...\n))"
semgrep-pass-body-fn-copy,"AND(NOT(NOT(OR(def__init__(self,...):\n...\nclass$A:\n...\ndef$X(...):\npass\n\n...\n\n...\n;def__init__(self,...\nclass$A:\n...\ndef$X(...):\npass\n\n...\n\n...):\n...\n))))"
semgrep-insecure-createnodesfrommarkup-copy,"AND(OR(createNodesFromMarkup(...);$X.createNodesFromMarkup(...));NOT(createNodesFromMarkup(""..."",...));NOT($X.createNodesFromMarkup(""..."",...)))"
semgrep-suppressed-exception-handling-finally-break-copy,AND(OR(try:\n...\nexcept$EXCEPTION:\n...\nfinally:\n...\nbreak\n;try:\n...\nexcept$EXCEPTION:\n...\nfinally:\n...\ncontinue\n;try:\n...\nexcept$EXCEPTION:\n...\nfinally:\n...\nreturn...\n;try:\n...\nreturn...\nfinally:\n...\nreturn...\n))
semgrep-use-defusedcsv-copy,AND(csv.writer(...);NOT(defusedcsv.writer(...)))
semgrep-psycopg-sqli-copy,"AND(OR(AND($CUR.^(execute|executemany|mogrify)$(...,$QUERY,...);OR(($QUERY=$X+$Y\n...\n$QUERY=f'...{$USERINPUT}...'\n...\n\n...\));NOT(NOT(OR(NOT($QUERY+=""...""\n...\n$QUERY='...'%()\n...\n\n...\n);NOT($QUERY+=""...\n$QUERY='...'%()\n...\n\n...""\n...\n)))));$CUR.^(execute|executemany|mogrify)$(...,$X+$Y,...);$CUR.^(execute|executemany|mogrify)$(...,'...'.format(...),...);$CUR.^(execute|executemany|mogrify)$(...,'...'%(...),...);$CUR.^(execute|executemany|mogrify)$(...,f'...{$USERINPUT}...';...));OR((OR($CONN=psycopg2.connect(...)\n...\n$CUR=$CONN.cursor(...)\n...\n$CONN=psycopg2.connect(...)\n...\nwith$CONN.cursor(...)as$CUR:\n...\n\n...\n;$CONN=psycopg2.connect(...,$CONN=psycopg2.connect(...)\n...\nwith$CONN.cursor(...)as$CUR:\n...\n,...)\n...\n$CUR=$CONN.cursor(...)\n...\n;$CONN=psycopg2.connect(...)\n...\n$CONN=psycopg2.connect(...)\n...\nwith$CONN.cursor(...)as$CUR:\n...\n\n...\n$CUR=$CONN.cursor(...)\n...\n;$CONN=psycopg2.connect(...)\n...\n$CUR=$CONN.cursor(...,$CONN=psycopg2.connect(...)\n...\nwith$CONN.cursor(...)as$CUR:\n...\n,...)\n...\n));NOT($CUR.^(execute|executemany|mogrify)$(...,""...""+""..."",...));NOT($CUR.^(execute|executemany|mogrify)$(...,'...'.format(),...));NOT($CUR.^(execute|executemany|mogrify)$(...,'...'%(),...))))"
semgrep-unsafe-dynamic-method-copy,"AND(OR(NOT($OBJ[""...""
](...));$OBJ[...](...);NOT($OBJ[($X:float)
](...));$OBJ[...](...);NOT($Y=$OBJ[""...""
]\n...\n$Y(...)\n);$Y=$OBJ[...]\n...\n$Y(...)\n;NOT($Y=$OBJ[($X:float)
]\n...\n$Y(...)\n);$Y=$OBJ[...]\n...\n$Y(...)\n);NOT(NOT(OR(NOT(for(...){...\nif(<...$OBJ.hasOwnProperty(...)...>){\n...\n}\n...\n\n...}\n);NOT(for(...,if(<...$OBJ.hasOwnProperty(...)...>){\n...\n}\n...\n,...){...}\n)))))"
semgrep-python-logger-credential-disclosure-copy,"AND((?i)(_logger|logger|self.logger|log).(debug|info|warn|warning|error|exception|critical)((?i).*(api.key|secret|credential|token|password).*\%s.*,...)\n)"
semgrep-disabled-cert-validation-copy,"AND(OR(urllib3.PoolManager(...,cert_reqs=(NONE|CERT_NONE|CERT_OPTIONAL|ssl\.CERT_NONE|ssl\.CERT_OPTIONAL|\'NONE\'|\""NONE\""|\'OPTIONAL\'|\""OPTIONAL\""),...);urllib3.ProxyManager(...,cert_reqs=(NONE|CERT_NONE|CERT_OPTIONAL|ssl\.CERT_NONE|ssl\.CERT_OPTIONAL|\'NONE\'|\""NONE\""|\'OPTIONAL\'|\""OPTIONAL\""),...);urllib3.HTTPSConnectionPool(...,cert_reqs=(NONE|CERT_NONE|CERT_OPTIONAL|ssl\.CERT_NONE|ssl\.CERT_OPTIONAL|\'NONE\'|\""NONE\""|\'OPTIONAL\'|\""OPTIONAL\""),...);urllib3.connectionpool.HTTPSConnectionPool(...,cert_reqs=(NONE|CERT_NONE|CERT_OPTIONAL|ssl\.CERT_NONE|ssl\.CERT_OPTIONAL|\'NONE\'|\""NONE\""|\'OPTIONAL\'|\""OPTIONAL\""),...);urllib3.connection_from_url(...,cert_reqs=(NONE|CERT_NONE|CERT_OPTIONAL|ssl\.CERT_NONE|ssl\.CERT_OPTIONAL|\'NONE\'|\""NONE\""|\'OPTIONAL\'|\""OPTIONAL\""),...);urllib3.proxy_from_url(...,cert_reqs=(NONE|CERT_NONE|CERT_OPTIONAL|ssl\.CERT_NONE|ssl\.CERT_OPTIONAL|\'NONE\'|\""NONE\""|\'OPTIONAL\'|\""OPTIONAL\""),...);$CONTEXT.wrap_socket(...,cert_reqs=(NONE|CERT_NONE|CERT_OPTIONAL|ssl\.CERT_NONE|ssl\.CERT_OPTIONAL|\'NONE\'|\""NONE\""|\'OPTIONAL\'|\""OPTIONAL\""),...);ssl.wrap_socket(...,cert_reqs=(NONE|CERT_NONE|CERT_OPTIONAL|ssl\.CERT_NONE|ssl\.CERT_OPTIONAL|\'NONE\'|\""NONE\""|\'OPTIONAL\'|\""OPTIONAL\""),...)))"
semgrep-insecure-urlretrieve-ftp-copy,"OR(urllib.request.urlretrieve(""=~/^[Ff][Tt][Pp]://.*/"",...);$URL=""=~/^[Ff][Tt][Pp]://.*/""\n...\nurllib.request.urlretrieve($URL,...)\n;def$FUNC(...,$URL=""=~/^[Ff][Tt][Pp]://.*/"",...):\n...\nurllib.request.urlretrieve($URL,...))"
semgrep-unknown-value-with-script-tag-copy,"AND((OR($UNK=$ANYFUNC(...);\n...\n$OTHERFUNC(...,<...$UNK...>,...\n$OTHERFUNC(...,<...""=~/.*<script.*/""...>,...)\n...);\n;$UNK=$ANYFUNC(...,$OTHERFUNC(...,<...""=~/.*<script.*/""...>,...),...);\n...\n$OTHERFUNC(...,<...$UNK...>,...);\n;$UNK=$ANYFUNC(...);\n...\n$OTHERFUNC(...,<...""=~/.*<script.*/""...>,...)\n...\n$OTHERFUNC(...,<...$UNK...>,...);\n;$UNK=$ANYFUNC(...);\n...\n$OTHERFUNC(...\n$OTHERFUNC(...,<...""=~/.*<script.*/""...>,...)\n...,<...$UNK...>,...);\n;$UNK=$ANYFUNC(...);\n...\n$OTHERFUNC(...,<...\n$OTHERFUNC(...,<...""=~/.*<script.*/""...>,...)\n...$UNK...>,...);\n;$UNK=$ANYFUNC(...);\n...\n$OTHERFUNC(...,<...$UNK...\n$OTHERFUNC(...,<...""=~/.*<script.*/""...>,...)\n...>,...);\n);OR($UNK=$ANYFUNC(...);\n...\n$OTHERFUNC(...,<...$UNK...>,...\n$UNK\n...);\n;$UNK=$ANYFUNC(...,$UNK,...);\n...\n$OTHERFUNC(...,<...$UNK...>,...);\n;$UNK=$ANYFUNC(...);\n...\n$UNK\n...\n$OTHERFUNC(...,<...$UNK...>,...);\n;$UNK=$ANYFUNC(...);\n...\n$OTHERFUNC(...\n$UNK\n...,<...$UNK...>,...);\n;$UNK=$ANYFUNC(...);\n...\n$OTHERFUNC(...,<...\n$UNK\n...$UNK...>,...);\n;$UNK=$ANYFUNC(...);\n...\n$OTHERFUNC(...,<...$UNK...\n$UNK\n...>,...);\n)))"
semgrep-sqlalchemy-sql-injection-copy,"AND(OR(def$FUNC(...,$VAR,...):\n...\n$SESSION.query(...).(group_by|order_by|distinct|having|filter)(""..."".(?!bindparams)(...,$VAR,...))\n;def$FUNC(...,$VAR,...):\n...\n$SESSION.query.join(...).(group_by|order_by|distinct|having|filter)(""..."".(?!bindparams)(...,$VAR,...))\n;def$FUNC(...,$VAR,...):\n...\n$SESSION.query.(group_by|order_by|distinct|having|filter)(""..."".(?!bindparams)(...,$VAR,...))\n;def$FUNC(...,$VAR,...):\n...\nquery.(group_by|order_by|distinct|having|filter)(""..."".(?!bindparams)(...,$VAR,...))\n))"
semgrep-insecure-urlopener-retrieve-copy,"OR(urllib.request.URLopener(...).retrieve(""=~/[Hh][Tt][Tt][Pp]://.*/"",...);AND(OR($OPENERDIRECTOR=urllib.request.URLopener(...)\n...\n$OPENERDIRECTOR.retrieve(""=~/[Hh][Tt][Tt][Pp]://.*/"",...)\n...\n;$OPENERDIRECTOR=urllib.request.URLopener(...,$OPENERDIRECTOR.retrieve(""=~/[Hh][Tt][Tt][Pp]://.*/"",...),...)\n...\n);AND(OR($OPENERDIRECTOR=urllib.request.URLopener(...)\n...\n$URL=""=~/[Hh][Tt][Tt][Pp]://.*/""\n...\n$OPENERDIRECTOR.retrieve($URL,...)\n\n...\n;$OPENERDIRECTOR=urllib.request.URLopener(...,$URL=""=~/[Hh][Tt][Tt][Pp]://.*/""\n...\n$OPENERDIRECTOR.retrieve($URL,...)\n,...)\n...\n);$URL=""=~/[Hh][Tt][Tt][Pp]://.*/""\n...\nurllib.request.URLopener(...).retrieve($URL,...)\n;AND(OR(def$FUNC(...,$URL=""=~/[Hh][Tt][Tt][Pp]://.*/"",...):\n...\nurllib.request.URLopener(...).retrieve($URL,...)\n...\n;def$FUNC(...,$URL=""=~/[Hh][Tt][Tt][Pp]://.*/"",...):\n...\n$OPENERDIRECTOR=urllib.request.URLopener(...)\n...\n\n...\n;def$FUNC(...,$URL=""=~/[Hh][Tt][Tt][Pp]://.*/"",...):\n...\n$OPENERDIRECTOR.retrieve($URL,...)\n...\n;def$FUNC(...\nurllib.request.URLopener(...).retrieve($URL,...)\n...,$URL=""=~/[Hh][Tt][Tt][Pp]://.*/"",...):\n...\n;def$FUNC(...\n$OPENERDIRECTOR=urllib.request.URLopener(...)\n...\n\n...,$URL=""=~/[Hh][Tt][Tt][Pp]://.*/"",...):\n...\n;def$FUNC(...\n$OPENERDIRECTOR.retrieve($URL,...)\n...,$URL=""=~/[Hh][Tt][Tt][Pp]://.*/"",...):\n...\n;def$FUNC(...,$URL=""=~/[Hh][Tt][Tt][Pp]://.*/"",...\nurllib.request.URLopener(...).retrieve($URL,...)\n...):\n...\n;def$FUNC(...,$URL=""=~/[Hh][Tt][Tt][Pp]://.*/"",...\n$OPENERDIRECTOR=urllib.request.URLopener(...)\n...\n\n...):\n...\n;def$FUNC(...,$URL=""=~/[Hh][Tt][Tt][Pp]://.*/"",...\n$OPENERDIRECTOR.retrieve($URL,...)\n...):\n...\n))"
semgrep-ssl-wrap-socket-is-deprecated-copy,(ssl.wrap_socket(...))
semgrep-use-defused-xml-copy,(importxml)
semgrep-python.requests.best-practice.use-response-json-shortcut-copy,"AND((OR(...\n$RESP=requests.$METHOD(...,json.loads($RESP.text),...);...\nimportjson;...;...\n$RESP=requests.$METHOD(...,json.loads($RESP.text),...);...\nimportjson;...))"
semgrep-wkhtmltopdf-injection-copy,"AND(((OR($WK=require('wkhtmltopdf');\n...\nvar$INPUT=""..."";\n...\n$WK($INPUT,...)\n...\n\n...\n;$WK=require('wkhtmltopdf');\n...\nvar$INPUT=""...\n$WK($INPUT,...)\n..."";\n...\n\n...\n);OR(NOT($WK=require('wkhtmltopdf');\n...\nvar$INPUT=""..."";\n...\n$WK(""..."",...)\n...\n\n...\n);NOT($WK=require('wkhtmltopdf');\n...\nvar$INPUT=""...\n$WK(""..."",...)\n..."";\n...\n\n...\n)))))"
semgrep-lazy-load-module-copy,AND(require(...);function$NAME(...){\n...\n}\)
semgrep-use-raise-for-status-copy,"AND(OR(requests.request(...);requests.get(...);requests.post(...);requests.put(...);requests.delete(...);requests.head(...);requests.patch(...));NOT(NOT(OR(NOT($RESP=requests.$METHOD(...)\n$RESP.raise_for_status(...,with...as...:\n...\n$RESP=requests.$METHOD(...)\n...\n$RESP.raise_for_status(...)\n,...)\n);NOT($RESP=requests.$METHOD(...,with...as...:\n...\n$RESP=requests.$METHOD(...)\n...\n$RESP.raise_for_status(...)\n,...)\n$RESP.raise_for_status(...)\n)))))"
semgrep-missing-hash-with-eq-copy,"AND(NOT(OR(classA(...):\n...\ndef__hash__(self):\n...\n...\ndef__eq__(self,$O):\n...\nclassA(...):\n...\ndef__eq__(self,$O):...\n...\n\n...\n;classA(...,classA(...):\n...\ndef__eq__(self,$O):...\n...\n,...):\n...\ndef__hash__(self):\n...\n...\ndef__eq__(self,$O):\n...\n;classA(...):\n...\nclassA(...):\n...\ndef__eq__(self,$O):...\n...\n\n...\ndef__hash__(self):\n...\n...\ndef__eq__(self,$O):\n...\n;classA(...):\n...\ndef__hash__(self):\n...\nclassA(...):\n...\ndef__eq__(self,$O):...\n...\n\n...\n...\ndef__eq__(self,$O):\n...\n;classA(...):\n...\ndef__hash__(self):\n...\n...\nclassA(...):\n...\ndef__eq__(self,$O):...\n...\n\n...\ndef__eq__(self,$O):\n...\n)))"
semgrep-delete-where-no-execute-copy,"AND($X.delete().where(...);NOT(NOT(NOT($X.delete().where(...,$C.execute(...),...).execute()))))"
semgrep-javascript-prompt-copy,"OR(prompt();prompt($X);prompt($X,$Y))"
semgrep-sqlalchemy-execute-raw-query-copy,"OR($CONNECTION.execute($SQL+...,...)\n;$CONNECTION.execute($SQL%(...),...)\n;$CONNECTION.execute($SQL.format(...),...)\n;$CONNECTION.execute(f""...{...}..."",...)\n;AND(OR($QUERY=$SQL+...\n...\n$CONNECTION.execute($QUERY,...)\n\n...\n;$QUERY=$SQL+...\n$CONNECTION.execute($QUERY,...)\n\n...\n...\n);AND(OR($QUERY=$SQL%(...)\n...\n$CONNECTION.execute($QUERY,...)\n\n...\n;$QUERY=$SQL%(...,$CONNECTION.execute($QUERY,...)\n,...)\n...\n);AND(OR($QUERY=$SQL.format(...)\n...\n$CONNECTION.execute($QUERY,...)\n\n...\n;$QUERY=$SQL.format(...,$CONNECTION.execute($QUERY,...)\n,...)\n...\n);AND(OR($QUERY=f""...{...}...""\n...\n$CONNECTION.execute($QUERY,...)\n\n...\n;$QUERY=f""...\n$CONNECTION.execute($QUERY,...)\n\n...{...}...""\n...\n;$QUERY=f""...{...\n$CONNECTION.execute($QUERY,...)\n\n...}...""\n...\n;$QUERY=f""...{...}...\n$CONNECTION.execute($QUERY,...)\n\n...""\n...\n))"
semgrep-insecure-urlretrieve-copy,"OR(urllib.request.urlretrieve(""=~/[Hh][Tt][Tt][Pp]://.*/"",...);$URL=""=~/[Hh][Tt][Tt][Pp]://.*/""\n...\nurllib.request.urlretrieve($URL,...)\n;def$FUNC(...,$URL=""=~/[Hh][Tt][Tt][Pp]://.*/"",...):\n...\nurllib.request.urlretrieve($URL,...)\n)"
semgrep-use-timeout-copy,"OR(AND(NOT(requests.$W(...,timeout=$N,...));NOT(requests.$W(...,**$KWARGS));OR(requests.request(...);requests.get(...);requests.post(...);requests.put(...);requests.delete(...);requests.head(...);requests.patch(...)));AND((OR(NOT($SESSION=requests.Session(...)\n...\n$SESSION.$W(...,timeout=$N,...)\n\n...\n);NOT($SESSION=requests.Session(...,$SESSION.$W(...,timeout=$N,...)\n,...)\n...\n));OR(NOT($SESSION=requests.Session(...)\n...\n$SESSION.$W(...,**$KWARGS)\n\n...\n);NOT($SESSION=requests.Session(...,$SESSION.$W(...,**$KWARGS)\n,...)\n...\n));OR($SESSION=requests.Session(...)\n...\n$SESSION.get(...)\n...\n;$SESSION=requests.Session(...)\n...\n$SESSION.post(...)\n...\n;$SESSION=requests.Session(...)\n...\n$SESSION.put(...)\n...\n;$SESSION=requests.Session(...)\n...\n$SESSION.delete(...)\n...\n;$SESSION=requests.Session(...)\n...\n$SESSION.head(...)\n...\n;$SESSION=requests.Session(...)\n...\n$SESSION.patch(...)\n...\n;$SESSION=requests.Session(...,$SESSION.get(...),...)\n...\n;$SESSION=requests.Session(...,$SESSION.post(...),...)\n...\n;$SESSION=requests.Session(...,$SESSION.put(...),...)\n...\n;$SESSION=requests.Session(...,$SESSION.delete(...),...)\n...\n;$SESSION=requests.Session(...,$SESSION.head(...),...)\n...\n;$SESSION=requests.Session(...,$SESSION.patch(...),...)\n...\n))))"
semgrep-detect-no-csrf-before-method-override-copy,(express.csrf();\n...\nexpress.methodOverride();\n)
semgrep-dangerous-interactive-code-run-copy,"AND(OR($X.push($PAYLOAD,...)\n;$X.runsource($PAYLOAD,...)\n;$X.runcode(code.compile_command($PAYLOAD),...)\n;$PL=code.compile_command($PAYLOAD,...)\n...\n$X.runcode($PL,...)\n);OR((OR($X=code.InteractiveConsole(...)\n...\n$X=code.InteractiveInterpreter(...)\n...\n\n...\n;$X=code.InteractiveConsole(...,$X=code.InteractiveInterpreter(...)\n...\n,...)\n...\n));NOT($X.push(""..."",...)\n);NOT($X.runsource(""..."",...)\n);NOT($X.runcode(code.compile_command(""...""),...)\n);NOT($PL=code.compile_command(""..."",...)\n...\n$X.runcode($PL,...)\n))"
semgrep-detect-insecure-websocket-copy,(r:\bws:\/\/)
semgrep-exec-detected-copy,"AND(NOT(exec(""...""));exec(...))"
semgrep-prototype-pollution-loop-copy,"AND(OR($SMTH=$SMTH[$A]\n;$SMTH=$SMTH[$A]=...\n;$SMTH=$SMTH[$A]&&$Z\n;$SMTH=$SMTH[$A]||$Z\n);OR((OR(for(...){\n...\n$X.forEach(function$NAME(...){\n...\n})\n\n...\n}\n;for(...,$X.forEach(function$NAME(...){\n...\n})\n,...){\n...\n}\n));NOT(NOT(OR())))"
semgrep-incorrect-autoescape-disabled-copy,"AND(jinja2.Environment(...,autoescape=$VAL,...);NOT(jinja2.Environment(...,autoescape=True,...));NOT(jinja2.Environment(...,autoescape=jinja2.select_autoescape(...),...)))"
semgrep-httpsconnection-detected-copy,OR(httplib.HTTPSConnection(...);http.client.HTTPSConnection(...);six.moves.http_client.HTTPSConnection(...))
semgrep-autoescape-disabled-copy,"AND(NOT(jinja2.Environment(...,autoescape=True,...));NOT(jinja2.Environment(...,autoescape=jinja2.select_autoescape(...),...));jinja2.Environment(...))"
semgrep-avoid-shelve-copy,(shelve.$FUNC(...))
semgrep-subprocess-shell-true-copy,"AND(subprocess.$FUNC(...,shell=True,...);NOT(subprocess.$FUNC(""..."",shell=True,...)))"
semgrep-detect-bracket-object-injection-copy,AND(a();b())
semgrep-detect-pseudoRandomBytes-copy,(crypto.pseudoRandomBytes)
semgrep-raw-html-join-copy,"AND(OR(AND(OR([...,...</$TAG
,...].join(...)\n;[...,<$TAG...
,...].join(...)\n);NOT([...,""$HARDCODED"",...].join(""..."")\n))))"
semgrep-eval-detected-copy,"AND(NOT(eval(""...""));eval(...))"
semgrep-unquoted-csv-writer-copy,AND(a();b())
semgrep-javascript-insecure-document-method-copy,"AND(OR($EL.innerHTML=$HTML;\n;$EL.outerHTML=$HTML;\n;document.write(...));NOT($EL.innerHTML=""..."";\n);NOT($EL.outerHTML=""..."";\n);NOT(document.write(""..."")))"
semgrep-insecure-urlopen-ftp-copy,"OR(urllib.request.urlopen(""=~/^[Ff][Tt][Pp]://.*/"",...);$URL=""=~/^[Ff][Tt][Pp]://.*/""\n...\nurllib.request.urlopen($URL,...)\n;def$FUNC(...,$URL=""=~/^[Ff][Tt][Pp]://.*/"",...):\n...\nurllib.request.urlopen($URL,...))"
semgrep-python-reverse-shell-copy,"AND(OR(pty.spawn(""/bin/.*?sh\b"",...);subprocess.call([""/bin/.*?sh\b"",...],...));importsocket\n...\n$S=socket.socket(...)\n...\n$S.connect(($IP,$PORT),...)\n...\)"
semgrepno-auth-over-http-copy,"OR(requests.$W(""=~/http:\/\/.*/"",...,auth=$X,...);$URL=""=~/http:\/\/.../""\n...\nrequests.$W($URL,...,auth=$X,...)\n)"
semgrep-insecure-urlopener-open-copy,"OR(urllib.request.URLopener(...).open(""=~/[Hh][Tt][Tt][Pp]://.*/"",...);AND(OR($OPENERDIRECTOR=urllib.request.URLopener(...)\n...\n$OPENERDIRECTOR.open(""=~/[Hh][Tt][Tt][Pp]://.*/"",...)\n...\n;$OPENERDIRECTOR=urllib.request.URLopener(...,$OPENERDIRECTOR.open(""=~/[Hh][Tt][Tt][Pp]://.*/"",...),...)\n...\n);AND(OR($OPENERDIRECTOR=urllib.request.URLopener(...)\n...\n$URL=""=~/[Hh][Tt][Tt][Pp]://.*/""\n...\n$OPENERDIRECTOR.open($URL,...)\n\n...\n;$OPENERDIRECTOR=urllib.request.URLopener(...,$URL=""=~/[Hh][Tt][Tt][Pp]://.*/""\n...\n$OPENERDIRECTOR.open($URL,...)\n,...)\n...\n);$URL=""=~/[Hh][Tt][Tt][Pp]://.*/""\n...\nurllib.request.URLopener(...).open($URL,...)\n;AND(OR(def$FUNC(...,$URL=""=~/[Hh][Tt][Tt][Pp]://.*/"",...):\n...\nurllib.request.URLopener(...).open($URL,...)\n...\n;def$FUNC(...,$URL=""=~/[Hh][Tt][Tt][Pp]://.*/"",...):\n...\n$OPENERDIRECTOR=urllib.request.URLopener(...)\n...\n\n...\n;def$FUNC(...,$URL=""=~/[Hh][Tt][Tt][Pp]://.*/"",...):\n...\n$OPENERDIRECTOR.open($URL,...)\n...\n;def$FUNC(...\nurllib.request.URLopener(...).open($URL,...)\n...,$URL=""=~/[Hh][Tt][Tt][Pp]://.*/"",...):\n...\n;def$FUNC(...\n$OPENERDIRECTOR=urllib.request.URLopener(...)\n...\n\n...,$URL=""=~/[Hh][Tt][Tt][Pp]://.*/"",...):\n...\n;def$FUNC(...\n$OPENERDIRECTOR.open($URL,...)\n...,$URL=""=~/[Hh][Tt][Tt][Pp]://.*/"",...):\n...\n;def$FUNC(...,$URL=""=~/[Hh][Tt][Tt][Pp]://.*/"",...\nurllib.request.URLopener(...).open($URL,...)\n...):\n...\n;def$FUNC(...,$URL=""=~/[Hh][Tt][Tt][Pp]://.*/"",...\n$OPENERDIRECTOR=urllib.request.URLopener(...)\n...\n\n...):\n...\n;def$FUNC(...,$URL=""=~/[Hh][Tt][Tt][Pp]://.*/"",...\n$OPENERDIRECTOR.open($URL,...)\n...):\n...\n))"
semgrep-javascript-debugger-copy,(debugger;)
semgrep-system-wildcard-detected-copy,"AND(OR((os.system(""...\nsubprocess.$W(...,shell=True,...)\n...""));r:(tar|chmod|chown|rsync)(.*?)\*)"
semgrep-jquery-insecure-method-copy,"OR(AND(OR($.^(html|append|prepend|wrap|wrapInner|wrapAll|before|after|globalEval|getScript)$($VAR,...);$(...).^(html|append|prepend|wrap|wrapInner|wrapAll|before|after|globalEval|getScript)$($VAR,...);jQuery.^(html|append|prepend|wrap|wrapInner|wrapAll|before|after|globalEval|getScript)$($VAR,...);jQuery(...).^(html|append|prepend|wrap|wrapInner|wrapAll|before|after|globalEval|getScript)$($VAR,...));NOT($.^(html|append|prepend|wrap|wrapInner|wrapAll|before|after|globalEval|getScript)$(""..."",...));NOT($(...).^(html|append|prepend|wrap|wrapInner|wrapAll|before|after|globalEval|getScript)$(""..."",...));NOT(jQuery.^(html|append|prepend|wrap|wrapInner|wrapAll|before|after|globalEval|getScript)$(""..."",...));NOT(jQuery(...).^(html|append|prepend|wrap|wrapInner|wrapAll|before|after|globalEval|getScript)$(""..."",...)));AND(OR($(...).^(html|append|prepend|wrap|wrapInner|wrapAll|before|after|globalEval|getScript)$($VAR,...);jQuery(...).^(html|append|prepend|wrap|wrapInner|wrapAll|before|after|globalEval|getScript)$($VAR,...));NOT($(""..."",...).^(html|append|prepend|wrap|wrapInner|wrapAll|before|after|globalEval|getScript)$(...));NOT(jQuery(""..."",...).^(html|append|prepend|wrap|wrapInner|wrapAll|before|after|globalEval|getScript)$(...))))"
semgrep-hardcoded-password-default-argument-copy,"(def$FUNC(...,password=""..."",...):\n...\n)"
semgrep-python.requests.best-practice.use-request-json-shortcut-copy,"AND((...\n...\nrequests.$METHOD(...,body=json.dumps($BODY),...)\nimportrequests;...\nimportjson;..))"
semgrep-detect-disable-mustache-escape-copy,($OBJ.escapeMarkup=false)
semgrep-dangerous-globals-use-copy,"AND(OR(globals().get(...);locals().get(...);globals()[...];locals()[...];AND(OR(($G=globals()\n...\n$G=locals()\n...\n\n...\));OR($G.get(...);$G[...]));$FUNC.__globals__[...]);NOT(globals().get(""...""));NOT(locals().get(""...""));NOT(globals()[""...""]);NOT(locals()[""...""]);NOT($G.get(""...""));NOT($G.get[""...""]);NOT($G[""...""]);NOT($FUNC.__globals__[""...""]);NOT(NOT(OR(NOT(globals()[...\n$FUNC.__globals__[...]=...\n...]=...);NOT(globals()[...\n$FUNC.__globals__[...]=...\n...]=...)))))"
semgrep-formatted-sql-query-copy,"OR($DB.execute(""...""%...);$DB.execute(""..."".format(...));$DB.execute(f""..."");AND(OR((OR($SQL=""...""%...\n...\n$SQL=f""...{$X}...""\n...\n\n...\n;$SQL=""...\n$SQL=f""...{$X}...""\n...\n\n...""%...\n...\n;$SQL=""...""%...\n$SQL=f""...{$X}...""\n...\n\n...\n...\n));$DB.execute($SQL)))"
semgrep-avoid-cPickle-copy,"AND(cPickle.$FUNC(...);NOT(cPickle.$FUNC(""..."")))"
semgrep-no-set-ciphers-copy,($CONTEXT.set_ciphers(...))
semgrep-missing-autoescape-disabled-copy,"AND(NOT(jinja2.Environment(...,autoescape=$VAL,...));jinja2.Environment(...))"
semgrep-dangerous-subprocess-use-audit-copy,"OR(AND(NOT(subprocess.$FUNC(""..."",...));NOT(subprocess.$FUNC([""..."",...],...));NOT(subprocess.$FUNC((""..."",...),...));NOT(subprocess.CalledProcessError(...));NOT(subprocess.SubprocessError(...));subprocess.$FUNC(...));AND(subprocess.$FUNC(""=~/(sh|bash|ksh|csh|tcsh|zsh)/"",""-c"",...);NOT(subprocess.$FUNC(""=~/(sh|bash|ksh|csh|tcsh|zsh)/"",""-c"",""..."",...)));AND(OR(subprocess.$FUNC([""=~/(sh|bash|ksh|csh|tcsh|zsh)/"",""-c"",...],...);subprocess.$FUNC((""=~/(sh|bash|ksh|csh|tcsh|zsh)/"",""-c"",...),...));NOT(subprocess.$FUNC([""=~/(sh|bash|ksh|csh|tcsh|zsh)/"",""-c"",""..."",...],...));NOT(subprocess.$FUNC((""=~/(sh|bash|ksh|csh|tcsh|zsh)/"",""-c"",""..."",...),...)));AND(subprocess.$FUNC(""=~/(python)/"",...);NOT(subprocess.$FUNC(""=~/(python)/"",""..."",...)));AND(OR(subprocess.$FUNC([""=~/(python)/"",...],...);subprocess.$FUNC((""=~/(python)/"",...),...));NOT(subprocess.$FUNC([""=~/(python)/"",""..."",...],...));NOT(subprocess.$FUNC((""=~/(python)/"",""..."",...),...))))"
semgrep-avoid-bind-to-all-interfaces-copy,"OR($S=socket.socket(...)\n...\n$S.bind((""0.0.0.0"",...))\n;$S=socket.socket(...)\n...\n$S.bind((""::"",...))\n;$S=socket.socket(...)\n...\n$S.bind(("""",...))\n)"
semgrep-non-literal-import-copy,"AND(importlib.import_module($NAME,...)\n;NOT(importlib.import_module(""..."",...)\n))"
semgrep-manual-counter-create-copy,"($DICT={}\n...\nfor$KEY,$VALUEin$OTHERDICT.items():\n...\nif$KEYnotin$DICT:\n...\n$DICT[$KEY]=0\n...\n$DICT[$KEY]+=1\n)"
semgrep-javascript-alert-copy,OR(alert();alert($X))
semgrep-dangerous-interactive-code-run-audit-copy,"AND(OR($X.push($PAYLOAD,...)\n;$X.runsource($PAYLOAD,...)\n;$X.runcode(code.compile_command($PAYLOAD),...)\n;$PL=code.compile_command($PAYLOAD,...)\n...\n$X.runcode($PL,...)\n);OR((OR($X=code.InteractiveConsole(...)\n...\n$X=code.InteractiveInterpreter(...)\n...\n\n...\n;$X=code.InteractiveConsole(...,$X=code.InteractiveInterpreter(...)\n...\n,...)\n...\n));NOT($X.push(""..."",...)\n);NOT($X.runsource(""..."",...)\n);NOT($X.runcode(code.compile_command(""...""),...)\n);NOT($PL=code.compile_command(""..."",...)\n...\n$X.runcode($PL,...)\n))"
semgrep-avoid-dill-copy,"AND(dill.$FUNC(...);NOT(dill.$FUNC(""..."")))"
semgrep-dynamic-urllib-use-detected-copy,"AND(NOT(urllib.$W(""...""));NOT(urllib.request.$W(""...""));NOT($OPENER.$W(""...""));OR(urllib.urlopen(...);urllib.request.urlopen(...);urllib.urlretrieve(...);urllib.request.urlretrieve(...);AND(OR((OR($OPENER=urllib.URLopener(...)\n...\n$OPENER=urllib.request.FancyURLopener(...)\n...\n\n...\n;$OPENER=urllib.URLopener(...,$OPENER=urllib.request.FancyURLopener(...)\n...\n,...)\n...\n));OR($OPENER.open(...);$OPENER.retrieve(...)))))"
semgrep-regex_dos-copy,"AND($A=re.compile(""$B"",...)\n...\n$A.(?!(escape)|(purge))(...)\n)"
semgrep-insecure-innerhtml-copy,"AND($EL.innerHTML=$HTML;\n;NOT($EL.innerHTML=""..."";\n))"
semgrep-arbitrary-sleep-copy,AND(NOT(time.sleep($F(...)));OR(time.sleep($X:int)\n;time.sleep($X:float)\n))
semgrep-avoid-pickle-copy,"AND(OR(pickle.$FUNC(...);_pickle.$FUNC(...));NOT(pickle.$FUNC(""...""));NOT(_pickle.$FUNC(""..."")))"
semgrep-detect-non-literal-require-copy,AND(a();b())
semgrep-prototype-pollution-function-copy,AND(a();b())
semgrep-assigned-undefined-copy,OR(undefined=$X;;varundefined=$X;;letundefined=$X;;constundefined=$X;)
semgrep-template-autoescape-off,(r:{%\s+autoescape\s+off\s+%})
semgrep-unspecified-open-encoding-copy,"AND((NOT(open(...,open(...,encoding=""..."",...),...));NOT(open(...,open($F,""..."",$B,""..."",...),...));OR(open(...,open($FILE),...);open(...,open($FILE,...),...);open(...,open($FILE,$M,...),...);open(...,open\(.*(?:encoding|mode)=.*\),...);open(...,open($FILE,$MODE,...),...);open(...,open($FILE,...,mode=$MODE,...),...))))"
semgrep-detect-buffer-noassert-copy,"AND($OBJ.(read|write)(U?Int8|(U?Int(16|32)|Float|Double)(LE|BE))(...,true))"
semgrep-jquery-insecure-selector-copy,"AND(OR($(<...window...>)\n;$(<...location...>)\n;AND($X=<...window...>;\n...\n$(<...$X...>);\n);AND($X=<...location...>;\n...\n$(<...$X...>);\n);AND(OR((OR(function$FUNC(...,$Y,...){\n...\nfunction(...,$Z,...){\n...\n$Y=<...$Z...>;\n...\n}\n\n...\n}\n;function$FUNC(...\nfunction(...,$Z,...){\n...\n$Y=<...$Z...>;\n...\n}\n\n...,$Y,...){\n...\n}\n;function$FUNC(...,$Y,...\nfunction(...,$Z,...){\n...\n$Y=<...$Z...>;\n...\n}\n\n...){\n...\n}\n));OR($(<...$Y...>)\n;$(""...""+(<...$Y...>))\n;$((<...$Y...>)+""..."")\n);NOT($JQUERY.each(function($INDEX,$Y){\n...\n})\n));NOT($(window)\n);NOT($(document)\n);NOT($(this)\n))"
semgrep-listen-eval-copy,(logging.config.listen(...))
semgrep-dangerous-annotations-usage-copy,"AND($C.__annotations__[$NAME]=(?!(int|float|complex|list|tuple|range|str|bytes|bytearray|memoryview|set|frozenset|dict))\n;NOT($C.__annotations__[$NAME]=""...""\n);NOT($C.__annotations__[$NAME]=typing.$Y\n))"
semgrep-manual-defaultdict-list-create-copy,"OR($DICT={}\n...\nfor$KEY,$VALUEin$OTHERDICT.items():\n...\nif$KEYnotin$DICT:\n...\n$DICT[$KEY]=[]\n...\n$DICT[$KEY].append(...)\n;$DICT={}\n...\nfor$KEY,$VALUEin$OTHERDICT.items():\n...\n$DICT.setdefault($KEY,[]).append(...)\n)"
semgrep-insufficient-postmessage-origin-validation-copy,"OR(AND(NOT(window.addEventListener('message';function($OBJ){...if(<...$OBJ.origin...>){...}...}
,...)\n);window.addEventListener('message';...,...)\n;window.addEventListener('message';function($OBJ){...}
,...)\n);AND(OR(NOT((function$FNAME($OBJ){...if(<...$OBJ.origin...>){...}...
}\n...\n$FNAME=(...)=>{...if(<...$OBJ.origin...>){...}...
}\n...\n\n...\));(function$FNAME($OBJ){...}\n...\n$FNAME=(...)=>{...}\n...\n\n...\));window.addEventListener('message';$FNAME,...)\n))"
semgrep-logging-error-without-handling-copy,AND((OR(try:\n...\nexcept...:\n...\n...\nlogger.$FUNC(...)\n...\nraise\n\n...\n;try:\n...\nexcept...:\n...\n...\nlogger.$FUNC(...)\n...\nraise$EX\n\n...\n;try:\n...\nexcept...:\n...\n...\nlogger.$FUNC(...)\n...\nraise$EXfrom$EX2\n\n...\n;try:\n...\nlogger.$FUNC(...)\n...\nraise\n\n...\nexcept...:\n...\n...\n;try:\n...\nlogger.$FUNC(...)\n...\nraise$EX\n\n...\nexcept...:\n...\n...\n;try:\n...\nlogger.$FUNC(...)\n...\nraise$EXfrom$EX2\n\n...\nexcept...:\n...\n...\n;try:\n...\nexcept...\nlogger.$FUNC(...)\n...\nraise\n\n...:\n...\n...\n;try:\n...\nexcept...\nlogger.$FUNC(...)\n...\nraise$EX\n\n...:\n...\n...\n;try:\n...\nexcept...\nlogger.$FUNC(...)\n...\nraise$EXfrom$EX2\n\n...:\n...\n...\n;try:\n...\nexcept...:\n...\nlogger.$FUNC(...)\n...\nraise\n\n...\n...\n;try:\n...\nexcept...:\n...\nlogger.$FUNC(...)\n...\nraise$EX\n\n...\n...\n;try:\n...\nexcept...:\n...\nlogger.$FUNC(...)\n...\nraise$EXfrom$EX2\n\n...\n...\n);OR()))
semgrep-use-defused-xmlrpc,OR(importxmlrpclib;importSimpleXMLRPCServer;importxmlrpc)
semgrep-http-not-https-connection-copy,OR(urllib3.HTTPConnectionPool(...);urllib3.connectionpool.HTTPConnectionPool(...))
semgrep-socket-shutdown-close-copy,AND($SOCK.shutdown(socket.$A)\n$SOCK.close()\n;NOT(NOT(OR(NOT(try:\n...\nexcept...:\n...\ntry:\n...\nfinally:\n...\n$SOCK.close()\n\n...\n$SOCK.close()\n);NOT(try:\n...\ntry:\n...\nfinally:\n...\n$SOCK.close()\n\n...\nexcept...:\n...\n$SOCK.close()\n);NOT(try:\n...\nexcept...\ntry:\n...\nfinally:\n...\n$SOCK.close()\n\n...:\n...\n$SOCK.close()\n)))))
semgrep-prohibit-jquery-html-copy,"AND($X.html(...)\n;NOT($X.html(""..."",...)\n))"
semgrep-manual-defaultdict-dict-create-copy,"OR($DICT={}\n...\nfor$KEY,$VALUEin$OTHERDICT.items():\n...\nif$KEYnotin$DICT:\n...\n$DICT[$KEY]={}\n...\n$DICT[$KEY].update(...)\n;$DICT={}\n...\nfor$KEY,$VALUEin$OTHERDICT.items():\n...\n$DICT.setdefault($KEY,{}).update(...)\n)"
semgrep-weak-ssl-version-copy,OR(ssl.PROTOCOL_SSLv2;ssl.PROTOCOL_SSLv3;ssl.PROTOCOL_TLSv1;ssl.PROTOCOL_TLSv1_1;pyOpenSSL.SSL.SSLv2_METHOD;pyOpenSSL.SSL.SSLv23_METHOD;pyOpenSSL.SSL.SSLv3_METHOD;pyOpenSSL.SSL.TLSv1_METHOD;pyOpenSSL.SSL.TLSv1_1_METHOD)
semgrep-insecure-urlopener-retrieve-ftp-copy,"OR(urllib.request.URLopener(...).retrieve(""=~/[Ff][Tt][Pp]://.*/"",...);AND(OR($OPENERDIRECTOR=urllib.request.URLopener(...)\n...\n$OPENERDIRECTOR.retrieve(""=~/[Ff][Tt][Pp]://.*/"",...)\n...\n;$OPENERDIRECTOR=urllib.request.URLopener(...,$OPENERDIRECTOR.retrieve(""=~/[Ff][Tt][Pp]://.*/"",...),...)\n...\n);AND(OR($OPENERDIRECTOR=urllib.request.URLopener(...)\n...\n$URL=""=~/[Ff][Tt][Pp]://.*/""\n...\n$OPENERDIRECTOR.retrieve($URL,...)\n\n...\n;$OPENERDIRECTOR=urllib.request.URLopener(...,$URL=""=~/[Ff][Tt][Pp]://.*/""\n...\n$OPENERDIRECTOR.retrieve($URL,...)\n,...)\n...\n);$URL=""=~/[Ff][Tt][Pp]://.*/""\n...\nurllib.request.URLopener(...).retrieve($URL,...)\n;AND(OR(def$FUNC(...,$URL=""=~/[Ff][Tt][Pp]://.*/"",...):\n...\nurllib.request.URLopener(...).retrieve($URL,...)\n...\n;def$FUNC(...,$URL=""=~/[Ff][Tt][Pp]://.*/"",...):\n...\n$OPENERDIRECTOR=urllib.request.URLopener(...)\n...\n\n...\n;def$FUNC(...,$URL=""=~/[Ff][Tt][Pp]://.*/"",...):\n...\n$OPENERDIRECTOR.retrieve($URL,...)\n...\n;def$FUNC(...\nurllib.request.URLopener(...).retrieve($URL,...)\n...,$URL=""=~/[Ff][Tt][Pp]://.*/"",...):\n...\n;def$FUNC(...\n$OPENERDIRECTOR=urllib.request.URLopener(...)\n...\n\n...,$URL=""=~/[Ff][Tt][Pp]://.*/"",...):\n...\n;def$FUNC(...\n$OPENERDIRECTOR.retrieve($URL,...)\n...,$URL=""=~/[Ff][Tt][Pp]://.*/"",...):\n...\n;def$FUNC(...,$URL=""=~/[Ff][Tt][Pp]://.*/"",...\nurllib.request.URLopener(...).retrieve($URL,...)\n...):\n...\n;def$FUNC(...,$URL=""=~/[Ff][Tt][Pp]://.*/"",...\n$OPENERDIRECTOR=urllib.request.URLopener(...)\n...\n\n...):\n...\n;def$FUNC(...,$URL=""=~/[Ff][Tt][Pp]://.*/"",...\n$OPENERDIRECTOR.retrieve($URL,...)\n...):\n...\n))"
semgrep-wildcard-postmessage-configuration-copy,"($OBJECT.postMessage(...,'*'))"
semgrep-incomplete-sanitization-copy,"AND($STR.replace((^[\""\']([\'\""\<\>\*\|\{\}\[\]\%\$]{1}|\\n|\\r|\\t|\\&)[\""\']$:string),...)\n)"
semgrep-html-in-template-string-copy,AND(OR(`.*</?[a-zA-Z]${$VAR}...`\n;`...${$VAR}.*</?[a-zA-Z]`\n))
semgrep-prototype-pollution-assignment-copy,AND($X[$B]=...\n;NOT($X[$B]='...'\n);((OR();OR())))
semgrep-insecure-request-object-copy,"OR(urllib.request.Request(""=~/[Hh][Tt][Tt][Pp]://.*/"",...);$URL=""=~/[Hh][Tt][Tt][Pp]://.*/""\n...\nurllib.request.Request($URL,...)\n;def$FUNC(...,$URL=""=~/[Hh][Tt][Tt][Pp]://.*/"",...):\n...\nurllib.request.Request($URL,...)\n)"
semgrep-zlib-async-loop-copy,"AND(OR((OR(for(...){\n...\n$SMTH.reduceRight(...)\n\n...\n}\n;for(...,$SMTH.reduceRight(...)\n,...){\n...\n}\n));zlib.^.+$(?<!Sync)(...)))"
